{
  "stringNewSubTitleManagerHashMap": {
    "Java高级教程": {
      "ableToLearn": false,
      "stringNewTitleManagerHashMap": {
        "Java测验": {
          "name": "Java测验",
          "resource": "src\\pages\\Java测验",
          "learned": false,
          "date": "Dec 7, 2020, 1:49:59 PM",
          "integerSelectProblemHashMap": {
            "1": {
              "id": 1,
              "problem": "下列关于包的描述中错误的是（ ）",
              "A": "使用包的原因之一是避免类名重复",
              "B": "包是由.class文件组成的一个集合，是一个文件夹",
              "C": "功能相同或者相关的类一般组织在一个包中",
              "D": "包只能定义一层，即包中不能再有包",
              "answer": "D",
              "yourAnswer": "A"
            },
            "2": {
              "id": 2,
              "problem": "下列选项中，抽象类的关键字是（）？",
              "A": "interface",
              "B": "implements",
              "C": "abstract",
              "D": "class",
              "answer": "C",
              "yourAnswer": "A"
            },
            "3": {
              "id": 3,
              "problem": "下列哪一个关键字用于实现接口来定义类？( )",
              "A": "extends",
              "B": "implements",
              "C": "abstract",
              "D": "interface",
              "answer": "B",
              "yourAnswer": "A"
            },
            "4": {
              "id": 4,
              "problem": "下面选项中关于 abstract 的使用正确的是( )。",
              "A": "private abstract void blood();",
              "B": "abstract final void blood ();",
              "C": "static abstract void blood ();",
              "D": "public abstract void blood ();",
              "answer": "D",
              "yourAnswer": "A"
            },
            "5": {
              "id": 5,
              "problem": "java中所有类的父类是（）？",
              "A": "object",
              "B": "Father",
              "C": "Lang",
              "D": "Exception",
              "answer": "A",
              "yourAnswer": "A"
            },
            "6": {
              "id": 6,
              "problem": "（ ）是Java语言的关键字。",
              "A": "public",
              "B": "static",
              "C": "void",
              "D": "以上都是",
              "answer": "D",
              "yourAnswer": "A"
            },
            "7": {
              "id": 7,
              "problem": "BufferedWriter类是Writer类的子类，BufferedWriter类中的（）方法可以插入一个换行符。",
              "A": "void newLine()",
              "B": "void close()",
              "C": "void flush()",
              "D": "void write(String str)",
              "answer": "A",
              "yourAnswer": "A"
            },
            "8": {
              "id": 8,
              "problem": "变量命名规范说法正确的是( )",
              "A": "不同类型的变量，可以起相同的名字；",
              "B": "变量由字母、下划线、数字、$符号随意组成；",
              "C": "变量不能以数字作为开头；",
              "D": "A和a在java中是同一个变量；",
              "answer": "A",
              "yourAnswer": "A"
            },
            "9": {
              "id": 9,
              "problem": "下列关于引入包的描述中，错误的是（ ）。",
              "A": "使用项目中其他包中的类时，需要在源程序中写import语句",
              "B": "import语句写在类声明的上面，package语句的下面",
              "C": "import可以引入包中所有类或其中一个类",
              "D": "import语句必须是源文件中第一条语句",
              "answer": "D",
              "yourAnswer": "A"
            },
            "10": {
              "id": 10,
              "problem": "下列不是重载方法的特征的是（ ）。",
              "A": "参数个数不同",
              "B": "返回值类型不同",
              "C": "参数类型不同",
              "D": "方法名相同",
              "answer": "B",
              "yourAnswer": "A"
            },
            "11": {
              "id": 11,
              "problem": "一个类可同时定义许多同名的方法，这些方法的形式参数个数、类型或顺序各不相同，传回的值也可以不相同，这种特性称为（ ）。",
              "A": "继承",
              "B": "重写",
              "C": "重载",
              "D": "封装",
              "answer": "C",
              "yourAnswer": "A"
            },
            "12": {
              "id": 12,
              "problem": "下列哪一个变量不需要创建对象，直接可以根据类名调用该属性？",
              "A": "public String str;",
              "B": "String str;",
              "C": "public static String str;",
              "D": "str",
              "answer": "C",
              "yourAnswer": "A"
            },
            "13": {
              "id": 13,
              "problem": "下列不是重载方法的特征的是（ ）。",
              "A": "参数个数不同",
              "B": "返回值类型不同",
              "C": "参数类型不同",
              "D": "方法名相同",
              "answer": "B",
              "yourAnswer": "A"
            },
            "14": {
              "id": 14,
              "problem": "下列关于引入包的描述中，错误的是（ ）。",
              "A": "使用项目中其他包中的类时，需要在源程序中写import语句",
              "B": "import语句写在类声明的上面，package语句的下面",
              "C": "import可以引入包中所有类或其中一个类",
              "D": "import语句必须是源文件中第一条语句",
              "answer": "D",
              "yourAnswer": "A"
            },
            "15": {
              "id": 15,
              "problem": "（ ）是Java语言的关键字。",
              "A": "public",
              "B": "static",
              "C": "void",
              "D": "以上都是",
              "answer": "D",
              "yourAnswer": "A"
            },
            "16": {
              "id": 16,
              "problem": "以下标识符中哪项是不合法的( )",
              "A": "int",
              "B": "$double",
              "C": "hello",
              "D": "BigMeaninglessName",
              "answer": "A",
              "yourAnswer": "A"
            },
            "17": {
              "id": 17,
              "problem": "接口中方法的修饰符默认是？",
              "A": "public",
              "B": "abstract",
              "C": "public abstract",
              "D": "public static final",
              "answer": "C",
              "yourAnswer": "A"
            },
            "18": {
              "id": 18,
              "problem": "以下关于多态的描述中错误的是（ ）。",
              "A": "重载和重写都是多态的表现形式",
              "B": "多态性分为动态多态性(动态绑定)和静态多态性两种",
              "C": "多态性可以加快代码的运行速度",
              "D": "多态性是面向对象的核心特征之一",
              "answer": "C",
              "yourAnswer": "A"
            },
            "19": {
              "id": 19,
              "problem": "有一段java 应用程序，它的主类名是a1，那么保存它的源文件名可以是( )",
              "A": "a1.java",
              "B": "a1.class",
              "C": "a1",
              "D": "都对",
              "answer": "A",
              "yourAnswer": "A"
            },
            "20": {
              "id": 20,
              "problem": "一个类要实现多个接口，用什么关键字?",
              "A": "extends",
              "B": "implements",
              "C": "instanceof",
              "D": "import",
              "answer": "B",
              "yourAnswer": "A"
            }
          }
        },
        "Java文档注释": {
          "name": "Java文档注释",
          "resource": "src\\pages\\Java文档注释",
          "learned": false,
          "date": "Dec 7, 2020, 1:49:59 PM",
          "integerSelectProblemHashMap": {
            "1": {
              "id": 1,
              "problem": "在创建对象时必须( )",
              "A": "先声明对象，然后才能使用对象",
              "B": "先声明对象，为对象分配内存空间，然后才能使用对象",
              "C": "先声明对象，为对象分配内存空间，对对象初始化，然后才能使用对象",
              "D": "上述说法都对",
              "answer": "C",
              "yourAnswer": "A"
            },
            "2": {
              "id": 2,
              "problem": "以下关于继承的叙述正确的是( )",
              "A": "在Java中类只允许单一继承",
              "B": "在Java中一个类只能实现一个接口",
              "C": "在Java中一个类不能同时继承一个类和实现一个接口",
              "D": "在Java中接口只允许单一继承",
              "answer": "A",
              "yourAnswer": "A"
            },
            "3": {
              "id": 3,
              "problem": "以下标识符中哪项是不合法的( )",
              "A": "int",
              "B": "$double",
              "C": "hello",
              "D": "BigMeaninglessName",
              "answer": "A",
              "yourAnswer": "A"
            },
            "4": {
              "id": 4,
              "problem": "下列关于引入包的描述中，错误的是（ ）。",
              "A": "使用项目中其他包中的类时，需要在源程序中写import语句",
              "B": "import语句写在类声明的上面，package语句的下面",
              "C": "import可以引入包中所有类或其中一个类",
              "D": "import语句必须是源文件中第一条语句",
              "answer": "D",
              "yourAnswer": "A"
            },
            "5": {
              "id": 5,
              "problem": "以下关于继承的叙述正确的是( )",
              "A": "在Java中类只允许单一继承",
              "B": "在Java中一个类只能实现一个接口",
              "C": "在Java中一个类不能同时继承一个类和实现一个接口",
              "D": "在Java中接口只允许单一继承",
              "answer": "A",
              "yourAnswer": "A"
            },
            "6": {
              "id": 6,
              "problem": "下列关于打包的描述中，错误的是（ ）。",
              "A": "一个源文件中最多包含一条package语句，且必须是第一条语句",
              "B": "一个源文件中定义的类的字节码可以存放于不同的包中",
              "C": "若源文件中没有包含package语句，则类的字节码被放入无名包中",
              "D": "不在一个源文件中定义的子类和父类可以位于不同包中",
              "answer": "B",
              "yourAnswer": "A"
            },
            "7": {
              "id": 7,
              "problem": "下面哪个是applet传递参数的正确方式？（ ）",
              "A": "\u003capplet code\u003dTest.class age\u003d33 width\u003d1 height\u003d1\u003e",
              "B": "\u003cparam name\u003dage value\u003d33\u003e",
              "C": "\u003capplet code\u003dTest.class name\u003dage value\u003d33 width\u003d1 height\u003d1\u003e",
              "D": "\u003capplet Test 33\u003e",
              "answer": "B",
              "yourAnswer": "A"
            },
            "8": {
              "id": 8,
              "problem": "接口中有几个构造方法？",
              "A": "0",
              "B": "1",
              "C": "2",
              "D": "以上都不对",
              "answer": "A",
              "yourAnswer": "A"
            },
            "9": {
              "id": 9,
              "problem": "对于私有构造方法，以下说法正确的是（ ）。",
              "A": "构造方法如果被限定为private则会产生编译错误",
              "B": "不能通过私有构造方法产生类的对象",
              "C": "私有构造方法不能在类外通过new调用创建对象",
              "D": "具有私有构造方法的类不能被继承",
              "answer": "C",
              "yourAnswer": "A"
            },
            "10": {
              "id": 10,
              "problem": "下列关于构造方法的叙述中，错误的是( )",
              "A": "Java语言规定构造方法名与类名必须相同",
              "B": "Java语言规定构造方法没有返回值，但不用void声明",
              "C": "Java语言规定构造方法不可以重载",
              "D": "Java语言规定构造方法只能通过new自动调用",
              "answer": "C",
              "yourAnswer": "A"
            },
            "11": {
              "id": 11,
              "problem": "以下关于多态的描述中错误的是（ ）。",
              "A": "重载和重写都是多态的表现形式",
              "B": "多态性分为动态多态性(动态绑定)和静态多态性两种",
              "C": "多态性可以加快代码的运行速度",
              "D": "多态性是面向对象的核心特征之一",
              "answer": "C",
              "yourAnswer": "A"
            },
            "12": {
              "id": 12,
              "problem": "下列选项中，抽象类的关键字是（）？",
              "A": "interface",
              "B": "implements",
              "C": "abstract",
              "D": "class",
              "answer": "C",
              "yourAnswer": "A"
            },
            "13": {
              "id": 13,
              "problem": "类中存在一个方法int getValue(int x){…}，以下能与这个方法重载的是（ ）。",
              "A": "public getValue(int x){…};",
              "B": "void getValue(int x){…};",
              "C": "int getValue(int x, int y){…};",
              "D": "int get(int x){…};",
              "answer": "C",
              "yourAnswer": "A"
            },
            "14": {
              "id": 14,
              "problem": "对于私有构造方法，以下说法正确的是（ ）。",
              "A": "构造方法如果被限定为private则会产生编译错误",
              "B": "不能通过私有构造方法产生类的对象",
              "C": "私有构造方法不能在类外通过new调用创建对象",
              "D": "具有私有构造方法的类不能被继承",
              "answer": "C",
              "yourAnswer": "A"
            },
            "15": {
              "id": 15,
              "problem": "接口中方法的方法体内可以有几条代码？",
              "A": "0",
              "B": "1",
              "C": "2",
              "D": "多条",
              "answer": "A",
              "yourAnswer": "A"
            },
            "16": {
              "id": 16,
              "problem": "下面选项中关于 abstract 的使用正确的是( )。",
              "A": "private abstract void blood();",
              "B": "abstract final void blood ();",
              "C": "static abstract void blood ();",
              "D": "public abstract void blood ();",
              "answer": "D",
              "yourAnswer": "A"
            },
            "17": {
              "id": 17,
              "problem": "一个类要实现多个接口，用什么关键字?",
              "A": "extends",
              "B": "implements",
              "C": "instanceof",
              "D": "import",
              "answer": "B",
              "yourAnswer": "A"
            },
            "18": {
              "id": 18,
              "problem": "如果希望类中成员即使被子类继承也只能通过父类方法间接访问，则应该使用修饰符（）",
              "A": "public",
              "B": "protected",
              "C": "不写",
              "D": "private",
              "answer": "D",
              "yourAnswer": "A"
            },
            "19": {
              "id": 19,
              "problem": "下面哪一个循环会导致死循环？( )",
              "A": "for (int k \u003d 0; k \u003c 0; k++)",
              "B": "for (int k \u003d 10; k \u003e 0; k--)",
              "C": "for (int k \u003d 0; k \u003c 10; k--)",
              "D": " for (int k \u003d 0; k \u003e 10; k++)",
              "answer": "C",
              "yourAnswer": "A"
            },
            "20": {
              "id": 20,
              "problem": "不是合法标识符的是（）",
              "A": "BigO1Long$223",
              "B": "Utfint",
              "C": "$12s",
              "D": "3d",
              "answer": "D",
              "yourAnswer": "A"
            }
          }
        },
        "Java8新特性": {
          "name": "Java8新特性",
          "resource": "src\\pages\\Java8新特性",
          "learned": false,
          "date": "Dec 7, 2020, 1:49:59 PM",
          "integerSelectProblemHashMap": {
            "1": {
              "id": 1,
              "problem": "下面哪一个循环会导致死循环？( )",
              "A": "for (int k \u003d 0; k \u003c 0; k++)",
              "B": "for (int k \u003d 10; k \u003e 0; k--)",
              "C": "for (int k \u003d 0; k \u003c 10; k--)",
              "D": " for (int k \u003d 0; k \u003e 10; k++)",
              "answer": "C",
              "yourAnswer": "A"
            },
            "2": {
              "id": 2,
              "problem": "java中所有类的父类是（）？",
              "A": "object",
              "B": "Father",
              "C": "Lang",
              "D": "Exception",
              "answer": "A",
              "yourAnswer": "A"
            },
            "3": {
              "id": 3,
              "problem": "以下程序的结果是（ ）。class Base {     protected void fun(){         System.out.println(0);     } } class Derived extends Base {     protected void fun(){         System.out.println(1);     } } public class Test {     public static void main(String[] args) {         Base b1 \u003d new Derived();         b1.fun();     } }",
              "A": "运行错误",
              "B": "编译错误",
              "C": "0",
              "D": "1",
              "answer": "D",
              "yourAnswer": "A"
            },
            "4": {
              "id": 4,
              "problem": "下面哪一个循环会导致死循环？( )",
              "A": "for (int k \u003d 0; k \u003c 0; k++)",
              "B": "for (int k \u003d 10; k \u003e 0; k--)",
              "C": "for (int k \u003d 0; k \u003c 10; k--)",
              "D": " for (int k \u003d 0; k \u003e 10; k++)",
              "answer": "C",
              "yourAnswer": "A"
            },
            "5": {
              "id": 5,
              "problem": "以下关于重载的说法错误的是（ ）。",
              "A": "重载的方法只要定义正确，调用时就不会有歧义性。",
              "B": "重载的方法通常实现相似的功能",
              "C": "重载的方法可以互相调用，提高代码复用",
              "D": "重载是多态的一种表现形式",
              "answer": "A",
              "yourAnswer": "A"
            },
            "6": {
              "id": 6,
              "problem": "以下没有体现出封装性的是（ ）。",
              "A": "将类的成员用访问权限修饰符加以访问控制",
              "B": "提供成员方法操作成员变量",
              "C": "将类的全部成员都设定为public权限",
              "D": "将类按照不同的包组织管理",
              "answer": "C",
              "yourAnswer": "A"
            },
            "7": {
              "id": 7,
              "problem": "以下关于构造函数的描述错误的是( )",
              "A": "构造函数的返回类型只能是void型",
              "B": "构造函数是类的一种特殊函数，它的方法名必须与类名相同。",
              "C": "构造函数的主要作用是完成对类的对象的初始化工作。",
              "D": "一般在创建新对象时，系统会自动调用构造函数。",
              "answer": "A",
              "yourAnswer": "A"
            },
            "8": {
              "id": 8,
              "problem": "java中所有类的父类是（）？",
              "A": "object",
              "B": "Father",
              "C": "Lang",
              "D": "Exception",
              "answer": "A",
              "yourAnswer": "A"
            },
            "9": {
              "id": 9,
              "problem": "接口中的属性会自动被修饰为？",
              "A": "public static",
              "B": "static final",
              "C": "public static final",
              "D": "public final",
              "answer": "C",
              "yourAnswer": "A"
            },
            "10": {
              "id": 10,
              "problem": "已知A类具有以下四个成员方法，a是A类的对象，则a.fun(1, 3.14F)调用的是（ ）。",
              "A": "public void fun(int a, double b){…}",
              "B": "public int fun(double a, double b){…}",
              "C": "public void fun(float a, float b){…}",
              "D": "public float fun(int a, float b){…}",
              "answer": "D",
              "yourAnswer": "A"
            },
            "11": {
              "id": 11,
              "problem": "以下没有体现出封装性的是（ ）。",
              "A": "将类的成员用访问权限修饰符加以访问控制",
              "B": "提供成员方法操作成员变量",
              "C": "将类的全部成员都设定为public权限",
              "D": "将类按照不同的包组织管理",
              "answer": "C",
              "yourAnswer": "A"
            },
            "12": {
              "id": 12,
              "problem": "下列关于构造方法的叙述中，错误的是( )",
              "A": "Java语言规定构造方法名与类名必须相同",
              "B": "Java语言规定构造方法没有返回值，但不用void声明",
              "C": "Java语言规定构造方法不可以重载",
              "D": "Java语言规定构造方法只能通过new自动调用",
              "answer": "C",
              "yourAnswer": "A"
            },
            "13": {
              "id": 13,
              "problem": "接口中所有的方法都是？",
              "A": "实现方法",
              "B": "抽象方法",
              "C": "无返回值的方法",
              "D": "有返回值的方法",
              "answer": "B",
              "yourAnswer": "A"
            },
            "14": {
              "id": 14,
              "problem": "以下不是面向对象特征的是（ ）。",
              "A": "继承",
              "B": "代码复制",
              "C": "封装",
              "D": "多态",
              "answer": "B",
              "yourAnswer": "A"
            },
            "15": {
              "id": 15,
              "problem": "如果希望类中成员即使被子类继承也只能通过父类方法间接访问，则应该使用修饰符（）",
              "A": "public",
              "B": "protected",
              "C": "不写",
              "D": "private",
              "answer": "D",
              "yourAnswer": "A"
            },
            "16": {
              "id": 16,
              "problem": "接口中方法的修饰符默认是？",
              "A": "public",
              "B": "abstract",
              "C": "public abstract",
              "D": "public static final",
              "answer": "C",
              "yourAnswer": "A"
            },
            "17": {
              "id": 17,
              "problem": "下列哪个是合法的Java标识符？( )",
              "A": "Tree\u0026Glasses",
              "B": "FirstJavaApplet",
              "C": "*theLastOne",
              "D": "273.5",
              "answer": "B",
              "yourAnswer": "A"
            },
            "18": {
              "id": 18,
              "problem": "java中所有类的父类是（）？",
              "A": "object",
              "B": "Father",
              "C": "Lang",
              "D": "Exception",
              "answer": "A",
              "yourAnswer": "A"
            },
            "19": {
              "id": 19,
              "problem": "( )是FileInputStream的子类，可用于读取二进制文件.",
              "A": "DataOutputStream",
              "B": "DataInputStream",
              "C": "Reader",
              "D": "Writer",
              "answer": "B",
              "yourAnswer": "A"
            },
            "20": {
              "id": 20,
              "problem": "接口中有几个构造方法？",
              "A": "0",
              "B": "1",
              "C": "2",
              "D": "以上都不对",
              "answer": "A",
              "yourAnswer": "A"
            }
          }
        },
        "Java序列化": {
          "name": "Java序列化",
          "resource": "src\\pages\\Java序列化",
          "learned": false,
          "date": "Dec 7, 2020, 1:49:59 PM",
          "integerSelectProblemHashMap": {
            "1": {
              "id": 1,
              "problem": "下列关于包的描述中错误的是（ ）",
              "A": "使用包的原因之一是避免类名重复",
              "B": "包是由.class文件组成的一个集合，是一个文件夹",
              "C": "功能相同或者相关的类一般组织在一个包中",
              "D": "包只能定义一层，即包中不能再有包",
              "answer": "D",
              "yourAnswer": "A"
            },
            "2": {
              "id": 2,
              "problem": "以下没有体现出封装性的是（ ）。",
              "A": "将类的成员用访问权限修饰符加以访问控制",
              "B": "提供成员方法操作成员变量",
              "C": "将类的全部成员都设定为public权限",
              "D": "将类按照不同的包组织管理",
              "answer": "C",
              "yourAnswer": "A"
            },
            "3": {
              "id": 3,
              "problem": "以下关于继承的叙述正确的是( )",
              "A": "在Java中类只允许单一继承",
              "B": "在Java中一个类只能实现一个接口",
              "C": "在Java中一个类不能同时继承一个类和实现一个接口",
              "D": "在Java中接口只允许单一继承",
              "answer": "A",
              "yourAnswer": "A"
            },
            "4": {
              "id": 4,
              "problem": "已知A类具有以下四个成员方法，a是A类的对象，则a.fun(1, 3.14F)调用的是（ ）。",
              "A": "public void fun(int a, double b){…}",
              "B": "public int fun(double a, double b){…}",
              "C": "public void fun(float a, float b){…}",
              "D": "public float fun(int a, float b){…}",
              "answer": "D",
              "yourAnswer": "A"
            },
            "5": {
              "id": 5,
              "problem": "一个类可同时定义许多同名的方法，这些方法的形式参数个数、类型或顺序各不相同，传回的值也可以不相同，这种特性称为（ ）。",
              "A": "继承",
              "B": "重写",
              "C": "重载",
              "D": "封装",
              "answer": "C",
              "yourAnswer": "A"
            },
            "6": {
              "id": 6,
              "problem": "下列关于包的描述中错误的是（ ）",
              "A": "使用包的原因之一是避免类名重复",
              "B": "包是由.class文件组成的一个集合，是一个文件夹",
              "C": "功能相同或者相关的类一般组织在一个包中",
              "D": "包只能定义一层，即包中不能再有包",
              "answer": "D",
              "yourAnswer": "A"
            },
            "7": {
              "id": 7,
              "problem": "类中存在一个方法int getValue(int x){…}，以下能与这个方法重载的是（ ）。",
              "A": "public getValue(int x){…};",
              "B": "void getValue(int x){…};",
              "C": "int getValue(int x, int y){…};",
              "D": "int get(int x){…};",
              "answer": "C",
              "yourAnswer": "A"
            },
            "8": {
              "id": 8,
              "problem": "欲构造ArrayList类得一个实例，此类继承了List接口，下列哪个方法是正确的：",
              "A": "ArrayList myList \u003d new Object();",
              "B": "List myList \u003d new ArrayList();",
              "C": "ArraylList myList \u003d new List();",
              "D": "List myList \u003d new List();",
              "answer": "B",
              "yourAnswer": "A"
            },
            "9": {
              "id": 9,
              "problem": "表达式(11+3*8)/4%3的值是( )",
              "A": "31",
              "B": "0",
              "C": "1",
              "D": "2",
              "answer": "D",
              "yourAnswer": "A"
            },
            "10": {
              "id": 10,
              "problem": "如果希望类中成员能被所有子类继承后像自身成员一样直接访问，则应该使用修饰符（）",
              "A": "default",
              "B": "protected",
              "C": "不写",
              "D": "private",
              "answer": " ",
              "yourAnswer": "A"
            },
            "11": {
              "id": 11,
              "problem": "下列不可作为java语言修饰符的是( )",
              "A": "a1",
              "B": "$1",
              "C": "_1",
              "D": "11",
              "answer": "D",
              "yourAnswer": "A"
            },
            "12": {
              "id": 12,
              "problem": "以下标识符中哪项是不合法的( )",
              "A": "int",
              "B": "$double",
              "C": "hello",
              "D": "BigMeaninglessName",
              "answer": "A",
              "yourAnswer": "A"
            },
            "13": {
              "id": 13,
              "problem": "假设现在有一个对象X,有一个属性a.则访问当前属性的方法是（）？",
              "A": "a.x",
              "B": "x.a",
              "C": "A.x",
              "D": "X.a",
              "answer": "D",
              "yourAnswer": "A"
            },
            "14": {
              "id": 14,
              "problem": "Java的核心包中，提供编程应用的基本类包是（ ）",
              "A": "java.util",
              "B": "java.lang",
              "C": "java.applet",
              "D": "java.rmi",
              "answer": "B",
              "yourAnswer": "A"
            },
            "15": {
              "id": 15,
              "problem": "一个类要实现接口的功能，可以实现几个方法？",
              "A": "0",
              "B": "1",
              "C": "2",
              "D": "全部",
              "answer": "D",
              "yourAnswer": "A"
            },
            "16": {
              "id": 16,
              "problem": "一个类要实现接口的功能，可以实现几个方法？",
              "A": "0",
              "B": "1",
              "C": "2",
              "D": "全部",
              "answer": "D",
              "yourAnswer": "A"
            },
            "17": {
              "id": 17,
              "problem": "以下抽象类定义中合法的是（ ）。",
              "A": "abstract Animal{     abstract void growl(); }",
              "B": "class abstract Animal{     abstract void growl(); }",
              "C": "abstract class Animal {     abstract void growl(); } ",
              "D": "abstract class Animal {     abstract void growl() {     } }",
              "answer": "C",
              "yourAnswer": "A"
            },
            "18": {
              "id": 18,
              "problem": "下面哪一个循环会导致死循环？( )",
              "A": "for (int k \u003d 0; k \u003c 0; k++)",
              "B": "for (int k \u003d 10; k \u003e 0; k--)",
              "C": "for (int k \u003d 0; k \u003c 10; k--)",
              "D": " for (int k \u003d 0; k \u003e 10; k++)",
              "answer": "C",
              "yourAnswer": "A"
            },
            "19": {
              "id": 19,
              "problem": "对于私有构造方法，以下说法正确的是（ ）。",
              "A": "构造方法如果被限定为private则会产生编译错误",
              "B": "不能通过私有构造方法产生类的对象",
              "C": "私有构造方法不能在类外通过new调用创建对象",
              "D": "具有私有构造方法的类不能被继承",
              "answer": "C",
              "yourAnswer": "A"
            },
            "20": {
              "id": 20,
              "problem": "下列哪一个关键字用于实现接口来定义类？( )",
              "A": "extends",
              "B": "implements",
              "C": "abstract",
              "D": "interface",
              "answer": "B",
              "yourAnswer": "A"
            }
          }
        },
        "Java多线程编程": {
          "name": "Java多线程编程",
          "resource": "src\\pages\\Java多线程编程",
          "learned": false,
          "date": "Dec 7, 2020, 1:49:59 PM",
          "integerSelectProblemHashMap": {
            "1": {
              "id": 1,
              "problem": "以下关于构造函数的描述错误的是( )",
              "A": "构造函数的返回类型只能是void型",
              "B": "构造函数是类的一种特殊函数，它的方法名必须与类名相同。",
              "C": "构造函数的主要作用是完成对类的对象的初始化工作。",
              "D": "一般在创建新对象时，系统会自动调用构造函数。",
              "answer": "A",
              "yourAnswer": "A"
            },
            "2": {
              "id": 2,
              "problem": "不是合法标识符的是（）",
              "A": "Javaworld",
              "B": "_sum",
              "C": "2Java Program",
              "D": "$abc",
              "answer": "C",
              "yourAnswer": "A"
            },
            "3": {
              "id": 3,
              "problem": "一个类可同时定义许多同名的方法，这些方法的形式参数个数、类型或顺序各不相同，传回的值也可以不相同，这种特性称为（ ）。",
              "A": "继承",
              "B": "重写",
              "C": "重载",
              "D": "封装",
              "answer": "C",
              "yourAnswer": "A"
            },
            "4": {
              "id": 4,
              "problem": "如果希望类中成员即使被子类继承也只能通过父类方法间接访问，则应该使用修饰符（）",
              "A": "public",
              "B": "protected",
              "C": "不写",
              "D": "private",
              "answer": "D",
              "yourAnswer": "A"
            },
            "5": {
              "id": 5,
              "problem": "以下关于重载的说法错误的是（ ）。",
              "A": "重载的方法只要定义正确，调用时就不会有歧义性。",
              "B": "重载的方法通常实现相似的功能",
              "C": "重载的方法可以互相调用，提高代码复用",
              "D": "重载是多态的一种表现形式",
              "answer": "A",
              "yourAnswer": "A"
            },
            "6": {
              "id": 6,
              "problem": "接口中的属性会自动被修饰为？",
              "A": "public static",
              "B": "static final",
              "C": "public static final",
              "D": "public final",
              "answer": "C",
              "yourAnswer": "A"
            },
            "7": {
              "id": 7,
              "problem": "下列不可作为java语言修饰符的是( )",
              "A": "a1",
              "B": "$1",
              "C": "_1",
              "D": "11",
              "answer": "D",
              "yourAnswer": "A"
            },
            "8": {
              "id": 8,
              "problem": "在Java中用什么关键字修饰的方法可以直接通过类名来调用？( )",
              "A": "static",
              "B": "final",
              "C": "private",
              "D": "void",
              "answer": "A",
              "yourAnswer": "A"
            },
            "9": {
              "id": 9,
              "problem": "以下程序的结果是（ ）。class Base {     protected void fun(){         System.out.println(0);     } } class Derived extends Base {     protected void fun(){         System.out.println(1);     } } public class Test {     public static void main(String[] args) {         Base b1 \u003d new Derived();         b1.fun();     } }",
              "A": "运行错误",
              "B": "编译错误",
              "C": "0",
              "D": "1",
              "answer": "D",
              "yourAnswer": "A"
            },
            "10": {
              "id": 10,
              "problem": "下列哪一个变量不需要创建对象，直接可以根据类名调用该属性？",
              "A": "public String str;",
              "B": "String str;",
              "C": "public static String str;",
              "D": "str",
              "answer": "C",
              "yourAnswer": "A"
            },
            "11": {
              "id": 11,
              "problem": "下列关于打包的描述中，错误的是（ ）。",
              "A": "一个源文件中最多包含一条package语句，且必须是第一条语句",
              "B": "一个源文件中定义的类的字节码可以存放于不同的包中",
              "C": "若源文件中没有包含package语句，则类的字节码被放入无名包中",
              "D": "不在一个源文件中定义的子类和父类可以位于不同包中",
              "answer": "B",
              "yourAnswer": "A"
            },
            "12": {
              "id": 12,
              "problem": "接口中方法的方法体内可以有几条代码？",
              "A": "0",
              "B": "1",
              "C": "2",
              "D": "多条",
              "answer": "A",
              "yourAnswer": "A"
            },
            "13": {
              "id": 13,
              "problem": "以下抽象类定义中合法的是（ ）。",
              "A": "abstract Animal{     abstract void growl(); }",
              "B": "class abstract Animal{     abstract void growl(); }",
              "C": "abstract class Animal {     abstract void growl(); } ",
              "D": "abstract class Animal {     abstract void growl() {     } }",
              "answer": "C",
              "yourAnswer": "A"
            },
            "14": {
              "id": 14,
              "problem": "Java的核心包中，提供编程应用的基本类包是（ ）",
              "A": "java.util",
              "B": "java.lang",
              "C": "java.applet",
              "D": "java.rmi",
              "answer": "B",
              "yourAnswer": "A"
            },
            "15": {
              "id": 15,
              "problem": "不是合法标识符的是（）",
              "A": "Javaworld",
              "B": "_sum",
              "C": "2Java Program",
              "D": "$abc",
              "answer": "C",
              "yourAnswer": "A"
            },
            "16": {
              "id": 16,
              "problem": "下列哪一个关键字用于实现接口来定义类？( )",
              "A": "extends",
              "B": "implements",
              "C": "abstract",
              "D": "interface",
              "answer": "B",
              "yourAnswer": "A"
            },
            "17": {
              "id": 17,
              "problem": "以下关于多态的描述中错误的是（ ）。",
              "A": "重载和重写都是多态的表现形式",
              "B": "多态性分为动态多态性(动态绑定)和静态多态性两种",
              "C": "多态性可以加快代码的运行速度",
              "D": "多态性是面向对象的核心特征之一",
              "answer": "C",
              "yourAnswer": "A"
            },
            "18": {
              "id": 18,
              "problem": "类中存在一个方法int getValue(double x){…}，以下不能与这个方法重载的是（ ）。",
              "A": "int getValue(int x){…};",
              "B": "int getValue(float x){…};",
              "C": "int getValue(double t){…};",
              "D": "int getValue(double x, double y){…};",
              "answer": "C",
              "yourAnswer": "A"
            },
            "19": {
              "id": 19,
              "problem": "以下程序的结果是（ ）。class Base {     protected void fun(){         System.out.println(0);     } } class Derived extends Base {     protected void fun(){         System.out.println(1);     } } public class Test {     public static void main(String[] args) {         Base b1 \u003d new Derived();         b1.fun();     } }",
              "A": "运行错误",
              "B": "编译错误",
              "C": "0",
              "D": "1",
              "answer": "D",
              "yourAnswer": "A"
            },
            "20": {
              "id": 20,
              "problem": "假设现在有一个对象X,有一个属性a.则访问当前属性的方法是（）？",
              "A": "a.x",
              "B": "x.a",
              "C": "A.x",
              "D": "X.a",
              "answer": "D",
              "yourAnswer": "A"
            }
          }
        },
        "JavaHashSet": {
          "name": "JavaHashSet",
          "resource": "src\\pages\\JavaHashSet",
          "learned": false,
          "date": "Dec 7, 2020, 1:49:59 PM",
          "integerSelectProblemHashMap": {
            "1": {
              "id": 1,
              "problem": "接口中有几个构造方法？",
              "A": "0",
              "B": "1",
              "C": "2",
              "D": "以上都不对",
              "answer": "A",
              "yourAnswer": "A"
            },
            "2": {
              "id": 2,
              "problem": "如果希望类中成员即使被子类继承也只能通过父类方法间接访问，则应该使用修饰符（）",
              "A": "public",
              "B": "protected",
              "C": "不写",
              "D": "private",
              "answer": "D",
              "yourAnswer": "A"
            },
            "3": {
              "id": 3,
              "problem": "以下抽象类定义中合法的是（ ）。",
              "A": "abstract Animal{     abstract void growl(); }",
              "B": "class abstract Animal{     abstract void growl(); }",
              "C": "abstract class Animal {     abstract void growl(); } ",
              "D": "abstract class Animal {     abstract void growl() {     } }",
              "answer": "C",
              "yourAnswer": "A"
            },
            "4": {
              "id": 4,
              "problem": "如果类中成员的定义没有用访问权限修饰符，则该成员不能被（ ）访问。",
              "A": "同一个包中子类",
              "B": "子类",
              "C": "同一个包中其他类",
              "D": "其他包中所有类",
              "answer": "D",
              "yourAnswer": "A"
            },
            "5": {
              "id": 5,
              "problem": "( )类带有缓冲区，可以把一批数据读到缓冲区，避免每次都从数据源读取数据进行字符编码转换。",
              "A": "Reader",
              "B": "FileReader",
              "C": "Writer",
              "D": "BufferedReader",
              "answer": "D",
              "yourAnswer": "A"
            },
            "6": {
              "id": 6,
              "problem": "BufferedWriter类是Writer类的子类，BufferedWriter类中的（）方法可以插入一个换行符。",
              "A": "void newLine()",
              "B": "void close()",
              "C": "void flush()",
              "D": "void write(String str)",
              "answer": "A",
              "yourAnswer": "A"
            },
            "7": {
              "id": 7,
              "problem": "下列关于抽象方法的描述中，错误的是（ ）。",
              "A": "抽象方法声明只需给出方法头，不能写方法体，直接以分号结束",
              "B": "所有的方法都可以声明为抽象方法",
              "C": "构造方法不能声明为抽象方法",
              "D": "声明抽象方法使用关键字abstract修饰",
              "answer": "B",
              "yourAnswer": "A"
            },
            "8": {
              "id": 8,
              "problem": "下列关于构造方法的叙述中，错误的是( )",
              "A": "Java语言规定构造方法名与类名必须相同",
              "B": "Java语言规定构造方法没有返回值，但不用void声明",
              "C": "Java语言规定构造方法不可以重载",
              "D": "Java语言规定构造方法只能通过new自动调用",
              "answer": "C",
              "yourAnswer": "A"
            },
            "9": {
              "id": 9,
              "problem": "下列关于包的描述中错误的是（ ）",
              "A": "使用包的原因之一是避免类名重复",
              "B": "包是由.class文件组成的一个集合，是一个文件夹",
              "C": "功能相同或者相关的类一般组织在一个包中",
              "D": "包只能定义一层，即包中不能再有包",
              "answer": "D",
              "yourAnswer": "A"
            },
            "10": {
              "id": 10,
              "problem": "以下关于构造函数的描述错误的是( )",
              "A": "构造函数的返回类型只能是void型",
              "B": "构造函数是类的一种特殊函数，它的方法名必须与类名相同。",
              "C": "构造函数的主要作用是完成对类的对象的初始化工作。",
              "D": "一般在创建新对象时，系统会自动调用构造函数。",
              "answer": "A",
              "yourAnswer": "A"
            },
            "11": {
              "id": 11,
              "problem": "对于私有构造方法，以下说法正确的是（ ）。",
              "A": "构造方法如果被限定为private则会产生编译错误",
              "B": "不能通过私有构造方法产生类的对象",
              "C": "私有构造方法不能在类外通过new调用创建对象",
              "D": "具有私有构造方法的类不能被继承",
              "answer": "C",
              "yourAnswer": "A"
            },
            "12": {
              "id": 12,
              "problem": "在Java中用什么关键字修饰的方法可以直接通过类名来调用？( )",
              "A": "static",
              "B": "final",
              "C": "private",
              "D": "void",
              "answer": "A",
              "yourAnswer": "A"
            },
            "13": {
              "id": 13,
              "problem": "下列关于打包的描述中，错误的是（ ）。",
              "A": "一个源文件中最多包含一条package语句，且必须是第一条语句",
              "B": "一个源文件中定义的类的字节码可以存放于不同的包中",
              "C": "若源文件中没有包含package语句，则类的字节码被放入无名包中",
              "D": "不在一个源文件中定义的子类和父类可以位于不同包中",
              "answer": "B",
              "yourAnswer": "A"
            },
            "14": {
              "id": 14,
              "problem": "以下程序的输出结果是（ ）。abstract class A {     public abstract void fun();     public void fun(int a) {         System.out.println(a);     } } class TestA extends A {     public static void main(String[] args) {         TestA ta \u003d new TestA();         ta.fun(1);     } }",
              "A": "1",
              "B": "编译错误",
              "C": "运行错误",
              "D": "无输出",
              "answer": "B",
              "yourAnswer": "A"
            },
            "15": {
              "id": 15,
              "problem": "对于私有构造方法，以下说法正确的是（ ）。",
              "A": "构造方法如果被限定为private则会产生编译错误",
              "B": "不能通过私有构造方法产生类的对象",
              "C": "私有构造方法不能在类外通过new调用创建对象",
              "D": "具有私有构造方法的类不能被继承",
              "answer": "C",
              "yourAnswer": "A"
            },
            "16": {
              "id": 16,
              "problem": "在创建对象时必须( )",
              "A": "先声明对象，然后才能使用对象",
              "B": "先声明对象，为对象分配内存空间，然后才能使用对象",
              "C": "先声明对象，为对象分配内存空间，对对象初始化，然后才能使用对象",
              "D": "上述说法都对",
              "answer": "C",
              "yourAnswer": "A"
            },
            "17": {
              "id": 17,
              "problem": "以下不是面向对象特征的是（ ）。",
              "A": "继承",
              "B": "代码复制",
              "C": "封装",
              "D": "多态",
              "answer": "B",
              "yourAnswer": "A"
            },
            "18": {
              "id": 18,
              "problem": "一个类可同时定义许多同名的方法，这些方法的形式参数个数、类型或顺序各不相同，传回的值也可以不相同，这种特性称为（ ）。",
              "A": "继承",
              "B": "重写",
              "C": "重载",
              "D": "封装",
              "answer": "C",
              "yourAnswer": "A"
            },
            "19": {
              "id": 19,
              "problem": "下面哪个是applet传递参数的正确方式？（ ）",
              "A": "\u003capplet code\u003dTest.class age\u003d33 width\u003d1 height\u003d1\u003e",
              "B": "\u003cparam name\u003dage value\u003d33\u003e",
              "C": "\u003capplet code\u003dTest.class name\u003dage value\u003d33 width\u003d1 height\u003d1\u003e",
              "D": "\u003capplet Test 33\u003e",
              "answer": "B",
              "yourAnswer": "A"
            },
            "20": {
              "id": 20,
              "problem": "下面哪一个循环会导致死循环？( )",
              "A": "for (int k \u003d 0; k \u003c 0; k++)",
              "B": "for (int k \u003d 10; k \u003e 0; k--)",
              "C": "for (int k \u003d 0; k \u003c 10; k--)",
              "D": " for (int k \u003d 0; k \u003e 10; k++)",
              "answer": "C",
              "yourAnswer": "A"
            }
          }
        },
        "Java9新特性": {
          "name": "Java9新特性",
          "resource": "src\\pages\\Java9新特性",
          "learned": false,
          "date": "Dec 7, 2020, 1:49:59 PM",
          "integerSelectProblemHashMap": {
            "1": {
              "id": 1,
              "problem": "Java的核心包中，提供编程应用的基本类包是（ ）",
              "A": "java.util",
              "B": "java.lang",
              "C": "java.applet",
              "D": "java.rmi",
              "answer": "B",
              "yourAnswer": "A"
            },
            "2": {
              "id": 2,
              "problem": "以下关于重载的说法错误的是（ ）。",
              "A": "重载的方法只要定义正确，调用时就不会有歧义性。",
              "B": "重载的方法通常实现相似的功能",
              "C": "重载的方法可以互相调用，提高代码复用",
              "D": "重载是多态的一种表现形式",
              "answer": "A",
              "yourAnswer": "A"
            },
            "3": {
              "id": 3,
              "problem": "接口中的属性会自动被修饰为？",
              "A": "public static",
              "B": "static final",
              "C": "public static final",
              "D": "public final",
              "answer": "C",
              "yourAnswer": "A"
            },
            "4": {
              "id": 4,
              "problem": "对于私有构造方法，以下说法正确的是（ ）。",
              "A": "构造方法如果被限定为private则会产生编译错误",
              "B": "不能通过私有构造方法产生类的对象",
              "C": "私有构造方法不能在类外通过new调用创建对象",
              "D": "具有私有构造方法的类不能被继承",
              "answer": "C",
              "yourAnswer": "A"
            },
            "5": {
              "id": 5,
              "problem": "以下关于多态的描述中错误的是（ ）。",
              "A": "重载和重写都是多态的表现形式",
              "B": "多态性分为动态多态性(动态绑定)和静态多态性两种",
              "C": "多态性可以加快代码的运行速度",
              "D": "多态性是面向对象的核心特征之一",
              "answer": "C",
              "yourAnswer": "A"
            },
            "6": {
              "id": 6,
              "problem": "以下没有体现出封装性的是（ ）。",
              "A": "将类的成员用访问权限修饰符加以访问控制",
              "B": "提供成员方法操作成员变量",
              "C": "将类的全部成员都设定为public权限",
              "D": "将类按照不同的包组织管理",
              "answer": "C",
              "yourAnswer": "A"
            },
            "7": {
              "id": 7,
              "problem": "变量命名规范说法正确的是( )",
              "A": "不同类型的变量，可以起相同的名字；",
              "B": "变量由字母、下划线、数字、$符号随意组成；",
              "C": "变量不能以数字作为开头；",
              "D": "A和a在java中是同一个变量；",
              "answer": "A",
              "yourAnswer": "A"
            },
            "8": {
              "id": 8,
              "problem": "下列哪一个变量不需要创建对象，直接可以根据类名调用该属性？",
              "A": "public String str;",
              "B": "String str;",
              "C": "public static String str;",
              "D": "str",
              "answer": "C",
              "yourAnswer": "A"
            },
            "9": {
              "id": 9,
              "problem": "一个类要实现接口的功能，可以实现几个方法？",
              "A": "0",
              "B": "1",
              "C": "2",
              "D": "全部",
              "answer": "D",
              "yourAnswer": "A"
            },
            "10": {
              "id": 10,
              "problem": "下列关于抽象方法的描述中，错误的是（ ）。",
              "A": "抽象方法声明只需给出方法头，不能写方法体，直接以分号结束",
              "B": "所有的方法都可以声明为抽象方法",
              "C": "构造方法不能声明为抽象方法",
              "D": "声明抽象方法使用关键字abstract修饰",
              "answer": "B",
              "yourAnswer": "A"
            },
            "11": {
              "id": 11,
              "problem": "下列关于抽象方法的描述中，错误的是（ ）。",
              "A": "抽象方法声明只需给出方法头，不能写方法体，直接以分号结束",
              "B": "所有的方法都可以声明为抽象方法",
              "C": "构造方法不能声明为抽象方法",
              "D": "声明抽象方法使用关键字abstract修饰",
              "answer": "B",
              "yourAnswer": "A"
            },
            "12": {
              "id": 12,
              "problem": "类中存在一个方法int getValue(int x){…}，以下能与这个方法重载的是（ ）。",
              "A": "public getValue(int x){…};",
              "B": "void getValue(int x){…};",
              "C": "int getValue(int x, int y){…};",
              "D": "int get(int x){…};",
              "answer": "C",
              "yourAnswer": "A"
            },
            "13": {
              "id": 13,
              "problem": "一个类可同时定义许多同名的方法，这些方法的形式参数个数、类型或顺序各不相同，传回的值也可以不相同，这种特性称为（ ）。",
              "A": "继承",
              "B": "重写",
              "C": "重载",
              "D": "封装",
              "answer": "C",
              "yourAnswer": "A"
            },
            "14": {
              "id": 14,
              "problem": "如果类中成员的定义没有用访问权限修饰符，则该成员不能被（ ）访问。",
              "A": "同一个包中子类",
              "B": "子类",
              "C": "同一个包中其他类",
              "D": "其他包中所有类",
              "answer": "D",
              "yourAnswer": "A"
            },
            "15": {
              "id": 15,
              "problem": "在创建对象时必须( )",
              "A": "先声明对象，然后才能使用对象",
              "B": "先声明对象，为对象分配内存空间，然后才能使用对象",
              "C": "先声明对象，为对象分配内存空间，对对象初始化，然后才能使用对象",
              "D": "上述说法都对",
              "answer": "C",
              "yourAnswer": "A"
            },
            "16": {
              "id": 16,
              "problem": "以下关于继承的叙述正确的是( )",
              "A": "在Java中类只允许单一继承",
              "B": "在Java中一个类只能实现一个接口",
              "C": "在Java中一个类不能同时继承一个类和实现一个接口",
              "D": "在Java中接口只允许单一继承",
              "answer": "A",
              "yourAnswer": "A"
            },
            "17": {
              "id": 17,
              "problem": "下列不是重载方法的特征的是（ ）。",
              "A": "参数个数不同",
              "B": "返回值类型不同",
              "C": "参数类型不同",
              "D": "方法名相同",
              "answer": "B",
              "yourAnswer": "A"
            },
            "18": {
              "id": 18,
              "problem": "在创建对象时必须( )",
              "A": "先声明对象，然后才能使用对象",
              "B": "先声明对象，为对象分配内存空间，然后才能使用对象",
              "C": "先声明对象，为对象分配内存空间，对对象初始化，然后才能使用对象",
              "D": "上述说法都对",
              "answer": "C",
              "yourAnswer": "A"
            },
            "19": {
              "id": 19,
              "problem": "有一段java 应用程序，它的主类名是a1，那么保存它的源文件名可以是( )",
              "A": "a1.java",
              "B": "a1.class",
              "C": "a1",
              "D": "都对",
              "answer": "A",
              "yourAnswer": "A"
            },
            "20": {
              "id": 20,
              "problem": "下列关于包的描述中错误的是（ ）",
              "A": "使用包的原因之一是避免类名重复",
              "B": "包是由.class文件组成的一个集合，是一个文件夹",
              "C": "功能相同或者相关的类一般组织在一个包中",
              "D": "包只能定义一层，即包中不能再有包",
              "answer": "D",
              "yourAnswer": "A"
            }
          }
        },
        "Java集合框架": {
          "name": "Java集合框架",
          "resource": "src\\pages\\Java集合框架",
          "learned": false,
          "date": "Dec 7, 2020, 1:49:59 PM",
          "integerSelectProblemHashMap": {
            "1": {
              "id": 1,
              "problem": "如果希望类中成员能被所有子类继承后像自身成员一样直接访问，则应该使用修饰符（）",
              "A": "default",
              "B": "protected",
              "C": "不写",
              "D": "private",
              "answer": " ",
              "yourAnswer": "A"
            },
            "2": {
              "id": 2,
              "problem": "在创建对象时必须( )",
              "A": "先声明对象，然后才能使用对象",
              "B": "先声明对象，为对象分配内存空间，然后才能使用对象",
              "C": "先声明对象，为对象分配内存空间，对对象初始化，然后才能使用对象",
              "D": "上述说法都对",
              "answer": "C",
              "yourAnswer": "A"
            },
            "3": {
              "id": 3,
              "problem": "使用字节输出流FileOutputStream类中的哪个构造方法，在写数据时能够不覆盖文件中原有的内容？",
              "A": "FileOutputStream(String name)",
              "B": "FileOutputStream(File file,String name)",
              "C": "FileOutputStream(String name,boolean append)",
              "D": "FileOutputStream(File file)",
              "answer": "C",
              "yourAnswer": "A"
            },
            "4": {
              "id": 4,
              "problem": "下列关于引入包的描述中，错误的是（ ）。",
              "A": "使用项目中其他包中的类时，需要在源程序中写import语句",
              "B": "import语句写在类声明的上面，package语句的下面",
              "C": "import可以引入包中所有类或其中一个类",
              "D": "import语句必须是源文件中第一条语句",
              "answer": "D",
              "yourAnswer": "A"
            },
            "5": {
              "id": 5,
              "problem": "下列选项中，抽象类的关键字是（）？",
              "A": "interface",
              "B": "implements",
              "C": "abstract",
              "D": "class",
              "answer": "C",
              "yourAnswer": "A"
            },
            "6": {
              "id": 6,
              "problem": "下列不是重载方法的特征的是（ ）。",
              "A": "参数个数不同",
              "B": "返回值类型不同",
              "C": "参数类型不同",
              "D": "方法名相同",
              "answer": "B",
              "yourAnswer": "A"
            },
            "7": {
              "id": 7,
              "problem": "下列不是重载方法的特征的是（ ）。",
              "A": "参数个数不同",
              "B": "返回值类型不同",
              "C": "参数类型不同",
              "D": "方法名相同",
              "answer": "B",
              "yourAnswer": "A"
            },
            "8": {
              "id": 8,
              "problem": "以下关于重载的说法错误的是（ ）。",
              "A": "重载的方法只要定义正确，调用时就不会有歧义性。",
              "B": "重载的方法通常实现相似的功能",
              "C": "重载的方法可以互相调用，提高代码复用",
              "D": "重载是多态的一种表现形式",
              "answer": "A",
              "yourAnswer": "A"
            },
            "9": {
              "id": 9,
              "problem": "如果希望类中成员即使被子类继承也只能通过父类方法间接访问，则应该使用修饰符（）",
              "A": "public",
              "B": "protected",
              "C": "不写",
              "D": "private",
              "answer": "D",
              "yourAnswer": "A"
            },
            "10": {
              "id": 10,
              "problem": "下列不是重载方法的特征的是（ ）。",
              "A": "参数个数不同",
              "B": "返回值类型不同",
              "C": "参数类型不同",
              "D": "方法名相同",
              "answer": "B",
              "yourAnswer": "A"
            },
            "11": {
              "id": 11,
              "problem": "以下抽象类定义中合法的是（ ）。",
              "A": "abstract Animal{     abstract void growl(); }",
              "B": "class abstract Animal{     abstract void growl(); }",
              "C": "abstract class Animal {     abstract void growl(); } ",
              "D": "abstract class Animal {     abstract void growl() {     } }",
              "answer": "C",
              "yourAnswer": "A"
            },
            "12": {
              "id": 12,
              "problem": "下列哪一个关键字用于实现接口来定义类？( )",
              "A": "extends",
              "B": "implements",
              "C": "abstract",
              "D": "interface",
              "answer": "B",
              "yourAnswer": "A"
            },
            "13": {
              "id": 13,
              "problem": "表达式(11+3*8)/4%3的值是( )",
              "A": "31",
              "B": "0",
              "C": "1",
              "D": "2",
              "answer": "D",
              "yourAnswer": "A"
            },
            "14": {
              "id": 14,
              "problem": "下面哪个是applet传递参数的正确方式？（ ）",
              "A": "\u003capplet code\u003dTest.class age\u003d33 width\u003d1 height\u003d1\u003e",
              "B": "\u003cparam name\u003dage value\u003d33\u003e",
              "C": "\u003capplet code\u003dTest.class name\u003dage value\u003d33 width\u003d1 height\u003d1\u003e",
              "D": "\u003capplet Test 33\u003e",
              "answer": "B",
              "yourAnswer": "A"
            },
            "15": {
              "id": 15,
              "problem": "下列关于打包的描述中，错误的是（ ）。",
              "A": "一个源文件中最多包含一条package语句，且必须是第一条语句",
              "B": "一个源文件中定义的类的字节码可以存放于不同的包中",
              "C": "若源文件中没有包含package语句，则类的字节码被放入无名包中",
              "D": "不在一个源文件中定义的子类和父类可以位于不同包中",
              "answer": "B",
              "yourAnswer": "A"
            },
            "16": {
              "id": 16,
              "problem": "下列说法正确的有（）?",
              "A": "不需要定义类，就能创建对象",
              "B": "对象中必须有属性和方法",
              "C": "属性必须是简单变量",
              "D": "属性可以是简单变量，也可以是一个对象",
              "answer": "D",
              "yourAnswer": "A"
            },
            "17": {
              "id": 17,
              "problem": "InputStream类的作用就是将文件中的数据读入到内存中，该类中的哪个方法可以关闭文件输入流对象？",
              "A": "int read()",
              "B": "void close()",
              "C": "int available()",
              "D": "int read(byte[] b)",
              "answer": "B",
              "yourAnswer": "A"
            },
            "18": {
              "id": 18,
              "problem": "已知A类具有以下四个成员方法，a是A类的对象，则a.fun(1, 3.14F)调用的是（ ）。",
              "A": "public void fun(int a, double b){…}",
              "B": "public int fun(double a, double b){…}",
              "C": "public void fun(float a, float b){…}",
              "D": "public float fun(int a, float b){…}",
              "answer": "D",
              "yourAnswer": "A"
            },
            "19": {
              "id": 19,
              "problem": "表达式(11+3*8)/4%3的值是( )",
              "A": "31",
              "B": "0",
              "C": "1",
              "D": "2",
              "answer": "D",
              "yourAnswer": "A"
            },
            "20": {
              "id": 20,
              "problem": "以下关于继承的叙述正确的是( )",
              "A": "在Java中类只允许单一继承",
              "B": "在Java中一个类只能实现一个接口",
              "C": "在Java中一个类不能同时继承一个类和实现一个接口",
              "D": "在Java中接口只允许单一继承",
              "answer": "A",
              "yourAnswer": "A"
            }
          }
        },
        "JavaIterator": {
          "name": "JavaIterator",
          "resource": "src\\pages\\JavaIterator",
          "learned": false,
          "date": "Dec 7, 2020, 1:49:59 PM",
          "integerSelectProblemHashMap": {
            "1": {
              "id": 1,
              "problem": "变量命名规范说法正确的是( )",
              "A": "不同类型的变量，可以起相同的名字；",
              "B": "变量由字母、下划线、数字、$符号随意组成；",
              "C": "变量不能以数字作为开头；",
              "D": "A和a在java中是同一个变量；",
              "answer": "A",
              "yourAnswer": "A"
            },
            "2": {
              "id": 2,
              "problem": "如果希望类中成员即使被子类继承也只能通过父类方法间接访问，则应该使用修饰符（）",
              "A": "public",
              "B": "protected",
              "C": "不写",
              "D": "private",
              "answer": "D",
              "yourAnswer": "A"
            },
            "3": {
              "id": 3,
              "problem": "( )类带有缓冲区，可以把一批数据读到缓冲区，避免每次都从数据源读取数据进行字符编码转换。",
              "A": "Reader",
              "B": "FileReader",
              "C": "Writer",
              "D": "BufferedReader",
              "answer": "D",
              "yourAnswer": "A"
            },
            "4": {
              "id": 4,
              "problem": "下列关于引入包的描述中，错误的是（ ）。",
              "A": "使用项目中其他包中的类时，需要在源程序中写import语句",
              "B": "import语句写在类声明的上面，package语句的下面",
              "C": "import可以引入包中所有类或其中一个类",
              "D": "import语句必须是源文件中第一条语句",
              "answer": "D",
              "yourAnswer": "A"
            },
            "5": {
              "id": 5,
              "problem": "以下不是面向对象特征的是（ ）。",
              "A": "继承",
              "B": "代码复制",
              "C": "封装",
              "D": "多态",
              "answer": "B",
              "yourAnswer": "A"
            },
            "6": {
              "id": 6,
              "problem": "下列关于抽象方法的描述中，错误的是（ ）。",
              "A": "抽象方法声明只需给出方法头，不能写方法体，直接以分号结束",
              "B": "所有的方法都可以声明为抽象方法",
              "C": "构造方法不能声明为抽象方法",
              "D": "声明抽象方法使用关键字abstract修饰",
              "answer": "B",
              "yourAnswer": "A"
            },
            "7": {
              "id": 7,
              "problem": "下列哪一个变量不需要创建对象，直接可以根据类名调用该属性？",
              "A": "public String str;",
              "B": "String str;",
              "C": "public static String str;",
              "D": "str",
              "answer": "C",
              "yourAnswer": "A"
            },
            "8": {
              "id": 8,
              "problem": "不是合法标识符的是（）",
              "A": "BigO1Long$223",
              "B": "Utfint",
              "C": "$12s",
              "D": "3d",
              "answer": "D",
              "yourAnswer": "A"
            },
            "9": {
              "id": 9,
              "problem": "如果类中成员的定义没有用访问权限修饰符，则该成员不能被（ ）访问。",
              "A": "同一个包中子类",
              "B": "子类",
              "C": "同一个包中其他类",
              "D": "其他包中所有类",
              "answer": "D",
              "yourAnswer": "A"
            },
            "10": {
              "id": 10,
              "problem": "以下关于多态的描述中错误的是（ ）。",
              "A": "重载和重写都是多态的表现形式",
              "B": "多态性分为动态多态性(动态绑定)和静态多态性两种",
              "C": "多态性可以加快代码的运行速度",
              "D": "多态性是面向对象的核心特征之一",
              "answer": "C",
              "yourAnswer": "A"
            },
            "11": {
              "id": 11,
              "problem": "在Java中用什么关键字修饰的方法可以直接通过类名来调用？( )",
              "A": "static",
              "B": "final",
              "C": "private",
              "D": "void",
              "answer": "A",
              "yourAnswer": "A"
            },
            "12": {
              "id": 12,
              "problem": "以下关于多态的描述中错误的是（ ）。",
              "A": "重载和重写都是多态的表现形式",
              "B": "多态性分为动态多态性(动态绑定)和静态多态性两种",
              "C": "多态性可以加快代码的运行速度",
              "D": "多态性是面向对象的核心特征之一",
              "answer": "C",
              "yourAnswer": "A"
            },
            "13": {
              "id": 13,
              "problem": "以下抽象类定义中合法的是（ ）。",
              "A": "abstract Animal{     abstract void growl(); }",
              "B": "class abstract Animal{     abstract void growl(); }",
              "C": "abstract class Animal {     abstract void growl(); } ",
              "D": "abstract class Animal {     abstract void growl() {     } }",
              "answer": "C",
              "yourAnswer": "A"
            },
            "14": {
              "id": 14,
              "problem": "以下不是面向对象特征的是（ ）。",
              "A": "继承",
              "B": "代码复制",
              "C": "封装",
              "D": "多态",
              "answer": "B",
              "yourAnswer": "A"
            },
            "15": {
              "id": 15,
              "problem": "类中存在一个方法int getValue(int x){…}，以下能与这个方法重载的是（ ）。",
              "A": "public getValue(int x){…};",
              "B": "void getValue(int x){…};",
              "C": "int getValue(int x, int y){…};",
              "D": "int get(int x){…};",
              "answer": "C",
              "yourAnswer": "A"
            },
            "16": {
              "id": 16,
              "problem": "结构化程序设计所规定的三种基本控制结构是( )",
              "A": "输入、处理、输出",
              "B": "树形、网形、环形",
              "C": "顺序、选择、循环",
              "D": "主程序、子程序、函数",
              "answer": "C",
              "yourAnswer": "A"
            },
            "17": {
              "id": 17,
              "problem": "以下程序的结果是（ ）。class Base {     protected void fun(){         System.out.println(0);     } } class Derived extends Base {     protected void fun(){         System.out.println(1);     } } public class Test {     public static void main(String[] args) {         Base b1 \u003d new Derived();         b1.fun();     } }",
              "A": "运行错误",
              "B": "编译错误",
              "C": "0",
              "D": "1",
              "answer": "D",
              "yourAnswer": "A"
            },
            "18": {
              "id": 18,
              "problem": "下列关于引入包的描述中，错误的是（ ）。",
              "A": "使用项目中其他包中的类时，需要在源程序中写import语句",
              "B": "import语句写在类声明的上面，package语句的下面",
              "C": "import可以引入包中所有类或其中一个类",
              "D": "import语句必须是源文件中第一条语句",
              "answer": "D",
              "yourAnswer": "A"
            },
            "19": {
              "id": 19,
              "problem": "InputStream类的作用就是将文件中的数据读入到内存中，该类中的哪个方法可以关闭文件输入流对象？",
              "A": "int read()",
              "B": "void close()",
              "C": "int available()",
              "D": "int read(byte[] b)",
              "answer": "B",
              "yourAnswer": "A"
            },
            "20": {
              "id": 20,
              "problem": "一个类可同时定义许多同名的方法，这些方法的形式参数个数、类型或顺序各不相同，传回的值也可以不相同，这种特性称为（ ）。",
              "A": "继承",
              "B": "重写",
              "C": "重载",
              "D": "封装",
              "answer": "C",
              "yourAnswer": "A"
            }
          }
        },
        "Java泛型": {
          "name": "Java泛型",
          "resource": "src\\pages\\Java泛型",
          "learned": false,
          "date": "Dec 7, 2020, 1:49:59 PM",
          "integerSelectProblemHashMap": {
            "1": {
              "id": 1,
              "problem": "在Java中用什么关键字修饰的方法可以直接通过类名来调用？( )",
              "A": "static",
              "B": "final",
              "C": "private",
              "D": "void",
              "answer": "A",
              "yourAnswer": "A"
            },
            "2": {
              "id": 2,
              "problem": "以下程序的结果是（ ）。class Base {     protected void fun(){         System.out.println(0);     } } class Derived extends Base {     protected void fun(){         System.out.println(1);     } } public class Test {     public static void main(String[] args) {         Base b1 \u003d new Derived();         b1.fun();     } }",
              "A": "运行错误",
              "B": "编译错误",
              "C": "0",
              "D": "1",
              "answer": "D",
              "yourAnswer": "A"
            },
            "3": {
              "id": 3,
              "problem": "下列关于打包的描述中，错误的是（ ）。",
              "A": "一个源文件中最多包含一条package语句，且必须是第一条语句",
              "B": "一个源文件中定义的类的字节码可以存放于不同的包中",
              "C": "若源文件中没有包含package语句，则类的字节码被放入无名包中",
              "D": "不在一个源文件中定义的子类和父类可以位于不同包中",
              "answer": "B",
              "yourAnswer": "A"
            },
            "4": {
              "id": 4,
              "problem": "以下标识符中哪项是不合法的( )",
              "A": "int",
              "B": "$double",
              "C": "hello",
              "D": "BigMeaninglessName",
              "answer": "A",
              "yourAnswer": "A"
            },
            "5": {
              "id": 5,
              "problem": "BufferedWriter类是Writer类的子类，BufferedWriter类中的（）方法可以插入一个换行符。",
              "A": "void newLine()",
              "B": "void close()",
              "C": "void flush()",
              "D": "void write(String str)",
              "answer": "A",
              "yourAnswer": "A"
            },
            "6": {
              "id": 6,
              "problem": "如果类中成员的定义没有用访问权限修饰符，则该成员不能被（ ）访问。",
              "A": "同一个包中子类",
              "B": "子类",
              "C": "同一个包中其他类",
              "D": "其他包中所有类",
              "answer": "D",
              "yourAnswer": "A"
            },
            "7": {
              "id": 7,
              "problem": "在创建对象时必须( )",
              "A": "先声明对象，然后才能使用对象",
              "B": "先声明对象，为对象分配内存空间，然后才能使用对象",
              "C": "先声明对象，为对象分配内存空间，对对象初始化，然后才能使用对象",
              "D": "上述说法都对",
              "answer": "C",
              "yourAnswer": "A"
            },
            "8": {
              "id": 8,
              "problem": "下列关于打包的描述中，错误的是（ ）。",
              "A": "一个源文件中最多包含一条package语句，且必须是第一条语句",
              "B": "一个源文件中定义的类的字节码可以存放于不同的包中",
              "C": "若源文件中没有包含package语句，则类的字节码被放入无名包中",
              "D": "不在一个源文件中定义的子类和父类可以位于不同包中",
              "answer": "B",
              "yourAnswer": "A"
            },
            "9": {
              "id": 9,
              "problem": "下列不是重载方法的特征的是（ ）。",
              "A": "参数个数不同",
              "B": "返回值类型不同",
              "C": "参数类型不同",
              "D": "方法名相同",
              "answer": "B",
              "yourAnswer": "A"
            },
            "10": {
              "id": 10,
              "problem": "类中存在一个方法int getValue(int x){…}，以下能与这个方法重载的是（ ）。",
              "A": "public getValue(int x){…};",
              "B": "void getValue(int x){…};",
              "C": "int getValue(int x, int y){…};",
              "D": "int get(int x){…};",
              "answer": "C",
              "yourAnswer": "A"
            },
            "11": {
              "id": 11,
              "problem": "以下关于重载的说法错误的是（ ）。",
              "A": "重载的方法只要定义正确，调用时就不会有歧义性。",
              "B": "重载的方法通常实现相似的功能",
              "C": "重载的方法可以互相调用，提高代码复用",
              "D": "重载是多态的一种表现形式",
              "answer": "A",
              "yourAnswer": "A"
            },
            "12": {
              "id": 12,
              "problem": "结构化程序设计所规定的三种基本控制结构是( )",
              "A": "输入、处理、输出",
              "B": "树形、网形、环形",
              "C": "顺序、选择、循环",
              "D": "主程序、子程序、函数",
              "answer": "C",
              "yourAnswer": "A"
            },
            "13": {
              "id": 13,
              "problem": "下列关于包的描述中错误的是（ ）",
              "A": "使用包的原因之一是避免类名重复",
              "B": "包是由.class文件组成的一个集合，是一个文件夹",
              "C": "功能相同或者相关的类一般组织在一个包中",
              "D": "包只能定义一层，即包中不能再有包",
              "answer": "D",
              "yourAnswer": "A"
            },
            "14": {
              "id": 14,
              "problem": "类中存在一个方法int getValue(double x){…}，以下不能与这个方法重载的是（ ）。",
              "A": "int getValue(int x){…};",
              "B": "int getValue(float x){…};",
              "C": "int getValue(double t){…};",
              "D": "int getValue(double x, double y){…};",
              "answer": "C",
              "yourAnswer": "A"
            },
            "15": {
              "id": 15,
              "problem": "下列说法正确的有（）?",
              "A": "不需要定义类，就能创建对象",
              "B": "对象中必须有属性和方法",
              "C": "属性必须是简单变量",
              "D": "属性可以是简单变量，也可以是一个对象",
              "answer": "D",
              "yourAnswer": "A"
            },
            "16": {
              "id": 16,
              "problem": "在创建对象时必须( )",
              "A": "先声明对象，然后才能使用对象",
              "B": "先声明对象，为对象分配内存空间，然后才能使用对象",
              "C": "先声明对象，为对象分配内存空间，对对象初始化，然后才能使用对象",
              "D": "上述说法都对",
              "answer": "C",
              "yourAnswer": "A"
            },
            "17": {
              "id": 17,
              "problem": "一个类可同时定义许多同名的方法，这些方法的形式参数个数、类型或顺序各不相同，传回的值也可以不相同，这种特性称为（ ）。",
              "A": "继承",
              "B": "重写",
              "C": "重载",
              "D": "封装",
              "answer": "C",
              "yourAnswer": "A"
            },
            "18": {
              "id": 18,
              "problem": "若A是抽象类，B是其子类且A和B都有默认构造方法，则以下语句非法的是（ ）。",
              "A": "A a;",
              "B": "A a \u003d new A();",
              "C": "A a[] \u003d new A[4];",
              "D": "A a \u003d new B();",
              "answer": "B",
              "yourAnswer": "A"
            },
            "19": {
              "id": 19,
              "problem": "在创建对象时必须( )",
              "A": "先声明对象，然后才能使用对象",
              "B": "先声明对象，为对象分配内存空间，然后才能使用对象",
              "C": "先声明对象，为对象分配内存空间，对对象初始化，然后才能使用对象",
              "D": "上述说法都对",
              "answer": "C",
              "yourAnswer": "A"
            },
            "20": {
              "id": 20,
              "problem": "下列哪个是合法的Java标识符？( )",
              "A": "Tree\u0026Glasses",
              "B": "FirstJavaApplet",
              "C": "*theLastOne",
              "D": "273.5",
              "answer": "B",
              "yourAnswer": "A"
            }
          }
        },
        "Java网络编程": {
          "name": "Java网络编程",
          "resource": "src\\pages\\Java网络编程",
          "learned": false,
          "date": "Dec 7, 2020, 1:49:59 PM",
          "integerSelectProblemHashMap": {
            "1": {
              "id": 1,
              "problem": "下列选项中，抽象类的关键字是（）？",
              "A": "interface",
              "B": "implements",
              "C": "abstract",
              "D": "class",
              "answer": "C",
              "yourAnswer": "A"
            },
            "2": {
              "id": 2,
              "problem": "下列说法正确的有（）?",
              "A": "不需要定义类，就能创建对象",
              "B": "对象中必须有属性和方法",
              "C": "属性必须是简单变量",
              "D": "属性可以是简单变量，也可以是一个对象",
              "answer": "D",
              "yourAnswer": "A"
            },
            "3": {
              "id": 3,
              "problem": "所有Java类都直接或间接继承了哪个类？",
              "A": "String",
              "B": "Object",
              "C": "Interesting",
              "D": "Hero",
              "answer": "B",
              "yourAnswer": "A"
            },
            "4": {
              "id": 4,
              "problem": "下列关于引入包的描述中，错误的是（ ）。",
              "A": "使用项目中其他包中的类时，需要在源程序中写import语句",
              "B": "import语句写在类声明的上面，package语句的下面",
              "C": "import可以引入包中所有类或其中一个类",
              "D": "import语句必须是源文件中第一条语句",
              "answer": "D",
              "yourAnswer": "A"
            },
            "5": {
              "id": 5,
              "problem": "在创建对象时必须( )",
              "A": "先声明对象，然后才能使用对象",
              "B": "先声明对象，为对象分配内存空间，然后才能使用对象",
              "C": "先声明对象，为对象分配内存空间，对对象初始化，然后才能使用对象",
              "D": "上述说法都对",
              "answer": "C",
              "yourAnswer": "A"
            },
            "6": {
              "id": 6,
              "problem": "在Java中用什么关键字修饰的方法可以直接通过类名来调用？( )",
              "A": "static",
              "B": "final",
              "C": "private",
              "D": "void",
              "answer": "A",
              "yourAnswer": "A"
            },
            "7": {
              "id": 7,
              "problem": "以下没有体现出封装性的是（ ）。",
              "A": "将类的成员用访问权限修饰符加以访问控制",
              "B": "提供成员方法操作成员变量",
              "C": "将类的全部成员都设定为public权限",
              "D": "将类按照不同的包组织管理",
              "answer": "C",
              "yourAnswer": "A"
            },
            "8": {
              "id": 8,
              "problem": "类中存在一个方法int getValue(double x){…}，以下不能与这个方法重载的是（ ）。",
              "A": "int getValue(int x){…};",
              "B": "int getValue(float x){…};",
              "C": "int getValue(double t){…};",
              "D": "int getValue(double x, double y){…};",
              "answer": "C",
              "yourAnswer": "A"
            },
            "9": {
              "id": 9,
              "problem": "以下程序的结果是（ ）。class Base {     protected void fun(){         System.out.println(0);     } } class Derived extends Base {     protected void fun(){         System.out.println(1);     } } public class Test {     public static void main(String[] args) {         Base b1 \u003d new Derived();         b1.fun();     } }",
              "A": "运行错误",
              "B": "编译错误",
              "C": "0",
              "D": "1",
              "answer": "D",
              "yourAnswer": "A"
            },
            "10": {
              "id": 10,
              "problem": "在创建对象时必须( )",
              "A": "先声明对象，然后才能使用对象",
              "B": "先声明对象，为对象分配内存空间，然后才能使用对象",
              "C": "先声明对象，为对象分配内存空间，对对象初始化，然后才能使用对象",
              "D": "上述说法都对",
              "answer": "C",
              "yourAnswer": "A"
            },
            "11": {
              "id": 11,
              "problem": "对于私有构造方法，以下说法正确的是（ ）。",
              "A": "构造方法如果被限定为private则会产生编译错误",
              "B": "不能通过私有构造方法产生类的对象",
              "C": "私有构造方法不能在类外通过new调用创建对象",
              "D": "具有私有构造方法的类不能被继承",
              "answer": "C",
              "yourAnswer": "A"
            },
            "12": {
              "id": 12,
              "problem": "下列不可作为java语言修饰符的是( )",
              "A": "a1",
              "B": "$1",
              "C": "_1",
              "D": "11",
              "answer": "D",
              "yourAnswer": "A"
            },
            "13": {
              "id": 13,
              "problem": "欲构造ArrayList类得一个实例，此类继承了List接口，下列哪个方法是正确的：",
              "A": "ArrayList myList \u003d new Object();",
              "B": "List myList \u003d new ArrayList();",
              "C": "ArraylList myList \u003d new List();",
              "D": "List myList \u003d new List();",
              "answer": "B",
              "yourAnswer": "A"
            },
            "14": {
              "id": 14,
              "problem": "接口中有几个构造方法？",
              "A": "0",
              "B": "1",
              "C": "2",
              "D": "以上都不对",
              "answer": "A",
              "yourAnswer": "A"
            },
            "15": {
              "id": 15,
              "problem": "下列关于打包的描述中，错误的是（ ）。",
              "A": "一个源文件中最多包含一条package语句，且必须是第一条语句",
              "B": "一个源文件中定义的类的字节码可以存放于不同的包中",
              "C": "若源文件中没有包含package语句，则类的字节码被放入无名包中",
              "D": "不在一个源文件中定义的子类和父类可以位于不同包中",
              "answer": "B",
              "yourAnswer": "A"
            },
            "16": {
              "id": 16,
              "problem": "结构化程序设计所规定的三种基本控制结构是( )",
              "A": "输入、处理、输出",
              "B": "树形、网形、环形",
              "C": "顺序、选择、循环",
              "D": "主程序、子程序、函数",
              "answer": "C",
              "yourAnswer": "A"
            },
            "17": {
              "id": 17,
              "problem": "InputStream类的作用就是将文件中的数据读入到内存中，该类中的哪个方法可以关闭文件输入流对象？",
              "A": "int read()",
              "B": "void close()",
              "C": "int available()",
              "D": "int read(byte[] b)",
              "answer": "B",
              "yourAnswer": "A"
            },
            "18": {
              "id": 18,
              "problem": "InputStream类的作用就是将文件中的数据读入到内存中，该类中的哪个方法可以关闭文件输入流对象？",
              "A": "int read()",
              "B": "void close()",
              "C": "int available()",
              "D": "int read(byte[] b)",
              "answer": "B",
              "yourAnswer": "A"
            },
            "19": {
              "id": 19,
              "problem": "在创建对象时必须( )",
              "A": "先声明对象，然后才能使用对象",
              "B": "先声明对象，为对象分配内存空间，然后才能使用对象",
              "C": "先声明对象，为对象分配内存空间，对对象初始化，然后才能使用对象",
              "D": "上述说法都对",
              "answer": "C",
              "yourAnswer": "A"
            },
            "20": {
              "id": 20,
              "problem": "类中存在一个方法int getValue(double x){…}，以下不能与这个方法重载的是（ ）。",
              "A": "int getValue(int x){…};",
              "B": "int getValue(float x){…};",
              "C": "int getValue(double t){…};",
              "D": "int getValue(double x, double y){…};",
              "answer": "C",
              "yourAnswer": "A"
            }
          }
        },
        "Java实例": {
          "name": "Java实例",
          "resource": "src\\pages\\Java实例",
          "learned": false,
          "date": "Dec 7, 2020, 1:49:59 PM",
          "integerSelectProblemHashMap": {
            "1": {
              "id": 1,
              "problem": "欲构造ArrayList类得一个实例，此类继承了List接口，下列哪个方法是正确的：",
              "A": "ArrayList myList \u003d new Object();",
              "B": "List myList \u003d new ArrayList();",
              "C": "ArraylList myList \u003d new List();",
              "D": "List myList \u003d new List();",
              "answer": "B",
              "yourAnswer": "A"
            },
            "2": {
              "id": 2,
              "problem": "下列关于抽象类的描述中，错误的是（ ）。",
              "A": "抽象类中可以包含抽象方法，也可以不包含抽象方法",
              "B": "抽象类不能实例化，即使抽象类中没有声明抽象方法，也不能实例化",
              "C": "不能声明抽象类的变量(对象)",
              "D": "包含抽象方法的类，必须要声明为抽象类",
              "answer": "C",
              "yourAnswer": "A"
            },
            "3": {
              "id": 3,
              "problem": "下列选项中，抽象类的关键字是（）？",
              "A": "interface",
              "B": "implements",
              "C": "abstract",
              "D": "class",
              "answer": "C",
              "yourAnswer": "A"
            },
            "4": {
              "id": 4,
              "problem": "接口中有几个构造方法？",
              "A": "0",
              "B": "1",
              "C": "2",
              "D": "以上都不对",
              "answer": "A",
              "yourAnswer": "A"
            },
            "5": {
              "id": 5,
              "problem": "变量命名规范说法正确的是( )",
              "A": "不同类型的变量，可以起相同的名字；",
              "B": "变量由字母、下划线、数字、$符号随意组成；",
              "C": "变量不能以数字作为开头；",
              "D": "A和a在java中是同一个变量；",
              "answer": "A",
              "yourAnswer": "A"
            },
            "6": {
              "id": 6,
              "problem": "欲构造ArrayList类得一个实例，此类继承了List接口，下列哪个方法是正确的：",
              "A": "ArrayList myList \u003d new Object();",
              "B": "List myList \u003d new ArrayList();",
              "C": "ArraylList myList \u003d new List();",
              "D": "List myList \u003d new List();",
              "answer": "B",
              "yourAnswer": "A"
            },
            "7": {
              "id": 7,
              "problem": "以下程序的结果是（ ）。class Base {     protected void fun(){         System.out.println(0);     } } class Derived extends Base {     protected void fun(){         System.out.println(1);     } } public class Test {     public static void main(String[] args) {         Base b1 \u003d new Derived();         b1.fun();     } }",
              "A": "运行错误",
              "B": "编译错误",
              "C": "0",
              "D": "1",
              "answer": "D",
              "yourAnswer": "A"
            },
            "8": {
              "id": 8,
              "problem": "以下关于重载的说法错误的是（ ）。",
              "A": "重载的方法只要定义正确，调用时就不会有歧义性。",
              "B": "重载的方法通常实现相似的功能",
              "C": "重载的方法可以互相调用，提高代码复用",
              "D": "重载是多态的一种表现形式",
              "answer": "A",
              "yourAnswer": "A"
            },
            "9": {
              "id": 9,
              "problem": "一个类可同时定义许多同名的方法，这些方法的形式参数个数、类型或顺序各不相同，传回的值也可以不相同，这种特性称为（ ）。",
              "A": "继承",
              "B": "重写",
              "C": "重载",
              "D": "封装",
              "answer": "C",
              "yourAnswer": "A"
            },
            "10": {
              "id": 10,
              "problem": "如果类中成员的定义没有用访问权限修饰符，则该成员不能被（ ）访问。",
              "A": "同一个包中子类",
              "B": "子类",
              "C": "同一个包中其他类",
              "D": "其他包中所有类",
              "answer": "D",
              "yourAnswer": "A"
            },
            "11": {
              "id": 11,
              "problem": "下列关于包的描述中错误的是（ ）",
              "A": "使用包的原因之一是避免类名重复",
              "B": "包是由.class文件组成的一个集合，是一个文件夹",
              "C": "功能相同或者相关的类一般组织在一个包中",
              "D": "包只能定义一层，即包中不能再有包",
              "answer": "D",
              "yourAnswer": "A"
            },
            "12": {
              "id": 12,
              "problem": "( )是FileInputStream的子类，可用于读取二进制文件.",
              "A": "DataOutputStream",
              "B": "DataInputStream",
              "C": "Reader",
              "D": "Writer",
              "answer": "B",
              "yourAnswer": "A"
            },
            "13": {
              "id": 13,
              "problem": "接口中有几个构造方法？",
              "A": "0",
              "B": "1",
              "C": "2",
              "D": "以上都不对",
              "answer": "A",
              "yourAnswer": "A"
            },
            "14": {
              "id": 14,
              "problem": "以下关于多态的描述中错误的是（ ）。",
              "A": "重载和重写都是多态的表现形式",
              "B": "多态性分为动态多态性(动态绑定)和静态多态性两种",
              "C": "多态性可以加快代码的运行速度",
              "D": "多态性是面向对象的核心特征之一",
              "answer": "C",
              "yourAnswer": "A"
            },
            "15": {
              "id": 15,
              "problem": "若A是抽象类，B是其子类且A和B都有默认构造方法，则以下语句非法的是（ ）。",
              "A": "A a;",
              "B": "A a \u003d new A();",
              "C": "A a[] \u003d new A[4];",
              "D": "A a \u003d new B();",
              "answer": "B",
              "yourAnswer": "A"
            },
            "16": {
              "id": 16,
              "problem": "以下不是面向对象特征的是（ ）。",
              "A": "继承",
              "B": "代码复制",
              "C": "封装",
              "D": "多态",
              "answer": "B",
              "yourAnswer": "A"
            },
            "17": {
              "id": 17,
              "problem": "下列关于引入包的描述中，错误的是（ ）。",
              "A": "使用项目中其他包中的类时，需要在源程序中写import语句",
              "B": "import语句写在类声明的上面，package语句的下面",
              "C": "import可以引入包中所有类或其中一个类",
              "D": "import语句必须是源文件中第一条语句",
              "answer": "D",
              "yourAnswer": "A"
            },
            "18": {
              "id": 18,
              "problem": "在创建对象时必须( )",
              "A": "先声明对象，然后才能使用对象",
              "B": "先声明对象，为对象分配内存空间，然后才能使用对象",
              "C": "先声明对象，为对象分配内存空间，对对象初始化，然后才能使用对象",
              "D": "上述说法都对",
              "answer": "C",
              "yourAnswer": "A"
            },
            "19": {
              "id": 19,
              "problem": "以下程序的输出结果是（ ）。abstract class A {     public abstract void fun();     public void fun(int a) {         System.out.println(a);     } } class TestA extends A {     public static void main(String[] args) {         TestA ta \u003d new TestA();         ta.fun(1);     } }",
              "A": "1",
              "B": "编译错误",
              "C": "运行错误",
              "D": "无输出",
              "answer": "B",
              "yourAnswer": "A"
            },
            "20": {
              "id": 20,
              "problem": "下列关于构造方法的叙述中，错误的是( )",
              "A": "Java语言规定构造方法名与类名必须相同",
              "B": "Java语言规定构造方法没有返回值，但不用void声明",
              "C": "Java语言规定构造方法不可以重载",
              "D": "Java语言规定构造方法只能通过new自动调用",
              "answer": "C",
              "yourAnswer": "A"
            }
          }
        },
        "JavaHashMap": {
          "name": "JavaHashMap",
          "resource": "src\\pages\\JavaHashMap",
          "learned": false,
          "date": "Dec 7, 2020, 1:49:59 PM",
          "integerSelectProblemHashMap": {
            "1": {
              "id": 1,
              "problem": "下列关于打包的描述中，错误的是（ ）。",
              "A": "一个源文件中最多包含一条package语句，且必须是第一条语句",
              "B": "一个源文件中定义的类的字节码可以存放于不同的包中",
              "C": "若源文件中没有包含package语句，则类的字节码被放入无名包中",
              "D": "不在一个源文件中定义的子类和父类可以位于不同包中",
              "answer": "B",
              "yourAnswer": "A"
            },
            "2": {
              "id": 2,
              "problem": "如果类中成员的定义没有用访问权限修饰符，则该成员不能被（ ）访问。",
              "A": "同一个包中子类",
              "B": "子类",
              "C": "同一个包中其他类",
              "D": "其他包中所有类",
              "answer": "D",
              "yourAnswer": "A"
            },
            "3": {
              "id": 3,
              "problem": "以下关于多态的描述中错误的是（ ）。",
              "A": "重载和重写都是多态的表现形式",
              "B": "多态性分为动态多态性(动态绑定)和静态多态性两种",
              "C": "多态性可以加快代码的运行速度",
              "D": "多态性是面向对象的核心特征之一",
              "answer": "C",
              "yourAnswer": "A"
            },
            "4": {
              "id": 4,
              "problem": "以下程序的结果是（ ）。class Base {     protected void fun(){         System.out.println(0);     } } class Derived extends Base {     protected void fun(){         System.out.println(1);     } } public class Test {     public static void main(String[] args) {         Base b1 \u003d new Derived();         b1.fun();     } }",
              "A": "运行错误",
              "B": "编译错误",
              "C": "0",
              "D": "1",
              "answer": "D",
              "yourAnswer": "A"
            },
            "5": {
              "id": 5,
              "problem": "欲构造ArrayList类得一个实例，此类继承了List接口，下列哪个方法是正确的：",
              "A": "ArrayList myList \u003d new Object();",
              "B": "List myList \u003d new ArrayList();",
              "C": "ArraylList myList \u003d new List();",
              "D": "List myList \u003d new List();",
              "answer": "B",
              "yourAnswer": "A"
            },
            "6": {
              "id": 6,
              "problem": "下列说法正确的有（）?",
              "A": "不需要定义类，就能创建对象",
              "B": "对象中必须有属性和方法",
              "C": "属性必须是简单变量",
              "D": "属性可以是简单变量，也可以是一个对象",
              "answer": "D",
              "yourAnswer": "A"
            },
            "7": {
              "id": 7,
              "problem": "如果希望类中成员即使被子类继承也只能通过父类方法间接访问，则应该使用修饰符（）",
              "A": "public",
              "B": "protected",
              "C": "不写",
              "D": "private",
              "answer": "D",
              "yourAnswer": "A"
            },
            "8": {
              "id": 8,
              "problem": "下列说法正确的有（）?",
              "A": "不需要定义类，就能创建对象",
              "B": "对象中必须有属性和方法",
              "C": "属性必须是简单变量",
              "D": "属性可以是简单变量，也可以是一个对象",
              "answer": "D",
              "yourAnswer": "A"
            },
            "9": {
              "id": 9,
              "problem": "以下关于继承的叙述正确的是( )",
              "A": "在Java中类只允许单一继承",
              "B": "在Java中一个类只能实现一个接口",
              "C": "在Java中一个类不能同时继承一个类和实现一个接口",
              "D": "在Java中接口只允许单一继承",
              "answer": "A",
              "yourAnswer": "A"
            },
            "10": {
              "id": 10,
              "problem": "类中存在一个方法int getValue(int x){…}，以下能与这个方法重载的是（ ）。",
              "A": "public getValue(int x){…};",
              "B": "void getValue(int x){…};",
              "C": "int getValue(int x, int y){…};",
              "D": "int get(int x){…};",
              "answer": "C",
              "yourAnswer": "A"
            },
            "11": {
              "id": 11,
              "problem": "Java中( )",
              "A": "一个子类可以有多个父类，一个父类也可以有多个子类",
              "B": "一个子类可以有多个父类，但一个父类只可以有一个子类",
              "C": "一个子类可以有一个父类，但一个父类可以有多个子类",
              "D": "上述说法都不对",
              "answer": "C",
              "yourAnswer": "A"
            },
            "12": {
              "id": 12,
              "problem": "以下程序的结果是（ ）。class Base {     protected void fun(){         System.out.println(0);     } } class Derived extends Base {     protected void fun(){         System.out.println(1);     } } public class Test {     public static void main(String[] args) {         Base b1 \u003d new Derived();         b1.fun();     } }",
              "A": "运行错误",
              "B": "编译错误",
              "C": "0",
              "D": "1",
              "answer": "D",
              "yourAnswer": "A"
            },
            "13": {
              "id": 13,
              "problem": "下列不是重载方法的特征的是（ ）。",
              "A": "参数个数不同",
              "B": "返回值类型不同",
              "C": "参数类型不同",
              "D": "方法名相同",
              "answer": "B",
              "yourAnswer": "A"
            },
            "14": {
              "id": 14,
              "problem": "Java的核心包中，提供编程应用的基本类包是（ ）",
              "A": "java.util",
              "B": "java.lang",
              "C": "java.applet",
              "D": "java.rmi",
              "answer": "B",
              "yourAnswer": "A"
            },
            "15": {
              "id": 15,
              "problem": "下列哪一个关键字用于实现接口来定义类？( )",
              "A": "extends",
              "B": "implements",
              "C": "abstract",
              "D": "interface",
              "answer": "B",
              "yourAnswer": "A"
            },
            "16": {
              "id": 16,
              "problem": "下列选项中，抽象类的关键字是（）？",
              "A": "interface",
              "B": "implements",
              "C": "abstract",
              "D": "class",
              "answer": "C",
              "yourAnswer": "A"
            },
            "17": {
              "id": 17,
              "problem": "BufferedWriter类是Writer类的子类，BufferedWriter类中的（）方法可以插入一个换行符。",
              "A": "void newLine()",
              "B": "void close()",
              "C": "void flush()",
              "D": "void write(String str)",
              "answer": "A",
              "yourAnswer": "A"
            },
            "18": {
              "id": 18,
              "problem": "使用字节输出流FileOutputStream类中的哪个构造方法，在写数据时能够不覆盖文件中原有的内容？",
              "A": "FileOutputStream(String name)",
              "B": "FileOutputStream(File file,String name)",
              "C": "FileOutputStream(String name,boolean append)",
              "D": "FileOutputStream(File file)",
              "answer": "C",
              "yourAnswer": "A"
            },
            "19": {
              "id": 19,
              "problem": "类中存在一个方法int getValue(double x){…}，以下不能与这个方法重载的是（ ）。",
              "A": "int getValue(int x){…};",
              "B": "int getValue(float x){…};",
              "C": "int getValue(double t){…};",
              "D": "int getValue(double x, double y){…};",
              "answer": "C",
              "yourAnswer": "A"
            },
            "20": {
              "id": 20,
              "problem": "以下程序的结果是（ ）。class Base {     protected void fun(){         System.out.println(0);     } } class Derived extends Base {     protected void fun(){         System.out.println(1);     } } public class Test {     public static void main(String[] args) {         Base b1 \u003d new Derived();         b1.fun();     } }",
              "A": "运行错误",
              "B": "编译错误",
              "C": "0",
              "D": "1",
              "answer": "D",
              "yourAnswer": "A"
            }
          }
        },
        "JavaObject": {
          "name": "JavaObject",
          "resource": "src\\pages\\JavaObject",
          "learned": false,
          "date": "Dec 7, 2020, 1:49:59 PM",
          "integerSelectProblemHashMap": {
            "1": {
              "id": 1,
              "problem": "BufferedWriter类是Writer类的子类，BufferedWriter类中的（）方法可以插入一个换行符。",
              "A": "void newLine()",
              "B": "void close()",
              "C": "void flush()",
              "D": "void write(String str)",
              "answer": "A",
              "yourAnswer": "A"
            },
            "2": {
              "id": 2,
              "problem": "如果类中成员的定义没有用访问权限修饰符，则该成员不能被（ ）访问。",
              "A": "同一个包中子类",
              "B": "子类",
              "C": "同一个包中其他类",
              "D": "其他包中所有类",
              "answer": "D",
              "yourAnswer": "A"
            },
            "3": {
              "id": 3,
              "problem": "下列不是重载方法的特征的是（ ）。",
              "A": "参数个数不同",
              "B": "返回值类型不同",
              "C": "参数类型不同",
              "D": "方法名相同",
              "answer": "B",
              "yourAnswer": "A"
            },
            "4": {
              "id": 4,
              "problem": "Java的核心包中，提供编程应用的基本类包是（ ）",
              "A": "java.util",
              "B": "java.lang",
              "C": "java.applet",
              "D": "java.rmi",
              "answer": "B",
              "yourAnswer": "A"
            },
            "5": {
              "id": 5,
              "problem": "下列关于包的描述中错误的是（ ）",
              "A": "使用包的原因之一是避免类名重复",
              "B": "包是由.class文件组成的一个集合，是一个文件夹",
              "C": "功能相同或者相关的类一般组织在一个包中",
              "D": "包只能定义一层，即包中不能再有包",
              "answer": "D",
              "yourAnswer": "A"
            },
            "6": {
              "id": 6,
              "problem": "一个类要实现接口的功能，可以实现几个方法？",
              "A": "0",
              "B": "1",
              "C": "2",
              "D": "全部",
              "answer": "D",
              "yourAnswer": "A"
            },
            "7": {
              "id": 7,
              "problem": "变量命名规范说法正确的是( )",
              "A": "不同类型的变量，可以起相同的名字；",
              "B": "变量由字母、下划线、数字、$符号随意组成；",
              "C": "变量不能以数字作为开头；",
              "D": "A和a在java中是同一个变量；",
              "answer": "A",
              "yourAnswer": "A"
            },
            "8": {
              "id": 8,
              "problem": "所有Java类都直接或间接继承了哪个类？",
              "A": "String",
              "B": "Object",
              "C": "Interesting",
              "D": "Hero",
              "answer": "B",
              "yourAnswer": "A"
            },
            "9": {
              "id": 9,
              "problem": "以下程序的结果是（ ）。class Base {     protected void fun(){         System.out.println(0);     } } class Derived extends Base {     protected void fun(){         System.out.println(1);     } } public class Test {     public static void main(String[] args) {         Base b1 \u003d new Derived();         b1.fun();     } }",
              "A": "运行错误",
              "B": "编译错误",
              "C": "0",
              "D": "1",
              "answer": "D",
              "yourAnswer": "A"
            },
            "10": {
              "id": 10,
              "problem": "类中存在一个方法int getValue(int x){…}，以下能与这个方法重载的是（ ）。",
              "A": "public getValue(int x){…};",
              "B": "void getValue(int x){…};",
              "C": "int getValue(int x, int y){…};",
              "D": "int get(int x){…};",
              "answer": "C",
              "yourAnswer": "A"
            },
            "11": {
              "id": 11,
              "problem": "已知A类具有以下四个成员方法，a是A类的对象，则a.fun(1, 3.14F)调用的是（ ）。",
              "A": "public void fun(int a, double b){…}",
              "B": "public int fun(double a, double b){…}",
              "C": "public void fun(float a, float b){…}",
              "D": "public float fun(int a, float b){…}",
              "answer": "D",
              "yourAnswer": "A"
            },
            "12": {
              "id": 12,
              "problem": "接口中有几个构造方法？",
              "A": "0",
              "B": "1",
              "C": "2",
              "D": "以上都不对",
              "answer": "A",
              "yourAnswer": "A"
            },
            "13": {
              "id": 13,
              "problem": "若A是抽象类，B是其子类且A和B都有默认构造方法，则以下语句非法的是（ ）。",
              "A": "A a;",
              "B": "A a \u003d new A();",
              "C": "A a[] \u003d new A[4];",
              "D": "A a \u003d new B();",
              "answer": "B",
              "yourAnswer": "A"
            },
            "14": {
              "id": 14,
              "problem": "若A是抽象类，B是其子类且A和B都有默认构造方法，则以下语句非法的是（ ）。",
              "A": "A a;",
              "B": "A a \u003d new A();",
              "C": "A a[] \u003d new A[4];",
              "D": "A a \u003d new B();",
              "answer": "B",
              "yourAnswer": "A"
            },
            "15": {
              "id": 15,
              "problem": "已知A类具有以下四个成员方法，a是A类的对象，则a.fun(1, 3.14F)调用的是（ ）。",
              "A": "public void fun(int a, double b){…}",
              "B": "public int fun(double a, double b){…}",
              "C": "public void fun(float a, float b){…}",
              "D": "public float fun(int a, float b){…}",
              "answer": "D",
              "yourAnswer": "A"
            },
            "16": {
              "id": 16,
              "problem": "下列关于引入包的描述中，错误的是（ ）。",
              "A": "使用项目中其他包中的类时，需要在源程序中写import语句",
              "B": "import语句写在类声明的上面，package语句的下面",
              "C": "import可以引入包中所有类或其中一个类",
              "D": "import语句必须是源文件中第一条语句",
              "answer": "D",
              "yourAnswer": "A"
            },
            "17": {
              "id": 17,
              "problem": "在Java中用什么关键字修饰的方法可以直接通过类名来调用？( )",
              "A": "static",
              "B": "final",
              "C": "private",
              "D": "void",
              "answer": "A",
              "yourAnswer": "A"
            },
            "18": {
              "id": 18,
              "problem": "以下关于重载的说法错误的是（ ）。",
              "A": "重载的方法只要定义正确，调用时就不会有歧义性。",
              "B": "重载的方法通常实现相似的功能",
              "C": "重载的方法可以互相调用，提高代码复用",
              "D": "重载是多态的一种表现形式",
              "answer": "A",
              "yourAnswer": "A"
            },
            "19": {
              "id": 19,
              "problem": "接口中方法的方法体内可以有几条代码？",
              "A": "0",
              "B": "1",
              "C": "2",
              "D": "多条",
              "answer": "A",
              "yourAnswer": "A"
            },
            "20": {
              "id": 20,
              "problem": "( )是FileInputStream的子类，可用于读取二进制文件.",
              "A": "DataOutputStream",
              "B": "DataInputStream",
              "C": "Reader",
              "D": "Writer",
              "answer": "B",
              "yourAnswer": "A"
            }
          }
        },
        "Java发送邮件": {
          "name": "Java发送邮件",
          "resource": "src\\pages\\Java发送邮件",
          "learned": false,
          "date": "Dec 7, 2020, 1:49:59 PM",
          "integerSelectProblemHashMap": {
            "1": {
              "id": 1,
              "problem": "以下不是面向对象特征的是（ ）。",
              "A": "继承",
              "B": "代码复制",
              "C": "封装",
              "D": "多态",
              "answer": "B",
              "yourAnswer": "A"
            },
            "2": {
              "id": 2,
              "problem": "接口中方法的修饰符默认是？",
              "A": "public",
              "B": "abstract",
              "C": "public abstract",
              "D": "public static final",
              "answer": "C",
              "yourAnswer": "A"
            },
            "3": {
              "id": 3,
              "problem": "有一段java 应用程序，它的主类名是a1，那么保存它的源文件名可以是( )",
              "A": "a1.java",
              "B": "a1.class",
              "C": "a1",
              "D": "都对",
              "answer": "A",
              "yourAnswer": "A"
            },
            "4": {
              "id": 4,
              "problem": "若A是抽象类，B是其子类且A和B都有默认构造方法，则以下语句非法的是（ ）。",
              "A": "A a;",
              "B": "A a \u003d new A();",
              "C": "A a[] \u003d new A[4];",
              "D": "A a \u003d new B();",
              "answer": "B",
              "yourAnswer": "A"
            },
            "5": {
              "id": 5,
              "problem": "一个类可同时定义许多同名的方法，这些方法的形式参数个数、类型或顺序各不相同，传回的值也可以不相同，这种特性称为（ ）。",
              "A": "继承",
              "B": "重写",
              "C": "重载",
              "D": "封装",
              "answer": "C",
              "yourAnswer": "A"
            },
            "6": {
              "id": 6,
              "problem": "类中存在一个方法int getValue(double x){…}，以下不能与这个方法重载的是（ ）。",
              "A": "int getValue(int x){…};",
              "B": "int getValue(float x){…};",
              "C": "int getValue(double t){…};",
              "D": "int getValue(double x, double y){…};",
              "answer": "C",
              "yourAnswer": "A"
            },
            "7": {
              "id": 7,
              "problem": "欲构造ArrayList类得一个实例，此类继承了List接口，下列哪个方法是正确的：",
              "A": "ArrayList myList \u003d new Object();",
              "B": "List myList \u003d new ArrayList();",
              "C": "ArraylList myList \u003d new List();",
              "D": "List myList \u003d new List();",
              "answer": "B",
              "yourAnswer": "A"
            },
            "8": {
              "id": 8,
              "problem": "下列说法正确的有（）?",
              "A": "不需要定义类，就能创建对象",
              "B": "对象中必须有属性和方法",
              "C": "属性必须是简单变量",
              "D": "属性可以是简单变量，也可以是一个对象",
              "answer": "D",
              "yourAnswer": "A"
            },
            "9": {
              "id": 9,
              "problem": "有一段java 应用程序，它的主类名是a1，那么保存它的源文件名可以是( )",
              "A": "a1.java",
              "B": "a1.class",
              "C": "a1",
              "D": "都对",
              "answer": "A",
              "yourAnswer": "A"
            },
            "10": {
              "id": 10,
              "problem": "类中存在一个方法int getValue(int x){…}，以下能与这个方法重载的是（ ）。",
              "A": "public getValue(int x){…};",
              "B": "void getValue(int x){…};",
              "C": "int getValue(int x, int y){…};",
              "D": "int get(int x){…};",
              "answer": "C",
              "yourAnswer": "A"
            },
            "11": {
              "id": 11,
              "problem": "在创建对象时必须( )",
              "A": "先声明对象，然后才能使用对象",
              "B": "先声明对象，为对象分配内存空间，然后才能使用对象",
              "C": "先声明对象，为对象分配内存空间，对对象初始化，然后才能使用对象",
              "D": "上述说法都对",
              "answer": "C",
              "yourAnswer": "A"
            },
            "12": {
              "id": 12,
              "problem": "下列关于抽象类的描述中，错误的是（ ）。",
              "A": "抽象类中可以包含抽象方法，也可以不包含抽象方法",
              "B": "抽象类不能实例化，即使抽象类中没有声明抽象方法，也不能实例化",
              "C": "不能声明抽象类的变量(对象)",
              "D": "包含抽象方法的类，必须要声明为抽象类",
              "answer": "C",
              "yourAnswer": "A"
            },
            "13": {
              "id": 13,
              "problem": "一个类要实现接口的功能，可以实现几个方法？",
              "A": "0",
              "B": "1",
              "C": "2",
              "D": "全部",
              "answer": "D",
              "yourAnswer": "A"
            },
            "14": {
              "id": 14,
              "problem": "类中存在一个方法int getValue(int x){…}，以下能与这个方法重载的是（ ）。",
              "A": "public getValue(int x){…};",
              "B": "void getValue(int x){…};",
              "C": "int getValue(int x, int y){…};",
              "D": "int get(int x){…};",
              "answer": "C",
              "yourAnswer": "A"
            },
            "15": {
              "id": 15,
              "problem": "下列关于引入包的描述中，错误的是（ ）。",
              "A": "使用项目中其他包中的类时，需要在源程序中写import语句",
              "B": "import语句写在类声明的上面，package语句的下面",
              "C": "import可以引入包中所有类或其中一个类",
              "D": "import语句必须是源文件中第一条语句",
              "answer": "D",
              "yourAnswer": "A"
            },
            "16": {
              "id": 16,
              "problem": "下列不是重载方法的特征的是（ ）。",
              "A": "参数个数不同",
              "B": "返回值类型不同",
              "C": "参数类型不同",
              "D": "方法名相同",
              "answer": "B",
              "yourAnswer": "A"
            },
            "17": {
              "id": 17,
              "problem": "以下关于重载的说法错误的是（ ）。",
              "A": "重载的方法只要定义正确，调用时就不会有歧义性。",
              "B": "重载的方法通常实现相似的功能",
              "C": "重载的方法可以互相调用，提高代码复用",
              "D": "重载是多态的一种表现形式",
              "answer": "A",
              "yourAnswer": "A"
            },
            "18": {
              "id": 18,
              "problem": "若A是抽象类，B是其子类且A和B都有默认构造方法，则以下语句非法的是（ ）。",
              "A": "A a;",
              "B": "A a \u003d new A();",
              "C": "A a[] \u003d new A[4];",
              "D": "A a \u003d new B();",
              "answer": "B",
              "yourAnswer": "A"
            },
            "19": {
              "id": 19,
              "problem": "( )类带有缓冲区，可以把一批数据读到缓冲区，避免每次都从数据源读取数据进行字符编码转换。",
              "A": "Reader",
              "B": "FileReader",
              "C": "Writer",
              "D": "BufferedReader",
              "answer": "D",
              "yourAnswer": "A"
            },
            "20": {
              "id": 20,
              "problem": "以下关于多态的描述中错误的是（ ）。",
              "A": "重载和重写都是多态的表现形式",
              "B": "多态性分为动态多态性(动态绑定)和静态多态性两种",
              "C": "多态性可以加快代码的运行速度",
              "D": "多态性是面向对象的核心特征之一",
              "answer": "C",
              "yourAnswer": "A"
            }
          }
        },
        "Java数据结构": {
          "name": "Java数据结构",
          "resource": "src\\pages\\Java数据结构",
          "learned": false,
          "date": "Dec 7, 2020, 1:49:59 PM",
          "integerSelectProblemHashMap": {
            "1": {
              "id": 1,
              "problem": "( )类带有缓冲区，可以把一批数据读到缓冲区，避免每次都从数据源读取数据进行字符编码转换。",
              "A": "Reader",
              "B": "FileReader",
              "C": "Writer",
              "D": "BufferedReader",
              "answer": "D",
              "yourAnswer": "A"
            },
            "2": {
              "id": 2,
              "problem": "java中所有类的父类是（）？",
              "A": "object",
              "B": "Father",
              "C": "Lang",
              "D": "Exception",
              "answer": "A",
              "yourAnswer": "A"
            },
            "3": {
              "id": 3,
              "problem": "下列关于抽象方法的描述中，错误的是（ ）。",
              "A": "抽象方法声明只需给出方法头，不能写方法体，直接以分号结束",
              "B": "所有的方法都可以声明为抽象方法",
              "C": "构造方法不能声明为抽象方法",
              "D": "声明抽象方法使用关键字abstract修饰",
              "answer": "B",
              "yourAnswer": "A"
            },
            "4": {
              "id": 4,
              "problem": "下列关于打包的描述中，错误的是（ ）。",
              "A": "一个源文件中最多包含一条package语句，且必须是第一条语句",
              "B": "一个源文件中定义的类的字节码可以存放于不同的包中",
              "C": "若源文件中没有包含package语句，则类的字节码被放入无名包中",
              "D": "不在一个源文件中定义的子类和父类可以位于不同包中",
              "answer": "B",
              "yourAnswer": "A"
            },
            "5": {
              "id": 5,
              "problem": "下列关于打包的描述中，错误的是（ ）。",
              "A": "一个源文件中最多包含一条package语句，且必须是第一条语句",
              "B": "一个源文件中定义的类的字节码可以存放于不同的包中",
              "C": "若源文件中没有包含package语句，则类的字节码被放入无名包中",
              "D": "不在一个源文件中定义的子类和父类可以位于不同包中",
              "answer": "B",
              "yourAnswer": "A"
            },
            "6": {
              "id": 6,
              "problem": "Java的核心包中，提供编程应用的基本类包是（ ）",
              "A": "java.util",
              "B": "java.lang",
              "C": "java.applet",
              "D": "java.rmi",
              "answer": "B",
              "yourAnswer": "A"
            },
            "7": {
              "id": 7,
              "problem": "一个类可同时定义许多同名的方法，这些方法的形式参数个数、类型或顺序各不相同，传回的值也可以不相同，这种特性称为（ ）。",
              "A": "继承",
              "B": "重写",
              "C": "重载",
              "D": "封装",
              "answer": "C",
              "yourAnswer": "A"
            },
            "8": {
              "id": 8,
              "problem": "欲构造ArrayList类得一个实例，此类继承了List接口，下列哪个方法是正确的：",
              "A": "ArrayList myList \u003d new Object();",
              "B": "List myList \u003d new ArrayList();",
              "C": "ArraylList myList \u003d new List();",
              "D": "List myList \u003d new List();",
              "answer": "B",
              "yourAnswer": "A"
            },
            "9": {
              "id": 9,
              "problem": "下列不可作为java语言修饰符的是( )",
              "A": "a1",
              "B": "$1",
              "C": "_1",
              "D": "11",
              "answer": "D",
              "yourAnswer": "A"
            },
            "10": {
              "id": 10,
              "problem": "下列哪个是合法的Java标识符？( )",
              "A": "Tree\u0026Glasses",
              "B": "FirstJavaApplet",
              "C": "*theLastOne",
              "D": "273.5",
              "answer": "B",
              "yourAnswer": "A"
            },
            "11": {
              "id": 11,
              "problem": "如果希望类中成员能被所有子类继承后像自身成员一样直接访问，则应该使用修饰符（）",
              "A": "default",
              "B": "protected",
              "C": "不写",
              "D": "private",
              "answer": " ",
              "yourAnswer": "A"
            },
            "12": {
              "id": 12,
              "problem": "下列关于包的描述中错误的是（ ）",
              "A": "使用包的原因之一是避免类名重复",
              "B": "包是由.class文件组成的一个集合，是一个文件夹",
              "C": "功能相同或者相关的类一般组织在一个包中",
              "D": "包只能定义一层，即包中不能再有包",
              "answer": "D",
              "yourAnswer": "A"
            },
            "13": {
              "id": 13,
              "problem": "下列选项中，抽象类的关键字是（）？",
              "A": "interface",
              "B": "implements",
              "C": "abstract",
              "D": "class",
              "answer": "C",
              "yourAnswer": "A"
            },
            "14": {
              "id": 14,
              "problem": "在创建对象时必须( )",
              "A": "先声明对象，然后才能使用对象",
              "B": "先声明对象，为对象分配内存空间，然后才能使用对象",
              "C": "先声明对象，为对象分配内存空间，对对象初始化，然后才能使用对象",
              "D": "上述说法都对",
              "answer": "C",
              "yourAnswer": "A"
            },
            "15": {
              "id": 15,
              "problem": "下列关于打包的描述中，错误的是（ ）。",
              "A": "一个源文件中最多包含一条package语句，且必须是第一条语句",
              "B": "一个源文件中定义的类的字节码可以存放于不同的包中",
              "C": "若源文件中没有包含package语句，则类的字节码被放入无名包中",
              "D": "不在一个源文件中定义的子类和父类可以位于不同包中",
              "answer": "B",
              "yourAnswer": "A"
            },
            "16": {
              "id": 16,
              "problem": "以下不是面向对象特征的是（ ）。",
              "A": "继承",
              "B": "代码复制",
              "C": "封装",
              "D": "多态",
              "answer": "B",
              "yourAnswer": "A"
            },
            "17": {
              "id": 17,
              "problem": "不是合法标识符的是（）",
              "A": "BigO1Long$223",
              "B": "Utfint",
              "C": "$12s",
              "D": "3d",
              "answer": "D",
              "yourAnswer": "A"
            },
            "18": {
              "id": 18,
              "problem": "（ ）是Java语言的关键字。",
              "A": "public",
              "B": "static",
              "C": "void",
              "D": "以上都是",
              "answer": "D",
              "yourAnswer": "A"
            },
            "19": {
              "id": 19,
              "problem": "如果类中成员的定义没有用访问权限修饰符，则该成员不能被（ ）访问。",
              "A": "同一个包中子类",
              "B": "子类",
              "C": "同一个包中其他类",
              "D": "其他包中所有类",
              "answer": "D",
              "yourAnswer": "A"
            },
            "20": {
              "id": 20,
              "problem": "下列关于构造方法的叙述中，错误的是( )",
              "A": "Java语言规定构造方法名与类名必须相同",
              "B": "Java语言规定构造方法没有返回值，但不用void声明",
              "C": "Java语言规定构造方法不可以重载",
              "D": "Java语言规定构造方法只能通过new自动调用",
              "answer": "C",
              "yourAnswer": "A"
            }
          }
        },
        "JavaMySQL连接": {
          "name": "JavaMySQL连接",
          "resource": "src\\pages\\JavaMySQL连接",
          "learned": false,
          "date": "Dec 7, 2020, 1:49:59 PM",
          "integerSelectProblemHashMap": {
            "1": {
              "id": 1,
              "problem": "结构化程序设计所规定的三种基本控制结构是( )",
              "A": "输入、处理、输出",
              "B": "树形、网形、环形",
              "C": "顺序、选择、循环",
              "D": "主程序、子程序、函数",
              "answer": "C",
              "yourAnswer": "A"
            },
            "2": {
              "id": 2,
              "problem": "接口中的属性会自动被修饰为？",
              "A": "public static",
              "B": "static final",
              "C": "public static final",
              "D": "public final",
              "answer": "C",
              "yourAnswer": "A"
            },
            "3": {
              "id": 3,
              "problem": "下面选项中关于 abstract 的使用正确的是( )。",
              "A": "private abstract void blood();",
              "B": "abstract final void blood ();",
              "C": "static abstract void blood ();",
              "D": "public abstract void blood ();",
              "answer": "D",
              "yourAnswer": "A"
            },
            "4": {
              "id": 4,
              "problem": "InputStream类的作用就是将文件中的数据读入到内存中，该类中的哪个方法可以关闭文件输入流对象？",
              "A": "int read()",
              "B": "void close()",
              "C": "int available()",
              "D": "int read(byte[] b)",
              "answer": "B",
              "yourAnswer": "A"
            },
            "5": {
              "id": 5,
              "problem": "以下没有体现出封装性的是（ ）。",
              "A": "将类的成员用访问权限修饰符加以访问控制",
              "B": "提供成员方法操作成员变量",
              "C": "将类的全部成员都设定为public权限",
              "D": "将类按照不同的包组织管理",
              "answer": "C",
              "yourAnswer": "A"
            },
            "6": {
              "id": 6,
              "problem": "以下关于继承的叙述正确的是( )",
              "A": "在Java中类只允许单一继承",
              "B": "在Java中一个类只能实现一个接口",
              "C": "在Java中一个类不能同时继承一个类和实现一个接口",
              "D": "在Java中接口只允许单一继承",
              "answer": "A",
              "yourAnswer": "A"
            },
            "7": {
              "id": 7,
              "problem": "类中存在一个方法int getValue(double x){…}，以下不能与这个方法重载的是（ ）。",
              "A": "int getValue(int x){…};",
              "B": "int getValue(float x){…};",
              "C": "int getValue(double t){…};",
              "D": "int getValue(double x, double y){…};",
              "answer": "C",
              "yourAnswer": "A"
            },
            "8": {
              "id": 8,
              "problem": "下面哪一个循环会导致死循环？( )",
              "A": "for (int k \u003d 0; k \u003c 0; k++)",
              "B": "for (int k \u003d 10; k \u003e 0; k--)",
              "C": "for (int k \u003d 0; k \u003c 10; k--)",
              "D": " for (int k \u003d 0; k \u003e 10; k++)",
              "answer": "C",
              "yourAnswer": "A"
            },
            "9": {
              "id": 9,
              "problem": "如果希望类中成员能被所有子类继承后像自身成员一样直接访问，则应该使用修饰符（）",
              "A": "default",
              "B": "protected",
              "C": "不写",
              "D": "private",
              "answer": " ",
              "yourAnswer": "A"
            },
            "10": {
              "id": 10,
              "problem": "变量命名规范说法正确的是( )",
              "A": "不同类型的变量，可以起相同的名字；",
              "B": "变量由字母、下划线、数字、$符号随意组成；",
              "C": "变量不能以数字作为开头；",
              "D": "A和a在java中是同一个变量；",
              "answer": "A",
              "yourAnswer": "A"
            },
            "11": {
              "id": 11,
              "problem": "表达式(11+3*8)/4%3的值是( )",
              "A": "31",
              "B": "0",
              "C": "1",
              "D": "2",
              "answer": "D",
              "yourAnswer": "A"
            },
            "12": {
              "id": 12,
              "problem": "以下不是面向对象特征的是（ ）。",
              "A": "继承",
              "B": "代码复制",
              "C": "封装",
              "D": "多态",
              "answer": "B",
              "yourAnswer": "A"
            },
            "13": {
              "id": 13,
              "problem": "下列关于抽象方法的描述中，错误的是（ ）。",
              "A": "抽象方法声明只需给出方法头，不能写方法体，直接以分号结束",
              "B": "所有的方法都可以声明为抽象方法",
              "C": "构造方法不能声明为抽象方法",
              "D": "声明抽象方法使用关键字abstract修饰",
              "answer": "B",
              "yourAnswer": "A"
            },
            "14": {
              "id": 14,
              "problem": "下面哪个是applet传递参数的正确方式？（ ）",
              "A": "\u003capplet code\u003dTest.class age\u003d33 width\u003d1 height\u003d1\u003e",
              "B": "\u003cparam name\u003dage value\u003d33\u003e",
              "C": "\u003capplet code\u003dTest.class name\u003dage value\u003d33 width\u003d1 height\u003d1\u003e",
              "D": "\u003capplet Test 33\u003e",
              "answer": "B",
              "yourAnswer": "A"
            },
            "15": {
              "id": 15,
              "problem": "下列哪一个变量不需要创建对象，直接可以根据类名调用该属性？",
              "A": "public String str;",
              "B": "String str;",
              "C": "public static String str;",
              "D": "str",
              "answer": "C",
              "yourAnswer": "A"
            },
            "16": {
              "id": 16,
              "problem": "下列不可作为java语言修饰符的是( )",
              "A": "a1",
              "B": "$1",
              "C": "_1",
              "D": "11",
              "answer": "D",
              "yourAnswer": "A"
            },
            "17": {
              "id": 17,
              "problem": "欲构造ArrayList类得一个实例，此类继承了List接口，下列哪个方法是正确的：",
              "A": "ArrayList myList \u003d new Object();",
              "B": "List myList \u003d new ArrayList();",
              "C": "ArraylList myList \u003d new List();",
              "D": "List myList \u003d new List();",
              "answer": "B",
              "yourAnswer": "A"
            },
            "18": {
              "id": 18,
              "problem": "下面哪一个循环会导致死循环？( )",
              "A": "for (int k \u003d 0; k \u003c 0; k++)",
              "B": "for (int k \u003d 10; k \u003e 0; k--)",
              "C": "for (int k \u003d 0; k \u003c 10; k--)",
              "D": " for (int k \u003d 0; k \u003e 10; k++)",
              "answer": "C",
              "yourAnswer": "A"
            },
            "19": {
              "id": 19,
              "problem": "已知A类具有以下四个成员方法，a是A类的对象，则a.fun(1, 3.14F)调用的是（ ）。",
              "A": "public void fun(int a, double b){…}",
              "B": "public int fun(double a, double b){…}",
              "C": "public void fun(float a, float b){…}",
              "D": "public float fun(int a, float b){…}",
              "answer": "D",
              "yourAnswer": "A"
            },
            "20": {
              "id": 20,
              "problem": "不是合法标识符的是（）",
              "A": "BigO1Long$223",
              "B": "Utfint",
              "C": "$12s",
              "D": "3d",
              "answer": "D",
              "yourAnswer": "A"
            }
          }
        },
        "JavaArrayList": {
          "name": "JavaArrayList",
          "resource": "src\\pages\\JavaArrayList",
          "learned": false,
          "date": "Dec 7, 2020, 1:49:59 PM",
          "integerSelectProblemHashMap": {
            "1": {
              "id": 1,
              "problem": "结构化程序设计所规定的三种基本控制结构是( )",
              "A": "输入、处理、输出",
              "B": "树形、网形、环形",
              "C": "顺序、选择、循环",
              "D": "主程序、子程序、函数",
              "answer": "C",
              "yourAnswer": "A"
            },
            "2": {
              "id": 2,
              "problem": "不是合法标识符的是（）",
              "A": "BigO1Long$223",
              "B": "Utfint",
              "C": "$12s",
              "D": "3d",
              "answer": "D",
              "yourAnswer": "A"
            },
            "3": {
              "id": 3,
              "problem": "有一段java 应用程序，它的主类名是a1，那么保存它的源文件名可以是( )",
              "A": "a1.java",
              "B": "a1.class",
              "C": "a1",
              "D": "都对",
              "answer": "A",
              "yourAnswer": "A"
            },
            "4": {
              "id": 4,
              "problem": "结构化程序设计所规定的三种基本控制结构是( )",
              "A": "输入、处理、输出",
              "B": "树形、网形、环形",
              "C": "顺序、选择、循环",
              "D": "主程序、子程序、函数",
              "answer": "C",
              "yourAnswer": "A"
            },
            "5": {
              "id": 5,
              "problem": "有一段java 应用程序，它的主类名是a1，那么保存它的源文件名可以是( )",
              "A": "a1.java",
              "B": "a1.class",
              "C": "a1",
              "D": "都对",
              "answer": "A",
              "yourAnswer": "A"
            },
            "6": {
              "id": 6,
              "problem": "接口中所有的方法都是？",
              "A": "实现方法",
              "B": "抽象方法",
              "C": "无返回值的方法",
              "D": "有返回值的方法",
              "answer": "B",
              "yourAnswer": "A"
            },
            "7": {
              "id": 7,
              "problem": "如果类中成员的定义没有用访问权限修饰符，则该成员不能被（ ）访问。",
              "A": "同一个包中子类",
              "B": "子类",
              "C": "同一个包中其他类",
              "D": "其他包中所有类",
              "answer": "D",
              "yourAnswer": "A"
            },
            "8": {
              "id": 8,
              "problem": "下列不是重载方法的特征的是（ ）。",
              "A": "参数个数不同",
              "B": "返回值类型不同",
              "C": "参数类型不同",
              "D": "方法名相同",
              "answer": "B",
              "yourAnswer": "A"
            },
            "9": {
              "id": 9,
              "problem": "在创建对象时必须( )",
              "A": "先声明对象，然后才能使用对象",
              "B": "先声明对象，为对象分配内存空间，然后才能使用对象",
              "C": "先声明对象，为对象分配内存空间，对对象初始化，然后才能使用对象",
              "D": "上述说法都对",
              "answer": "C",
              "yourAnswer": "A"
            },
            "10": {
              "id": 10,
              "problem": "InputStream类的作用就是将文件中的数据读入到内存中，该类中的哪个方法可以关闭文件输入流对象？",
              "A": "int read()",
              "B": "void close()",
              "C": "int available()",
              "D": "int read(byte[] b)",
              "answer": "B",
              "yourAnswer": "A"
            },
            "11": {
              "id": 11,
              "problem": "Java的核心包中，提供编程应用的基本类包是（ ）",
              "A": "java.util",
              "B": "java.lang",
              "C": "java.applet",
              "D": "java.rmi",
              "answer": "B",
              "yourAnswer": "A"
            },
            "12": {
              "id": 12,
              "problem": "在Java中用什么关键字修饰的方法可以直接通过类名来调用？( )",
              "A": "static",
              "B": "final",
              "C": "private",
              "D": "void",
              "answer": "A",
              "yourAnswer": "A"
            },
            "13": {
              "id": 13,
              "problem": "类中存在一个方法int getValue(double x){…}，以下不能与这个方法重载的是（ ）。",
              "A": "int getValue(int x){…};",
              "B": "int getValue(float x){…};",
              "C": "int getValue(double t){…};",
              "D": "int getValue(double x, double y){…};",
              "answer": "C",
              "yourAnswer": "A"
            },
            "14": {
              "id": 14,
              "problem": "以下关于重载的说法错误的是（ ）。",
              "A": "重载的方法只要定义正确，调用时就不会有歧义性。",
              "B": "重载的方法通常实现相似的功能",
              "C": "重载的方法可以互相调用，提高代码复用",
              "D": "重载是多态的一种表现形式",
              "answer": "A",
              "yourAnswer": "A"
            },
            "15": {
              "id": 15,
              "problem": "BufferedWriter类是Writer类的子类，BufferedWriter类中的（）方法可以插入一个换行符。",
              "A": "void newLine()",
              "B": "void close()",
              "C": "void flush()",
              "D": "void write(String str)",
              "answer": "A",
              "yourAnswer": "A"
            },
            "16": {
              "id": 16,
              "problem": "以下标识符中哪项是不合法的( )",
              "A": "int",
              "B": "$double",
              "C": "hello",
              "D": "BigMeaninglessName",
              "answer": "A",
              "yourAnswer": "A"
            },
            "17": {
              "id": 17,
              "problem": "以下标识符中哪项是不合法的( )",
              "A": "int",
              "B": "$double",
              "C": "hello",
              "D": "BigMeaninglessName",
              "answer": "A",
              "yourAnswer": "A"
            },
            "18": {
              "id": 18,
              "problem": "结构化程序设计所规定的三种基本控制结构是( )",
              "A": "输入、处理、输出",
              "B": "树形、网形、环形",
              "C": "顺序、选择、循环",
              "D": "主程序、子程序、函数",
              "answer": "C",
              "yourAnswer": "A"
            },
            "19": {
              "id": 19,
              "problem": "接口中的属性会自动被修饰为？",
              "A": "public static",
              "B": "static final",
              "C": "public static final",
              "D": "public final",
              "answer": "C",
              "yourAnswer": "A"
            },
            "20": {
              "id": 20,
              "problem": "以下关于重载的说法错误的是（ ）。",
              "A": "重载的方法只要定义正确，调用时就不会有歧义性。",
              "B": "重载的方法通常实现相似的功能",
              "C": "重载的方法可以互相调用，提高代码复用",
              "D": "重载是多态的一种表现形式",
              "answer": "A",
              "yourAnswer": "A"
            }
          }
        },
        "JavaApplet基础": {
          "name": "JavaApplet基础",
          "resource": "src\\pages\\JavaApplet基础",
          "learned": false,
          "date": "Dec 7, 2020, 1:49:59 PM",
          "integerSelectProblemHashMap": {
            "1": {
              "id": 1,
              "problem": "( )是FileInputStream的子类，可用于读取二进制文件.",
              "A": "DataOutputStream",
              "B": "DataInputStream",
              "C": "Reader",
              "D": "Writer",
              "answer": "B",
              "yourAnswer": "A"
            },
            "2": {
              "id": 2,
              "problem": "不是合法标识符的是（）",
              "A": "BigO1Long$223",
              "B": "Utfint",
              "C": "$12s",
              "D": "3d",
              "answer": "D",
              "yourAnswer": "A"
            },
            "3": {
              "id": 3,
              "problem": "类中存在一个方法int getValue(int x){…}，以下能与这个方法重载的是（ ）。",
              "A": "public getValue(int x){…};",
              "B": "void getValue(int x){…};",
              "C": "int getValue(int x, int y){…};",
              "D": "int get(int x){…};",
              "answer": "C",
              "yourAnswer": "A"
            },
            "4": {
              "id": 4,
              "problem": "接口中有几个构造方法？",
              "A": "0",
              "B": "1",
              "C": "2",
              "D": "以上都不对",
              "answer": "A",
              "yourAnswer": "A"
            },
            "5": {
              "id": 5,
              "problem": "对于私有构造方法，以下说法正确的是（ ）。",
              "A": "构造方法如果被限定为private则会产生编译错误",
              "B": "不能通过私有构造方法产生类的对象",
              "C": "私有构造方法不能在类外通过new调用创建对象",
              "D": "具有私有构造方法的类不能被继承",
              "answer": "C",
              "yourAnswer": "A"
            },
            "6": {
              "id": 6,
              "problem": "假设现在有一个对象X,有一个属性a.则访问当前属性的方法是（）？",
              "A": "a.x",
              "B": "x.a",
              "C": "A.x",
              "D": "X.a",
              "answer": "D",
              "yourAnswer": "A"
            },
            "7": {
              "id": 7,
              "problem": "以下关于重载的说法错误的是（ ）。",
              "A": "重载的方法只要定义正确，调用时就不会有歧义性。",
              "B": "重载的方法通常实现相似的功能",
              "C": "重载的方法可以互相调用，提高代码复用",
              "D": "重载是多态的一种表现形式",
              "answer": "A",
              "yourAnswer": "A"
            },
            "8": {
              "id": 8,
              "problem": "InputStream类的作用就是将文件中的数据读入到内存中，该类中的哪个方法可以关闭文件输入流对象？",
              "A": "int read()",
              "B": "void close()",
              "C": "int available()",
              "D": "int read(byte[] b)",
              "answer": "B",
              "yourAnswer": "A"
            },
            "9": {
              "id": 9,
              "problem": "欲构造ArrayList类得一个实例，此类继承了List接口，下列哪个方法是正确的：",
              "A": "ArrayList myList \u003d new Object();",
              "B": "List myList \u003d new ArrayList();",
              "C": "ArraylList myList \u003d new List();",
              "D": "List myList \u003d new List();",
              "answer": "B",
              "yourAnswer": "A"
            },
            "10": {
              "id": 10,
              "problem": "以下没有体现出封装性的是（ ）。",
              "A": "将类的成员用访问权限修饰符加以访问控制",
              "B": "提供成员方法操作成员变量",
              "C": "将类的全部成员都设定为public权限",
              "D": "将类按照不同的包组织管理",
              "answer": "C",
              "yourAnswer": "A"
            },
            "11": {
              "id": 11,
              "problem": "对于私有构造方法，以下说法正确的是（ ）。",
              "A": "构造方法如果被限定为private则会产生编译错误",
              "B": "不能通过私有构造方法产生类的对象",
              "C": "私有构造方法不能在类外通过new调用创建对象",
              "D": "具有私有构造方法的类不能被继承",
              "answer": "C",
              "yourAnswer": "A"
            },
            "12": {
              "id": 12,
              "problem": "不是合法标识符的是（）",
              "A": "BigO1Long$223",
              "B": "Utfint",
              "C": "$12s",
              "D": "3d",
              "answer": "D",
              "yourAnswer": "A"
            },
            "13": {
              "id": 13,
              "problem": "下列修饰符中与访问控制无关的是（）",
              "A": "private　",
              "B": "public",
              "C": "protected",
              "D": "default",
              "answer": "D",
              "yourAnswer": "A"
            },
            "14": {
              "id": 14,
              "problem": "BufferedWriter类是Writer类的子类，BufferedWriter类中的（）方法可以插入一个换行符。",
              "A": "void newLine()",
              "B": "void close()",
              "C": "void flush()",
              "D": "void write(String str)",
              "answer": "A",
              "yourAnswer": "A"
            },
            "15": {
              "id": 15,
              "problem": "已知A类具有以下四个成员方法，a是A类的对象，则a.fun(1, 3.14F)调用的是（ ）。",
              "A": "public void fun(int a, double b){…}",
              "B": "public int fun(double a, double b){…}",
              "C": "public void fun(float a, float b){…}",
              "D": "public float fun(int a, float b){…}",
              "answer": "D",
              "yourAnswer": "A"
            },
            "16": {
              "id": 16,
              "problem": "如果希望类中成员即使被子类继承也只能通过父类方法间接访问，则应该使用修饰符（）",
              "A": "public",
              "B": "protected",
              "C": "不写",
              "D": "private",
              "answer": "D",
              "yourAnswer": "A"
            },
            "17": {
              "id": 17,
              "problem": "一个类可同时定义许多同名的方法，这些方法的形式参数个数、类型或顺序各不相同，传回的值也可以不相同，这种特性称为（ ）。",
              "A": "继承",
              "B": "重写",
              "C": "重载",
              "D": "封装",
              "answer": "C",
              "yourAnswer": "A"
            },
            "18": {
              "id": 18,
              "problem": "Java的核心包中，提供编程应用的基本类包是（ ）",
              "A": "java.util",
              "B": "java.lang",
              "C": "java.applet",
              "D": "java.rmi",
              "answer": "B",
              "yourAnswer": "A"
            },
            "19": {
              "id": 19,
              "problem": "已知A类具有以下四个成员方法，a是A类的对象，则a.fun(1, 3.14F)调用的是（ ）。",
              "A": "public void fun(int a, double b){…}",
              "B": "public int fun(double a, double b){…}",
              "C": "public void fun(float a, float b){…}",
              "D": "public float fun(int a, float b){…}",
              "answer": "D",
              "yourAnswer": "A"
            },
            "20": {
              "id": 20,
              "problem": "下面哪个是applet传递参数的正确方式？（ ）",
              "A": "\u003capplet code\u003dTest.class age\u003d33 width\u003d1 height\u003d1\u003e",
              "B": "\u003cparam name\u003dage value\u003d33\u003e",
              "C": "\u003capplet code\u003dTest.class name\u003dage value\u003d33 width\u003d1 height\u003d1\u003e",
              "D": "\u003capplet Test 33\u003e",
              "answer": "B",
              "yourAnswer": "A"
            }
          }
        },
        "JavaLinkedList": {
          "name": "JavaLinkedList",
          "resource": "src\\pages\\JavaLinkedList",
          "learned": false,
          "date": "Dec 7, 2020, 1:49:59 PM",
          "integerSelectProblemHashMap": {
            "1": {
              "id": 1,
              "problem": "一个类要实现多个接口，用什么关键字?",
              "A": "extends",
              "B": "implements",
              "C": "instanceof",
              "D": "import",
              "answer": "B",
              "yourAnswer": "A"
            },
            "2": {
              "id": 2,
              "problem": "java中所有类的父类是（）？",
              "A": "object",
              "B": "Father",
              "C": "Lang",
              "D": "Exception",
              "answer": "A",
              "yourAnswer": "A"
            },
            "3": {
              "id": 3,
              "problem": "BufferedWriter类是Writer类的子类，BufferedWriter类中的（）方法可以插入一个换行符。",
              "A": "void newLine()",
              "B": "void close()",
              "C": "void flush()",
              "D": "void write(String str)",
              "answer": "A",
              "yourAnswer": "A"
            },
            "4": {
              "id": 4,
              "problem": "以下关于重载的说法错误的是（ ）。",
              "A": "重载的方法只要定义正确，调用时就不会有歧义性。",
              "B": "重载的方法通常实现相似的功能",
              "C": "重载的方法可以互相调用，提高代码复用",
              "D": "重载是多态的一种表现形式",
              "answer": "A",
              "yourAnswer": "A"
            },
            "5": {
              "id": 5,
              "problem": "下列哪个是合法的Java标识符？( )",
              "A": "Tree\u0026Glasses",
              "B": "FirstJavaApplet",
              "C": "*theLastOne",
              "D": "273.5",
              "answer": "B",
              "yourAnswer": "A"
            },
            "6": {
              "id": 6,
              "problem": "不允许作为类及类的成员的访问控制符的是（）？",
              "A": "public",
              "B": "private",
              "C": "protected",
              "D": "static",
              "answer": "D",
              "yourAnswer": "A"
            },
            "7": {
              "id": 7,
              "problem": "接口中方法的方法体内可以有几条代码？",
              "A": "0",
              "B": "1",
              "C": "2",
              "D": "多条",
              "answer": "A",
              "yourAnswer": "A"
            },
            "8": {
              "id": 8,
              "problem": "类中存在一个方法int getValue(double x){…}，以下不能与这个方法重载的是（ ）。",
              "A": "int getValue(int x){…};",
              "B": "int getValue(float x){…};",
              "C": "int getValue(double t){…};",
              "D": "int getValue(double x, double y){…};",
              "answer": "C",
              "yourAnswer": "A"
            },
            "9": {
              "id": 9,
              "problem": "Java的核心包中，提供编程应用的基本类包是（ ）",
              "A": "java.util",
              "B": "java.lang",
              "C": "java.applet",
              "D": "java.rmi",
              "answer": "B",
              "yourAnswer": "A"
            },
            "10": {
              "id": 10,
              "problem": "已知A类具有以下四个成员方法，a是A类的对象，则a.fun(1, 3.14F)调用的是（ ）。",
              "A": "public void fun(int a, double b){…}",
              "B": "public int fun(double a, double b){…}",
              "C": "public void fun(float a, float b){…}",
              "D": "public float fun(int a, float b){…}",
              "answer": "D",
              "yourAnswer": "A"
            },
            "11": {
              "id": 11,
              "problem": "接口中的属性会自动被修饰为？",
              "A": "public static",
              "B": "static final",
              "C": "public static final",
              "D": "public final",
              "answer": "C",
              "yourAnswer": "A"
            },
            "12": {
              "id": 12,
              "problem": "欲构造ArrayList类得一个实例，此类继承了List接口，下列哪个方法是正确的：",
              "A": "ArrayList myList \u003d new Object();",
              "B": "List myList \u003d new ArrayList();",
              "C": "ArraylList myList \u003d new List();",
              "D": "List myList \u003d new List();",
              "answer": "B",
              "yourAnswer": "A"
            },
            "13": {
              "id": 13,
              "problem": "下列关于构造方法的叙述中，错误的是( )",
              "A": "Java语言规定构造方法名与类名必须相同",
              "B": "Java语言规定构造方法没有返回值，但不用void声明",
              "C": "Java语言规定构造方法不可以重载",
              "D": "Java语言规定构造方法只能通过new自动调用",
              "answer": "C",
              "yourAnswer": "A"
            },
            "14": {
              "id": 14,
              "problem": "下列关于包的描述中错误的是（ ）",
              "A": "使用包的原因之一是避免类名重复",
              "B": "包是由.class文件组成的一个集合，是一个文件夹",
              "C": "功能相同或者相关的类一般组织在一个包中",
              "D": "包只能定义一层，即包中不能再有包",
              "answer": "D",
              "yourAnswer": "A"
            },
            "15": {
              "id": 15,
              "problem": "在Java中用什么关键字修饰的方法可以直接通过类名来调用？( )",
              "A": "static",
              "B": "final",
              "C": "private",
              "D": "void",
              "answer": "A",
              "yourAnswer": "A"
            },
            "16": {
              "id": 16,
              "problem": "下列说法正确的有（）?",
              "A": "不需要定义类，就能创建对象",
              "B": "对象中必须有属性和方法",
              "C": "属性必须是简单变量",
              "D": "属性可以是简单变量，也可以是一个对象",
              "answer": "D",
              "yourAnswer": "A"
            },
            "17": {
              "id": 17,
              "problem": "以下关于多态的描述中错误的是（ ）。",
              "A": "重载和重写都是多态的表现形式",
              "B": "多态性分为动态多态性(动态绑定)和静态多态性两种",
              "C": "多态性可以加快代码的运行速度",
              "D": "多态性是面向对象的核心特征之一",
              "answer": "C",
              "yourAnswer": "A"
            },
            "18": {
              "id": 18,
              "problem": "结构化程序设计所规定的三种基本控制结构是( )",
              "A": "输入、处理、输出",
              "B": "树形、网形、环形",
              "C": "顺序、选择、循环",
              "D": "主程序、子程序、函数",
              "answer": "C",
              "yourAnswer": "A"
            },
            "19": {
              "id": 19,
              "problem": "以下关于多态的描述中错误的是（ ）。",
              "A": "重载和重写都是多态的表现形式",
              "B": "多态性分为动态多态性(动态绑定)和静态多态性两种",
              "C": "多态性可以加快代码的运行速度",
              "D": "多态性是面向对象的核心特征之一",
              "answer": "C",
              "yourAnswer": "A"
            },
            "20": {
              "id": 20,
              "problem": "下列哪个是合法的Java标识符？( )",
              "A": "Tree\u0026Glasses",
              "B": "FirstJavaApplet",
              "C": "*theLastOne",
              "D": "273.5",
              "answer": "B",
              "yourAnswer": "A"
            }
          }
        }
      },
      "integerNewTitleManagerHashMap": {
        "1": {
          "name": "Java数据结构",
          "resource": "src\\pages\\Java数据结构",
          "learned": false,
          "date": "Dec 7, 2020, 1:49:59 PM",
          "integerSelectProblemHashMap": {
            "1": {
              "id": 1,
              "problem": "( )类带有缓冲区，可以把一批数据读到缓冲区，避免每次都从数据源读取数据进行字符编码转换。",
              "A": "Reader",
              "B": "FileReader",
              "C": "Writer",
              "D": "BufferedReader",
              "answer": "D",
              "yourAnswer": "A"
            },
            "2": {
              "id": 2,
              "problem": "java中所有类的父类是（）？",
              "A": "object",
              "B": "Father",
              "C": "Lang",
              "D": "Exception",
              "answer": "A",
              "yourAnswer": "A"
            },
            "3": {
              "id": 3,
              "problem": "下列关于抽象方法的描述中，错误的是（ ）。",
              "A": "抽象方法声明只需给出方法头，不能写方法体，直接以分号结束",
              "B": "所有的方法都可以声明为抽象方法",
              "C": "构造方法不能声明为抽象方法",
              "D": "声明抽象方法使用关键字abstract修饰",
              "answer": "B",
              "yourAnswer": "A"
            },
            "4": {
              "id": 4,
              "problem": "下列关于打包的描述中，错误的是（ ）。",
              "A": "一个源文件中最多包含一条package语句，且必须是第一条语句",
              "B": "一个源文件中定义的类的字节码可以存放于不同的包中",
              "C": "若源文件中没有包含package语句，则类的字节码被放入无名包中",
              "D": "不在一个源文件中定义的子类和父类可以位于不同包中",
              "answer": "B",
              "yourAnswer": "A"
            },
            "5": {
              "id": 5,
              "problem": "下列关于打包的描述中，错误的是（ ）。",
              "A": "一个源文件中最多包含一条package语句，且必须是第一条语句",
              "B": "一个源文件中定义的类的字节码可以存放于不同的包中",
              "C": "若源文件中没有包含package语句，则类的字节码被放入无名包中",
              "D": "不在一个源文件中定义的子类和父类可以位于不同包中",
              "answer": "B",
              "yourAnswer": "A"
            },
            "6": {
              "id": 6,
              "problem": "Java的核心包中，提供编程应用的基本类包是（ ）",
              "A": "java.util",
              "B": "java.lang",
              "C": "java.applet",
              "D": "java.rmi",
              "answer": "B",
              "yourAnswer": "A"
            },
            "7": {
              "id": 7,
              "problem": "一个类可同时定义许多同名的方法，这些方法的形式参数个数、类型或顺序各不相同，传回的值也可以不相同，这种特性称为（ ）。",
              "A": "继承",
              "B": "重写",
              "C": "重载",
              "D": "封装",
              "answer": "C",
              "yourAnswer": "A"
            },
            "8": {
              "id": 8,
              "problem": "欲构造ArrayList类得一个实例，此类继承了List接口，下列哪个方法是正确的：",
              "A": "ArrayList myList \u003d new Object();",
              "B": "List myList \u003d new ArrayList();",
              "C": "ArraylList myList \u003d new List();",
              "D": "List myList \u003d new List();",
              "answer": "B",
              "yourAnswer": "A"
            },
            "9": {
              "id": 9,
              "problem": "下列不可作为java语言修饰符的是( )",
              "A": "a1",
              "B": "$1",
              "C": "_1",
              "D": "11",
              "answer": "D",
              "yourAnswer": "A"
            },
            "10": {
              "id": 10,
              "problem": "下列哪个是合法的Java标识符？( )",
              "A": "Tree\u0026Glasses",
              "B": "FirstJavaApplet",
              "C": "*theLastOne",
              "D": "273.5",
              "answer": "B",
              "yourAnswer": "A"
            },
            "11": {
              "id": 11,
              "problem": "如果希望类中成员能被所有子类继承后像自身成员一样直接访问，则应该使用修饰符（）",
              "A": "default",
              "B": "protected",
              "C": "不写",
              "D": "private",
              "answer": " ",
              "yourAnswer": "A"
            },
            "12": {
              "id": 12,
              "problem": "下列关于包的描述中错误的是（ ）",
              "A": "使用包的原因之一是避免类名重复",
              "B": "包是由.class文件组成的一个集合，是一个文件夹",
              "C": "功能相同或者相关的类一般组织在一个包中",
              "D": "包只能定义一层，即包中不能再有包",
              "answer": "D",
              "yourAnswer": "A"
            },
            "13": {
              "id": 13,
              "problem": "下列选项中，抽象类的关键字是（）？",
              "A": "interface",
              "B": "implements",
              "C": "abstract",
              "D": "class",
              "answer": "C",
              "yourAnswer": "A"
            },
            "14": {
              "id": 14,
              "problem": "在创建对象时必须( )",
              "A": "先声明对象，然后才能使用对象",
              "B": "先声明对象，为对象分配内存空间，然后才能使用对象",
              "C": "先声明对象，为对象分配内存空间，对对象初始化，然后才能使用对象",
              "D": "上述说法都对",
              "answer": "C",
              "yourAnswer": "A"
            },
            "15": {
              "id": 15,
              "problem": "下列关于打包的描述中，错误的是（ ）。",
              "A": "一个源文件中最多包含一条package语句，且必须是第一条语句",
              "B": "一个源文件中定义的类的字节码可以存放于不同的包中",
              "C": "若源文件中没有包含package语句，则类的字节码被放入无名包中",
              "D": "不在一个源文件中定义的子类和父类可以位于不同包中",
              "answer": "B",
              "yourAnswer": "A"
            },
            "16": {
              "id": 16,
              "problem": "以下不是面向对象特征的是（ ）。",
              "A": "继承",
              "B": "代码复制",
              "C": "封装",
              "D": "多态",
              "answer": "B",
              "yourAnswer": "A"
            },
            "17": {
              "id": 17,
              "problem": "不是合法标识符的是（）",
              "A": "BigO1Long$223",
              "B": "Utfint",
              "C": "$12s",
              "D": "3d",
              "answer": "D",
              "yourAnswer": "A"
            },
            "18": {
              "id": 18,
              "problem": "（ ）是Java语言的关键字。",
              "A": "public",
              "B": "static",
              "C": "void",
              "D": "以上都是",
              "answer": "D",
              "yourAnswer": "A"
            },
            "19": {
              "id": 19,
              "problem": "如果类中成员的定义没有用访问权限修饰符，则该成员不能被（ ）访问。",
              "A": "同一个包中子类",
              "B": "子类",
              "C": "同一个包中其他类",
              "D": "其他包中所有类",
              "answer": "D",
              "yourAnswer": "A"
            },
            "20": {
              "id": 20,
              "problem": "下列关于构造方法的叙述中，错误的是( )",
              "A": "Java语言规定构造方法名与类名必须相同",
              "B": "Java语言规定构造方法没有返回值，但不用void声明",
              "C": "Java语言规定构造方法不可以重载",
              "D": "Java语言规定构造方法只能通过new自动调用",
              "answer": "C",
              "yourAnswer": "A"
            }
          }
        },
        "2": {
          "name": "Java集合框架",
          "resource": "src\\pages\\Java集合框架",
          "learned": false,
          "date": "Dec 7, 2020, 1:49:59 PM",
          "integerSelectProblemHashMap": {
            "1": {
              "id": 1,
              "problem": "如果希望类中成员能被所有子类继承后像自身成员一样直接访问，则应该使用修饰符（）",
              "A": "default",
              "B": "protected",
              "C": "不写",
              "D": "private",
              "answer": " ",
              "yourAnswer": "A"
            },
            "2": {
              "id": 2,
              "problem": "在创建对象时必须( )",
              "A": "先声明对象，然后才能使用对象",
              "B": "先声明对象，为对象分配内存空间，然后才能使用对象",
              "C": "先声明对象，为对象分配内存空间，对对象初始化，然后才能使用对象",
              "D": "上述说法都对",
              "answer": "C",
              "yourAnswer": "A"
            },
            "3": {
              "id": 3,
              "problem": "使用字节输出流FileOutputStream类中的哪个构造方法，在写数据时能够不覆盖文件中原有的内容？",
              "A": "FileOutputStream(String name)",
              "B": "FileOutputStream(File file,String name)",
              "C": "FileOutputStream(String name,boolean append)",
              "D": "FileOutputStream(File file)",
              "answer": "C",
              "yourAnswer": "A"
            },
            "4": {
              "id": 4,
              "problem": "下列关于引入包的描述中，错误的是（ ）。",
              "A": "使用项目中其他包中的类时，需要在源程序中写import语句",
              "B": "import语句写在类声明的上面，package语句的下面",
              "C": "import可以引入包中所有类或其中一个类",
              "D": "import语句必须是源文件中第一条语句",
              "answer": "D",
              "yourAnswer": "A"
            },
            "5": {
              "id": 5,
              "problem": "下列选项中，抽象类的关键字是（）？",
              "A": "interface",
              "B": "implements",
              "C": "abstract",
              "D": "class",
              "answer": "C",
              "yourAnswer": "A"
            },
            "6": {
              "id": 6,
              "problem": "下列不是重载方法的特征的是（ ）。",
              "A": "参数个数不同",
              "B": "返回值类型不同",
              "C": "参数类型不同",
              "D": "方法名相同",
              "answer": "B",
              "yourAnswer": "A"
            },
            "7": {
              "id": 7,
              "problem": "下列不是重载方法的特征的是（ ）。",
              "A": "参数个数不同",
              "B": "返回值类型不同",
              "C": "参数类型不同",
              "D": "方法名相同",
              "answer": "B",
              "yourAnswer": "A"
            },
            "8": {
              "id": 8,
              "problem": "以下关于重载的说法错误的是（ ）。",
              "A": "重载的方法只要定义正确，调用时就不会有歧义性。",
              "B": "重载的方法通常实现相似的功能",
              "C": "重载的方法可以互相调用，提高代码复用",
              "D": "重载是多态的一种表现形式",
              "answer": "A",
              "yourAnswer": "A"
            },
            "9": {
              "id": 9,
              "problem": "如果希望类中成员即使被子类继承也只能通过父类方法间接访问，则应该使用修饰符（）",
              "A": "public",
              "B": "protected",
              "C": "不写",
              "D": "private",
              "answer": "D",
              "yourAnswer": "A"
            },
            "10": {
              "id": 10,
              "problem": "下列不是重载方法的特征的是（ ）。",
              "A": "参数个数不同",
              "B": "返回值类型不同",
              "C": "参数类型不同",
              "D": "方法名相同",
              "answer": "B",
              "yourAnswer": "A"
            },
            "11": {
              "id": 11,
              "problem": "以下抽象类定义中合法的是（ ）。",
              "A": "abstract Animal{     abstract void growl(); }",
              "B": "class abstract Animal{     abstract void growl(); }",
              "C": "abstract class Animal {     abstract void growl(); } ",
              "D": "abstract class Animal {     abstract void growl() {     } }",
              "answer": "C",
              "yourAnswer": "A"
            },
            "12": {
              "id": 12,
              "problem": "下列哪一个关键字用于实现接口来定义类？( )",
              "A": "extends",
              "B": "implements",
              "C": "abstract",
              "D": "interface",
              "answer": "B",
              "yourAnswer": "A"
            },
            "13": {
              "id": 13,
              "problem": "表达式(11+3*8)/4%3的值是( )",
              "A": "31",
              "B": "0",
              "C": "1",
              "D": "2",
              "answer": "D",
              "yourAnswer": "A"
            },
            "14": {
              "id": 14,
              "problem": "下面哪个是applet传递参数的正确方式？（ ）",
              "A": "\u003capplet code\u003dTest.class age\u003d33 width\u003d1 height\u003d1\u003e",
              "B": "\u003cparam name\u003dage value\u003d33\u003e",
              "C": "\u003capplet code\u003dTest.class name\u003dage value\u003d33 width\u003d1 height\u003d1\u003e",
              "D": "\u003capplet Test 33\u003e",
              "answer": "B",
              "yourAnswer": "A"
            },
            "15": {
              "id": 15,
              "problem": "下列关于打包的描述中，错误的是（ ）。",
              "A": "一个源文件中最多包含一条package语句，且必须是第一条语句",
              "B": "一个源文件中定义的类的字节码可以存放于不同的包中",
              "C": "若源文件中没有包含package语句，则类的字节码被放入无名包中",
              "D": "不在一个源文件中定义的子类和父类可以位于不同包中",
              "answer": "B",
              "yourAnswer": "A"
            },
            "16": {
              "id": 16,
              "problem": "下列说法正确的有（）?",
              "A": "不需要定义类，就能创建对象",
              "B": "对象中必须有属性和方法",
              "C": "属性必须是简单变量",
              "D": "属性可以是简单变量，也可以是一个对象",
              "answer": "D",
              "yourAnswer": "A"
            },
            "17": {
              "id": 17,
              "problem": "InputStream类的作用就是将文件中的数据读入到内存中，该类中的哪个方法可以关闭文件输入流对象？",
              "A": "int read()",
              "B": "void close()",
              "C": "int available()",
              "D": "int read(byte[] b)",
              "answer": "B",
              "yourAnswer": "A"
            },
            "18": {
              "id": 18,
              "problem": "已知A类具有以下四个成员方法，a是A类的对象，则a.fun(1, 3.14F)调用的是（ ）。",
              "A": "public void fun(int a, double b){…}",
              "B": "public int fun(double a, double b){…}",
              "C": "public void fun(float a, float b){…}",
              "D": "public float fun(int a, float b){…}",
              "answer": "D",
              "yourAnswer": "A"
            },
            "19": {
              "id": 19,
              "problem": "表达式(11+3*8)/4%3的值是( )",
              "A": "31",
              "B": "0",
              "C": "1",
              "D": "2",
              "answer": "D",
              "yourAnswer": "A"
            },
            "20": {
              "id": 20,
              "problem": "以下关于继承的叙述正确的是( )",
              "A": "在Java中类只允许单一继承",
              "B": "在Java中一个类只能实现一个接口",
              "C": "在Java中一个类不能同时继承一个类和实现一个接口",
              "D": "在Java中接口只允许单一继承",
              "answer": "A",
              "yourAnswer": "A"
            }
          }
        },
        "3": {
          "name": "JavaArrayList",
          "resource": "src\\pages\\JavaArrayList",
          "learned": false,
          "date": "Dec 7, 2020, 1:49:59 PM",
          "integerSelectProblemHashMap": {
            "1": {
              "id": 1,
              "problem": "结构化程序设计所规定的三种基本控制结构是( )",
              "A": "输入、处理、输出",
              "B": "树形、网形、环形",
              "C": "顺序、选择、循环",
              "D": "主程序、子程序、函数",
              "answer": "C",
              "yourAnswer": "A"
            },
            "2": {
              "id": 2,
              "problem": "不是合法标识符的是（）",
              "A": "BigO1Long$223",
              "B": "Utfint",
              "C": "$12s",
              "D": "3d",
              "answer": "D",
              "yourAnswer": "A"
            },
            "3": {
              "id": 3,
              "problem": "有一段java 应用程序，它的主类名是a1，那么保存它的源文件名可以是( )",
              "A": "a1.java",
              "B": "a1.class",
              "C": "a1",
              "D": "都对",
              "answer": "A",
              "yourAnswer": "A"
            },
            "4": {
              "id": 4,
              "problem": "结构化程序设计所规定的三种基本控制结构是( )",
              "A": "输入、处理、输出",
              "B": "树形、网形、环形",
              "C": "顺序、选择、循环",
              "D": "主程序、子程序、函数",
              "answer": "C",
              "yourAnswer": "A"
            },
            "5": {
              "id": 5,
              "problem": "有一段java 应用程序，它的主类名是a1，那么保存它的源文件名可以是( )",
              "A": "a1.java",
              "B": "a1.class",
              "C": "a1",
              "D": "都对",
              "answer": "A",
              "yourAnswer": "A"
            },
            "6": {
              "id": 6,
              "problem": "接口中所有的方法都是？",
              "A": "实现方法",
              "B": "抽象方法",
              "C": "无返回值的方法",
              "D": "有返回值的方法",
              "answer": "B",
              "yourAnswer": "A"
            },
            "7": {
              "id": 7,
              "problem": "如果类中成员的定义没有用访问权限修饰符，则该成员不能被（ ）访问。",
              "A": "同一个包中子类",
              "B": "子类",
              "C": "同一个包中其他类",
              "D": "其他包中所有类",
              "answer": "D",
              "yourAnswer": "A"
            },
            "8": {
              "id": 8,
              "problem": "下列不是重载方法的特征的是（ ）。",
              "A": "参数个数不同",
              "B": "返回值类型不同",
              "C": "参数类型不同",
              "D": "方法名相同",
              "answer": "B",
              "yourAnswer": "A"
            },
            "9": {
              "id": 9,
              "problem": "在创建对象时必须( )",
              "A": "先声明对象，然后才能使用对象",
              "B": "先声明对象，为对象分配内存空间，然后才能使用对象",
              "C": "先声明对象，为对象分配内存空间，对对象初始化，然后才能使用对象",
              "D": "上述说法都对",
              "answer": "C",
              "yourAnswer": "A"
            },
            "10": {
              "id": 10,
              "problem": "InputStream类的作用就是将文件中的数据读入到内存中，该类中的哪个方法可以关闭文件输入流对象？",
              "A": "int read()",
              "B": "void close()",
              "C": "int available()",
              "D": "int read(byte[] b)",
              "answer": "B",
              "yourAnswer": "A"
            },
            "11": {
              "id": 11,
              "problem": "Java的核心包中，提供编程应用的基本类包是（ ）",
              "A": "java.util",
              "B": "java.lang",
              "C": "java.applet",
              "D": "java.rmi",
              "answer": "B",
              "yourAnswer": "A"
            },
            "12": {
              "id": 12,
              "problem": "在Java中用什么关键字修饰的方法可以直接通过类名来调用？( )",
              "A": "static",
              "B": "final",
              "C": "private",
              "D": "void",
              "answer": "A",
              "yourAnswer": "A"
            },
            "13": {
              "id": 13,
              "problem": "类中存在一个方法int getValue(double x){…}，以下不能与这个方法重载的是（ ）。",
              "A": "int getValue(int x){…};",
              "B": "int getValue(float x){…};",
              "C": "int getValue(double t){…};",
              "D": "int getValue(double x, double y){…};",
              "answer": "C",
              "yourAnswer": "A"
            },
            "14": {
              "id": 14,
              "problem": "以下关于重载的说法错误的是（ ）。",
              "A": "重载的方法只要定义正确，调用时就不会有歧义性。",
              "B": "重载的方法通常实现相似的功能",
              "C": "重载的方法可以互相调用，提高代码复用",
              "D": "重载是多态的一种表现形式",
              "answer": "A",
              "yourAnswer": "A"
            },
            "15": {
              "id": 15,
              "problem": "BufferedWriter类是Writer类的子类，BufferedWriter类中的（）方法可以插入一个换行符。",
              "A": "void newLine()",
              "B": "void close()",
              "C": "void flush()",
              "D": "void write(String str)",
              "answer": "A",
              "yourAnswer": "A"
            },
            "16": {
              "id": 16,
              "problem": "以下标识符中哪项是不合法的( )",
              "A": "int",
              "B": "$double",
              "C": "hello",
              "D": "BigMeaninglessName",
              "answer": "A",
              "yourAnswer": "A"
            },
            "17": {
              "id": 17,
              "problem": "以下标识符中哪项是不合法的( )",
              "A": "int",
              "B": "$double",
              "C": "hello",
              "D": "BigMeaninglessName",
              "answer": "A",
              "yourAnswer": "A"
            },
            "18": {
              "id": 18,
              "problem": "结构化程序设计所规定的三种基本控制结构是( )",
              "A": "输入、处理、输出",
              "B": "树形、网形、环形",
              "C": "顺序、选择、循环",
              "D": "主程序、子程序、函数",
              "answer": "C",
              "yourAnswer": "A"
            },
            "19": {
              "id": 19,
              "problem": "接口中的属性会自动被修饰为？",
              "A": "public static",
              "B": "static final",
              "C": "public static final",
              "D": "public final",
              "answer": "C",
              "yourAnswer": "A"
            },
            "20": {
              "id": 20,
              "problem": "以下关于重载的说法错误的是（ ）。",
              "A": "重载的方法只要定义正确，调用时就不会有歧义性。",
              "B": "重载的方法通常实现相似的功能",
              "C": "重载的方法可以互相调用，提高代码复用",
              "D": "重载是多态的一种表现形式",
              "answer": "A",
              "yourAnswer": "A"
            }
          }
        },
        "4": {
          "name": "JavaLinkedList",
          "resource": "src\\pages\\JavaLinkedList",
          "learned": false,
          "date": "Dec 7, 2020, 1:49:59 PM",
          "integerSelectProblemHashMap": {
            "1": {
              "id": 1,
              "problem": "一个类要实现多个接口，用什么关键字?",
              "A": "extends",
              "B": "implements",
              "C": "instanceof",
              "D": "import",
              "answer": "B",
              "yourAnswer": "A"
            },
            "2": {
              "id": 2,
              "problem": "java中所有类的父类是（）？",
              "A": "object",
              "B": "Father",
              "C": "Lang",
              "D": "Exception",
              "answer": "A",
              "yourAnswer": "A"
            },
            "3": {
              "id": 3,
              "problem": "BufferedWriter类是Writer类的子类，BufferedWriter类中的（）方法可以插入一个换行符。",
              "A": "void newLine()",
              "B": "void close()",
              "C": "void flush()",
              "D": "void write(String str)",
              "answer": "A",
              "yourAnswer": "A"
            },
            "4": {
              "id": 4,
              "problem": "以下关于重载的说法错误的是（ ）。",
              "A": "重载的方法只要定义正确，调用时就不会有歧义性。",
              "B": "重载的方法通常实现相似的功能",
              "C": "重载的方法可以互相调用，提高代码复用",
              "D": "重载是多态的一种表现形式",
              "answer": "A",
              "yourAnswer": "A"
            },
            "5": {
              "id": 5,
              "problem": "下列哪个是合法的Java标识符？( )",
              "A": "Tree\u0026Glasses",
              "B": "FirstJavaApplet",
              "C": "*theLastOne",
              "D": "273.5",
              "answer": "B",
              "yourAnswer": "A"
            },
            "6": {
              "id": 6,
              "problem": "不允许作为类及类的成员的访问控制符的是（）？",
              "A": "public",
              "B": "private",
              "C": "protected",
              "D": "static",
              "answer": "D",
              "yourAnswer": "A"
            },
            "7": {
              "id": 7,
              "problem": "接口中方法的方法体内可以有几条代码？",
              "A": "0",
              "B": "1",
              "C": "2",
              "D": "多条",
              "answer": "A",
              "yourAnswer": "A"
            },
            "8": {
              "id": 8,
              "problem": "类中存在一个方法int getValue(double x){…}，以下不能与这个方法重载的是（ ）。",
              "A": "int getValue(int x){…};",
              "B": "int getValue(float x){…};",
              "C": "int getValue(double t){…};",
              "D": "int getValue(double x, double y){…};",
              "answer": "C",
              "yourAnswer": "A"
            },
            "9": {
              "id": 9,
              "problem": "Java的核心包中，提供编程应用的基本类包是（ ）",
              "A": "java.util",
              "B": "java.lang",
              "C": "java.applet",
              "D": "java.rmi",
              "answer": "B",
              "yourAnswer": "A"
            },
            "10": {
              "id": 10,
              "problem": "已知A类具有以下四个成员方法，a是A类的对象，则a.fun(1, 3.14F)调用的是（ ）。",
              "A": "public void fun(int a, double b){…}",
              "B": "public int fun(double a, double b){…}",
              "C": "public void fun(float a, float b){…}",
              "D": "public float fun(int a, float b){…}",
              "answer": "D",
              "yourAnswer": "A"
            },
            "11": {
              "id": 11,
              "problem": "接口中的属性会自动被修饰为？",
              "A": "public static",
              "B": "static final",
              "C": "public static final",
              "D": "public final",
              "answer": "C",
              "yourAnswer": "A"
            },
            "12": {
              "id": 12,
              "problem": "欲构造ArrayList类得一个实例，此类继承了List接口，下列哪个方法是正确的：",
              "A": "ArrayList myList \u003d new Object();",
              "B": "List myList \u003d new ArrayList();",
              "C": "ArraylList myList \u003d new List();",
              "D": "List myList \u003d new List();",
              "answer": "B",
              "yourAnswer": "A"
            },
            "13": {
              "id": 13,
              "problem": "下列关于构造方法的叙述中，错误的是( )",
              "A": "Java语言规定构造方法名与类名必须相同",
              "B": "Java语言规定构造方法没有返回值，但不用void声明",
              "C": "Java语言规定构造方法不可以重载",
              "D": "Java语言规定构造方法只能通过new自动调用",
              "answer": "C",
              "yourAnswer": "A"
            },
            "14": {
              "id": 14,
              "problem": "下列关于包的描述中错误的是（ ）",
              "A": "使用包的原因之一是避免类名重复",
              "B": "包是由.class文件组成的一个集合，是一个文件夹",
              "C": "功能相同或者相关的类一般组织在一个包中",
              "D": "包只能定义一层，即包中不能再有包",
              "answer": "D",
              "yourAnswer": "A"
            },
            "15": {
              "id": 15,
              "problem": "在Java中用什么关键字修饰的方法可以直接通过类名来调用？( )",
              "A": "static",
              "B": "final",
              "C": "private",
              "D": "void",
              "answer": "A",
              "yourAnswer": "A"
            },
            "16": {
              "id": 16,
              "problem": "下列说法正确的有（）?",
              "A": "不需要定义类，就能创建对象",
              "B": "对象中必须有属性和方法",
              "C": "属性必须是简单变量",
              "D": "属性可以是简单变量，也可以是一个对象",
              "answer": "D",
              "yourAnswer": "A"
            },
            "17": {
              "id": 17,
              "problem": "以下关于多态的描述中错误的是（ ）。",
              "A": "重载和重写都是多态的表现形式",
              "B": "多态性分为动态多态性(动态绑定)和静态多态性两种",
              "C": "多态性可以加快代码的运行速度",
              "D": "多态性是面向对象的核心特征之一",
              "answer": "C",
              "yourAnswer": "A"
            },
            "18": {
              "id": 18,
              "problem": "结构化程序设计所规定的三种基本控制结构是( )",
              "A": "输入、处理、输出",
              "B": "树形、网形、环形",
              "C": "顺序、选择、循环",
              "D": "主程序、子程序、函数",
              "answer": "C",
              "yourAnswer": "A"
            },
            "19": {
              "id": 19,
              "problem": "以下关于多态的描述中错误的是（ ）。",
              "A": "重载和重写都是多态的表现形式",
              "B": "多态性分为动态多态性(动态绑定)和静态多态性两种",
              "C": "多态性可以加快代码的运行速度",
              "D": "多态性是面向对象的核心特征之一",
              "answer": "C",
              "yourAnswer": "A"
            },
            "20": {
              "id": 20,
              "problem": "下列哪个是合法的Java标识符？( )",
              "A": "Tree\u0026Glasses",
              "B": "FirstJavaApplet",
              "C": "*theLastOne",
              "D": "273.5",
              "answer": "B",
              "yourAnswer": "A"
            }
          }
        },
        "5": {
          "name": "JavaHashSet",
          "resource": "src\\pages\\JavaHashSet",
          "learned": false,
          "date": "Dec 7, 2020, 1:49:59 PM",
          "integerSelectProblemHashMap": {
            "1": {
              "id": 1,
              "problem": "接口中有几个构造方法？",
              "A": "0",
              "B": "1",
              "C": "2",
              "D": "以上都不对",
              "answer": "A",
              "yourAnswer": "A"
            },
            "2": {
              "id": 2,
              "problem": "如果希望类中成员即使被子类继承也只能通过父类方法间接访问，则应该使用修饰符（）",
              "A": "public",
              "B": "protected",
              "C": "不写",
              "D": "private",
              "answer": "D",
              "yourAnswer": "A"
            },
            "3": {
              "id": 3,
              "problem": "以下抽象类定义中合法的是（ ）。",
              "A": "abstract Animal{     abstract void growl(); }",
              "B": "class abstract Animal{     abstract void growl(); }",
              "C": "abstract class Animal {     abstract void growl(); } ",
              "D": "abstract class Animal {     abstract void growl() {     } }",
              "answer": "C",
              "yourAnswer": "A"
            },
            "4": {
              "id": 4,
              "problem": "如果类中成员的定义没有用访问权限修饰符，则该成员不能被（ ）访问。",
              "A": "同一个包中子类",
              "B": "子类",
              "C": "同一个包中其他类",
              "D": "其他包中所有类",
              "answer": "D",
              "yourAnswer": "A"
            },
            "5": {
              "id": 5,
              "problem": "( )类带有缓冲区，可以把一批数据读到缓冲区，避免每次都从数据源读取数据进行字符编码转换。",
              "A": "Reader",
              "B": "FileReader",
              "C": "Writer",
              "D": "BufferedReader",
              "answer": "D",
              "yourAnswer": "A"
            },
            "6": {
              "id": 6,
              "problem": "BufferedWriter类是Writer类的子类，BufferedWriter类中的（）方法可以插入一个换行符。",
              "A": "void newLine()",
              "B": "void close()",
              "C": "void flush()",
              "D": "void write(String str)",
              "answer": "A",
              "yourAnswer": "A"
            },
            "7": {
              "id": 7,
              "problem": "下列关于抽象方法的描述中，错误的是（ ）。",
              "A": "抽象方法声明只需给出方法头，不能写方法体，直接以分号结束",
              "B": "所有的方法都可以声明为抽象方法",
              "C": "构造方法不能声明为抽象方法",
              "D": "声明抽象方法使用关键字abstract修饰",
              "answer": "B",
              "yourAnswer": "A"
            },
            "8": {
              "id": 8,
              "problem": "下列关于构造方法的叙述中，错误的是( )",
              "A": "Java语言规定构造方法名与类名必须相同",
              "B": "Java语言规定构造方法没有返回值，但不用void声明",
              "C": "Java语言规定构造方法不可以重载",
              "D": "Java语言规定构造方法只能通过new自动调用",
              "answer": "C",
              "yourAnswer": "A"
            },
            "9": {
              "id": 9,
              "problem": "下列关于包的描述中错误的是（ ）",
              "A": "使用包的原因之一是避免类名重复",
              "B": "包是由.class文件组成的一个集合，是一个文件夹",
              "C": "功能相同或者相关的类一般组织在一个包中",
              "D": "包只能定义一层，即包中不能再有包",
              "answer": "D",
              "yourAnswer": "A"
            },
            "10": {
              "id": 10,
              "problem": "以下关于构造函数的描述错误的是( )",
              "A": "构造函数的返回类型只能是void型",
              "B": "构造函数是类的一种特殊函数，它的方法名必须与类名相同。",
              "C": "构造函数的主要作用是完成对类的对象的初始化工作。",
              "D": "一般在创建新对象时，系统会自动调用构造函数。",
              "answer": "A",
              "yourAnswer": "A"
            },
            "11": {
              "id": 11,
              "problem": "对于私有构造方法，以下说法正确的是（ ）。",
              "A": "构造方法如果被限定为private则会产生编译错误",
              "B": "不能通过私有构造方法产生类的对象",
              "C": "私有构造方法不能在类外通过new调用创建对象",
              "D": "具有私有构造方法的类不能被继承",
              "answer": "C",
              "yourAnswer": "A"
            },
            "12": {
              "id": 12,
              "problem": "在Java中用什么关键字修饰的方法可以直接通过类名来调用？( )",
              "A": "static",
              "B": "final",
              "C": "private",
              "D": "void",
              "answer": "A",
              "yourAnswer": "A"
            },
            "13": {
              "id": 13,
              "problem": "下列关于打包的描述中，错误的是（ ）。",
              "A": "一个源文件中最多包含一条package语句，且必须是第一条语句",
              "B": "一个源文件中定义的类的字节码可以存放于不同的包中",
              "C": "若源文件中没有包含package语句，则类的字节码被放入无名包中",
              "D": "不在一个源文件中定义的子类和父类可以位于不同包中",
              "answer": "B",
              "yourAnswer": "A"
            },
            "14": {
              "id": 14,
              "problem": "以下程序的输出结果是（ ）。abstract class A {     public abstract void fun();     public void fun(int a) {         System.out.println(a);     } } class TestA extends A {     public static void main(String[] args) {         TestA ta \u003d new TestA();         ta.fun(1);     } }",
              "A": "1",
              "B": "编译错误",
              "C": "运行错误",
              "D": "无输出",
              "answer": "B",
              "yourAnswer": "A"
            },
            "15": {
              "id": 15,
              "problem": "对于私有构造方法，以下说法正确的是（ ）。",
              "A": "构造方法如果被限定为private则会产生编译错误",
              "B": "不能通过私有构造方法产生类的对象",
              "C": "私有构造方法不能在类外通过new调用创建对象",
              "D": "具有私有构造方法的类不能被继承",
              "answer": "C",
              "yourAnswer": "A"
            },
            "16": {
              "id": 16,
              "problem": "在创建对象时必须( )",
              "A": "先声明对象，然后才能使用对象",
              "B": "先声明对象，为对象分配内存空间，然后才能使用对象",
              "C": "先声明对象，为对象分配内存空间，对对象初始化，然后才能使用对象",
              "D": "上述说法都对",
              "answer": "C",
              "yourAnswer": "A"
            },
            "17": {
              "id": 17,
              "problem": "以下不是面向对象特征的是（ ）。",
              "A": "继承",
              "B": "代码复制",
              "C": "封装",
              "D": "多态",
              "answer": "B",
              "yourAnswer": "A"
            },
            "18": {
              "id": 18,
              "problem": "一个类可同时定义许多同名的方法，这些方法的形式参数个数、类型或顺序各不相同，传回的值也可以不相同，这种特性称为（ ）。",
              "A": "继承",
              "B": "重写",
              "C": "重载",
              "D": "封装",
              "answer": "C",
              "yourAnswer": "A"
            },
            "19": {
              "id": 19,
              "problem": "下面哪个是applet传递参数的正确方式？（ ）",
              "A": "\u003capplet code\u003dTest.class age\u003d33 width\u003d1 height\u003d1\u003e",
              "B": "\u003cparam name\u003dage value\u003d33\u003e",
              "C": "\u003capplet code\u003dTest.class name\u003dage value\u003d33 width\u003d1 height\u003d1\u003e",
              "D": "\u003capplet Test 33\u003e",
              "answer": "B",
              "yourAnswer": "A"
            },
            "20": {
              "id": 20,
              "problem": "下面哪一个循环会导致死循环？( )",
              "A": "for (int k \u003d 0; k \u003c 0; k++)",
              "B": "for (int k \u003d 10; k \u003e 0; k--)",
              "C": "for (int k \u003d 0; k \u003c 10; k--)",
              "D": " for (int k \u003d 0; k \u003e 10; k++)",
              "answer": "C",
              "yourAnswer": "A"
            }
          }
        },
        "6": {
          "name": "JavaHashMap",
          "resource": "src\\pages\\JavaHashMap",
          "learned": false,
          "date": "Dec 7, 2020, 1:49:59 PM",
          "integerSelectProblemHashMap": {
            "1": {
              "id": 1,
              "problem": "下列关于打包的描述中，错误的是（ ）。",
              "A": "一个源文件中最多包含一条package语句，且必须是第一条语句",
              "B": "一个源文件中定义的类的字节码可以存放于不同的包中",
              "C": "若源文件中没有包含package语句，则类的字节码被放入无名包中",
              "D": "不在一个源文件中定义的子类和父类可以位于不同包中",
              "answer": "B",
              "yourAnswer": "A"
            },
            "2": {
              "id": 2,
              "problem": "如果类中成员的定义没有用访问权限修饰符，则该成员不能被（ ）访问。",
              "A": "同一个包中子类",
              "B": "子类",
              "C": "同一个包中其他类",
              "D": "其他包中所有类",
              "answer": "D",
              "yourAnswer": "A"
            },
            "3": {
              "id": 3,
              "problem": "以下关于多态的描述中错误的是（ ）。",
              "A": "重载和重写都是多态的表现形式",
              "B": "多态性分为动态多态性(动态绑定)和静态多态性两种",
              "C": "多态性可以加快代码的运行速度",
              "D": "多态性是面向对象的核心特征之一",
              "answer": "C",
              "yourAnswer": "A"
            },
            "4": {
              "id": 4,
              "problem": "以下程序的结果是（ ）。class Base {     protected void fun(){         System.out.println(0);     } } class Derived extends Base {     protected void fun(){         System.out.println(1);     } } public class Test {     public static void main(String[] args) {         Base b1 \u003d new Derived();         b1.fun();     } }",
              "A": "运行错误",
              "B": "编译错误",
              "C": "0",
              "D": "1",
              "answer": "D",
              "yourAnswer": "A"
            },
            "5": {
              "id": 5,
              "problem": "欲构造ArrayList类得一个实例，此类继承了List接口，下列哪个方法是正确的：",
              "A": "ArrayList myList \u003d new Object();",
              "B": "List myList \u003d new ArrayList();",
              "C": "ArraylList myList \u003d new List();",
              "D": "List myList \u003d new List();",
              "answer": "B",
              "yourAnswer": "A"
            },
            "6": {
              "id": 6,
              "problem": "下列说法正确的有（）?",
              "A": "不需要定义类，就能创建对象",
              "B": "对象中必须有属性和方法",
              "C": "属性必须是简单变量",
              "D": "属性可以是简单变量，也可以是一个对象",
              "answer": "D",
              "yourAnswer": "A"
            },
            "7": {
              "id": 7,
              "problem": "如果希望类中成员即使被子类继承也只能通过父类方法间接访问，则应该使用修饰符（）",
              "A": "public",
              "B": "protected",
              "C": "不写",
              "D": "private",
              "answer": "D",
              "yourAnswer": "A"
            },
            "8": {
              "id": 8,
              "problem": "下列说法正确的有（）?",
              "A": "不需要定义类，就能创建对象",
              "B": "对象中必须有属性和方法",
              "C": "属性必须是简单变量",
              "D": "属性可以是简单变量，也可以是一个对象",
              "answer": "D",
              "yourAnswer": "A"
            },
            "9": {
              "id": 9,
              "problem": "以下关于继承的叙述正确的是( )",
              "A": "在Java中类只允许单一继承",
              "B": "在Java中一个类只能实现一个接口",
              "C": "在Java中一个类不能同时继承一个类和实现一个接口",
              "D": "在Java中接口只允许单一继承",
              "answer": "A",
              "yourAnswer": "A"
            },
            "10": {
              "id": 10,
              "problem": "类中存在一个方法int getValue(int x){…}，以下能与这个方法重载的是（ ）。",
              "A": "public getValue(int x){…};",
              "B": "void getValue(int x){…};",
              "C": "int getValue(int x, int y){…};",
              "D": "int get(int x){…};",
              "answer": "C",
              "yourAnswer": "A"
            },
            "11": {
              "id": 11,
              "problem": "Java中( )",
              "A": "一个子类可以有多个父类，一个父类也可以有多个子类",
              "B": "一个子类可以有多个父类，但一个父类只可以有一个子类",
              "C": "一个子类可以有一个父类，但一个父类可以有多个子类",
              "D": "上述说法都不对",
              "answer": "C",
              "yourAnswer": "A"
            },
            "12": {
              "id": 12,
              "problem": "以下程序的结果是（ ）。class Base {     protected void fun(){         System.out.println(0);     } } class Derived extends Base {     protected void fun(){         System.out.println(1);     } } public class Test {     public static void main(String[] args) {         Base b1 \u003d new Derived();         b1.fun();     } }",
              "A": "运行错误",
              "B": "编译错误",
              "C": "0",
              "D": "1",
              "answer": "D",
              "yourAnswer": "A"
            },
            "13": {
              "id": 13,
              "problem": "下列不是重载方法的特征的是（ ）。",
              "A": "参数个数不同",
              "B": "返回值类型不同",
              "C": "参数类型不同",
              "D": "方法名相同",
              "answer": "B",
              "yourAnswer": "A"
            },
            "14": {
              "id": 14,
              "problem": "Java的核心包中，提供编程应用的基本类包是（ ）",
              "A": "java.util",
              "B": "java.lang",
              "C": "java.applet",
              "D": "java.rmi",
              "answer": "B",
              "yourAnswer": "A"
            },
            "15": {
              "id": 15,
              "problem": "下列哪一个关键字用于实现接口来定义类？( )",
              "A": "extends",
              "B": "implements",
              "C": "abstract",
              "D": "interface",
              "answer": "B",
              "yourAnswer": "A"
            },
            "16": {
              "id": 16,
              "problem": "下列选项中，抽象类的关键字是（）？",
              "A": "interface",
              "B": "implements",
              "C": "abstract",
              "D": "class",
              "answer": "C",
              "yourAnswer": "A"
            },
            "17": {
              "id": 17,
              "problem": "BufferedWriter类是Writer类的子类，BufferedWriter类中的（）方法可以插入一个换行符。",
              "A": "void newLine()",
              "B": "void close()",
              "C": "void flush()",
              "D": "void write(String str)",
              "answer": "A",
              "yourAnswer": "A"
            },
            "18": {
              "id": 18,
              "problem": "使用字节输出流FileOutputStream类中的哪个构造方法，在写数据时能够不覆盖文件中原有的内容？",
              "A": "FileOutputStream(String name)",
              "B": "FileOutputStream(File file,String name)",
              "C": "FileOutputStream(String name,boolean append)",
              "D": "FileOutputStream(File file)",
              "answer": "C",
              "yourAnswer": "A"
            },
            "19": {
              "id": 19,
              "problem": "类中存在一个方法int getValue(double x){…}，以下不能与这个方法重载的是（ ）。",
              "A": "int getValue(int x){…};",
              "B": "int getValue(float x){…};",
              "C": "int getValue(double t){…};",
              "D": "int getValue(double x, double y){…};",
              "answer": "C",
              "yourAnswer": "A"
            },
            "20": {
              "id": 20,
              "problem": "以下程序的结果是（ ）。class Base {     protected void fun(){         System.out.println(0);     } } class Derived extends Base {     protected void fun(){         System.out.println(1);     } } public class Test {     public static void main(String[] args) {         Base b1 \u003d new Derived();         b1.fun();     } }",
              "A": "运行错误",
              "B": "编译错误",
              "C": "0",
              "D": "1",
              "answer": "D",
              "yourAnswer": "A"
            }
          }
        },
        "7": {
          "name": "JavaIterator",
          "resource": "src\\pages\\JavaIterator",
          "learned": false,
          "date": "Dec 7, 2020, 1:49:59 PM",
          "integerSelectProblemHashMap": {
            "1": {
              "id": 1,
              "problem": "变量命名规范说法正确的是( )",
              "A": "不同类型的变量，可以起相同的名字；",
              "B": "变量由字母、下划线、数字、$符号随意组成；",
              "C": "变量不能以数字作为开头；",
              "D": "A和a在java中是同一个变量；",
              "answer": "A",
              "yourAnswer": "A"
            },
            "2": {
              "id": 2,
              "problem": "如果希望类中成员即使被子类继承也只能通过父类方法间接访问，则应该使用修饰符（）",
              "A": "public",
              "B": "protected",
              "C": "不写",
              "D": "private",
              "answer": "D",
              "yourAnswer": "A"
            },
            "3": {
              "id": 3,
              "problem": "( )类带有缓冲区，可以把一批数据读到缓冲区，避免每次都从数据源读取数据进行字符编码转换。",
              "A": "Reader",
              "B": "FileReader",
              "C": "Writer",
              "D": "BufferedReader",
              "answer": "D",
              "yourAnswer": "A"
            },
            "4": {
              "id": 4,
              "problem": "下列关于引入包的描述中，错误的是（ ）。",
              "A": "使用项目中其他包中的类时，需要在源程序中写import语句",
              "B": "import语句写在类声明的上面，package语句的下面",
              "C": "import可以引入包中所有类或其中一个类",
              "D": "import语句必须是源文件中第一条语句",
              "answer": "D",
              "yourAnswer": "A"
            },
            "5": {
              "id": 5,
              "problem": "以下不是面向对象特征的是（ ）。",
              "A": "继承",
              "B": "代码复制",
              "C": "封装",
              "D": "多态",
              "answer": "B",
              "yourAnswer": "A"
            },
            "6": {
              "id": 6,
              "problem": "下列关于抽象方法的描述中，错误的是（ ）。",
              "A": "抽象方法声明只需给出方法头，不能写方法体，直接以分号结束",
              "B": "所有的方法都可以声明为抽象方法",
              "C": "构造方法不能声明为抽象方法",
              "D": "声明抽象方法使用关键字abstract修饰",
              "answer": "B",
              "yourAnswer": "A"
            },
            "7": {
              "id": 7,
              "problem": "下列哪一个变量不需要创建对象，直接可以根据类名调用该属性？",
              "A": "public String str;",
              "B": "String str;",
              "C": "public static String str;",
              "D": "str",
              "answer": "C",
              "yourAnswer": "A"
            },
            "8": {
              "id": 8,
              "problem": "不是合法标识符的是（）",
              "A": "BigO1Long$223",
              "B": "Utfint",
              "C": "$12s",
              "D": "3d",
              "answer": "D",
              "yourAnswer": "A"
            },
            "9": {
              "id": 9,
              "problem": "如果类中成员的定义没有用访问权限修饰符，则该成员不能被（ ）访问。",
              "A": "同一个包中子类",
              "B": "子类",
              "C": "同一个包中其他类",
              "D": "其他包中所有类",
              "answer": "D",
              "yourAnswer": "A"
            },
            "10": {
              "id": 10,
              "problem": "以下关于多态的描述中错误的是（ ）。",
              "A": "重载和重写都是多态的表现形式",
              "B": "多态性分为动态多态性(动态绑定)和静态多态性两种",
              "C": "多态性可以加快代码的运行速度",
              "D": "多态性是面向对象的核心特征之一",
              "answer": "C",
              "yourAnswer": "A"
            },
            "11": {
              "id": 11,
              "problem": "在Java中用什么关键字修饰的方法可以直接通过类名来调用？( )",
              "A": "static",
              "B": "final",
              "C": "private",
              "D": "void",
              "answer": "A",
              "yourAnswer": "A"
            },
            "12": {
              "id": 12,
              "problem": "以下关于多态的描述中错误的是（ ）。",
              "A": "重载和重写都是多态的表现形式",
              "B": "多态性分为动态多态性(动态绑定)和静态多态性两种",
              "C": "多态性可以加快代码的运行速度",
              "D": "多态性是面向对象的核心特征之一",
              "answer": "C",
              "yourAnswer": "A"
            },
            "13": {
              "id": 13,
              "problem": "以下抽象类定义中合法的是（ ）。",
              "A": "abstract Animal{     abstract void growl(); }",
              "B": "class abstract Animal{     abstract void growl(); }",
              "C": "abstract class Animal {     abstract void growl(); } ",
              "D": "abstract class Animal {     abstract void growl() {     } }",
              "answer": "C",
              "yourAnswer": "A"
            },
            "14": {
              "id": 14,
              "problem": "以下不是面向对象特征的是（ ）。",
              "A": "继承",
              "B": "代码复制",
              "C": "封装",
              "D": "多态",
              "answer": "B",
              "yourAnswer": "A"
            },
            "15": {
              "id": 15,
              "problem": "类中存在一个方法int getValue(int x){…}，以下能与这个方法重载的是（ ）。",
              "A": "public getValue(int x){…};",
              "B": "void getValue(int x){…};",
              "C": "int getValue(int x, int y){…};",
              "D": "int get(int x){…};",
              "answer": "C",
              "yourAnswer": "A"
            },
            "16": {
              "id": 16,
              "problem": "结构化程序设计所规定的三种基本控制结构是( )",
              "A": "输入、处理、输出",
              "B": "树形、网形、环形",
              "C": "顺序、选择、循环",
              "D": "主程序、子程序、函数",
              "answer": "C",
              "yourAnswer": "A"
            },
            "17": {
              "id": 17,
              "problem": "以下程序的结果是（ ）。class Base {     protected void fun(){         System.out.println(0);     } } class Derived extends Base {     protected void fun(){         System.out.println(1);     } } public class Test {     public static void main(String[] args) {         Base b1 \u003d new Derived();         b1.fun();     } }",
              "A": "运行错误",
              "B": "编译错误",
              "C": "0",
              "D": "1",
              "answer": "D",
              "yourAnswer": "A"
            },
            "18": {
              "id": 18,
              "problem": "下列关于引入包的描述中，错误的是（ ）。",
              "A": "使用项目中其他包中的类时，需要在源程序中写import语句",
              "B": "import语句写在类声明的上面，package语句的下面",
              "C": "import可以引入包中所有类或其中一个类",
              "D": "import语句必须是源文件中第一条语句",
              "answer": "D",
              "yourAnswer": "A"
            },
            "19": {
              "id": 19,
              "problem": "InputStream类的作用就是将文件中的数据读入到内存中，该类中的哪个方法可以关闭文件输入流对象？",
              "A": "int read()",
              "B": "void close()",
              "C": "int available()",
              "D": "int read(byte[] b)",
              "answer": "B",
              "yourAnswer": "A"
            },
            "20": {
              "id": 20,
              "problem": "一个类可同时定义许多同名的方法，这些方法的形式参数个数、类型或顺序各不相同，传回的值也可以不相同，这种特性称为（ ）。",
              "A": "继承",
              "B": "重写",
              "C": "重载",
              "D": "封装",
              "answer": "C",
              "yourAnswer": "A"
            }
          }
        },
        "8": {
          "name": "JavaObject",
          "resource": "src\\pages\\JavaObject",
          "learned": false,
          "date": "Dec 7, 2020, 1:49:59 PM",
          "integerSelectProblemHashMap": {
            "1": {
              "id": 1,
              "problem": "BufferedWriter类是Writer类的子类，BufferedWriter类中的（）方法可以插入一个换行符。",
              "A": "void newLine()",
              "B": "void close()",
              "C": "void flush()",
              "D": "void write(String str)",
              "answer": "A",
              "yourAnswer": "A"
            },
            "2": {
              "id": 2,
              "problem": "如果类中成员的定义没有用访问权限修饰符，则该成员不能被（ ）访问。",
              "A": "同一个包中子类",
              "B": "子类",
              "C": "同一个包中其他类",
              "D": "其他包中所有类",
              "answer": "D",
              "yourAnswer": "A"
            },
            "3": {
              "id": 3,
              "problem": "下列不是重载方法的特征的是（ ）。",
              "A": "参数个数不同",
              "B": "返回值类型不同",
              "C": "参数类型不同",
              "D": "方法名相同",
              "answer": "B",
              "yourAnswer": "A"
            },
            "4": {
              "id": 4,
              "problem": "Java的核心包中，提供编程应用的基本类包是（ ）",
              "A": "java.util",
              "B": "java.lang",
              "C": "java.applet",
              "D": "java.rmi",
              "answer": "B",
              "yourAnswer": "A"
            },
            "5": {
              "id": 5,
              "problem": "下列关于包的描述中错误的是（ ）",
              "A": "使用包的原因之一是避免类名重复",
              "B": "包是由.class文件组成的一个集合，是一个文件夹",
              "C": "功能相同或者相关的类一般组织在一个包中",
              "D": "包只能定义一层，即包中不能再有包",
              "answer": "D",
              "yourAnswer": "A"
            },
            "6": {
              "id": 6,
              "problem": "一个类要实现接口的功能，可以实现几个方法？",
              "A": "0",
              "B": "1",
              "C": "2",
              "D": "全部",
              "answer": "D",
              "yourAnswer": "A"
            },
            "7": {
              "id": 7,
              "problem": "变量命名规范说法正确的是( )",
              "A": "不同类型的变量，可以起相同的名字；",
              "B": "变量由字母、下划线、数字、$符号随意组成；",
              "C": "变量不能以数字作为开头；",
              "D": "A和a在java中是同一个变量；",
              "answer": "A",
              "yourAnswer": "A"
            },
            "8": {
              "id": 8,
              "problem": "所有Java类都直接或间接继承了哪个类？",
              "A": "String",
              "B": "Object",
              "C": "Interesting",
              "D": "Hero",
              "answer": "B",
              "yourAnswer": "A"
            },
            "9": {
              "id": 9,
              "problem": "以下程序的结果是（ ）。class Base {     protected void fun(){         System.out.println(0);     } } class Derived extends Base {     protected void fun(){         System.out.println(1);     } } public class Test {     public static void main(String[] args) {         Base b1 \u003d new Derived();         b1.fun();     } }",
              "A": "运行错误",
              "B": "编译错误",
              "C": "0",
              "D": "1",
              "answer": "D",
              "yourAnswer": "A"
            },
            "10": {
              "id": 10,
              "problem": "类中存在一个方法int getValue(int x){…}，以下能与这个方法重载的是（ ）。",
              "A": "public getValue(int x){…};",
              "B": "void getValue(int x){…};",
              "C": "int getValue(int x, int y){…};",
              "D": "int get(int x){…};",
              "answer": "C",
              "yourAnswer": "A"
            },
            "11": {
              "id": 11,
              "problem": "已知A类具有以下四个成员方法，a是A类的对象，则a.fun(1, 3.14F)调用的是（ ）。",
              "A": "public void fun(int a, double b){…}",
              "B": "public int fun(double a, double b){…}",
              "C": "public void fun(float a, float b){…}",
              "D": "public float fun(int a, float b){…}",
              "answer": "D",
              "yourAnswer": "A"
            },
            "12": {
              "id": 12,
              "problem": "接口中有几个构造方法？",
              "A": "0",
              "B": "1",
              "C": "2",
              "D": "以上都不对",
              "answer": "A",
              "yourAnswer": "A"
            },
            "13": {
              "id": 13,
              "problem": "若A是抽象类，B是其子类且A和B都有默认构造方法，则以下语句非法的是（ ）。",
              "A": "A a;",
              "B": "A a \u003d new A();",
              "C": "A a[] \u003d new A[4];",
              "D": "A a \u003d new B();",
              "answer": "B",
              "yourAnswer": "A"
            },
            "14": {
              "id": 14,
              "problem": "若A是抽象类，B是其子类且A和B都有默认构造方法，则以下语句非法的是（ ）。",
              "A": "A a;",
              "B": "A a \u003d new A();",
              "C": "A a[] \u003d new A[4];",
              "D": "A a \u003d new B();",
              "answer": "B",
              "yourAnswer": "A"
            },
            "15": {
              "id": 15,
              "problem": "已知A类具有以下四个成员方法，a是A类的对象，则a.fun(1, 3.14F)调用的是（ ）。",
              "A": "public void fun(int a, double b){…}",
              "B": "public int fun(double a, double b){…}",
              "C": "public void fun(float a, float b){…}",
              "D": "public float fun(int a, float b){…}",
              "answer": "D",
              "yourAnswer": "A"
            },
            "16": {
              "id": 16,
              "problem": "下列关于引入包的描述中，错误的是（ ）。",
              "A": "使用项目中其他包中的类时，需要在源程序中写import语句",
              "B": "import语句写在类声明的上面，package语句的下面",
              "C": "import可以引入包中所有类或其中一个类",
              "D": "import语句必须是源文件中第一条语句",
              "answer": "D",
              "yourAnswer": "A"
            },
            "17": {
              "id": 17,
              "problem": "在Java中用什么关键字修饰的方法可以直接通过类名来调用？( )",
              "A": "static",
              "B": "final",
              "C": "private",
              "D": "void",
              "answer": "A",
              "yourAnswer": "A"
            },
            "18": {
              "id": 18,
              "problem": "以下关于重载的说法错误的是（ ）。",
              "A": "重载的方法只要定义正确，调用时就不会有歧义性。",
              "B": "重载的方法通常实现相似的功能",
              "C": "重载的方法可以互相调用，提高代码复用",
              "D": "重载是多态的一种表现形式",
              "answer": "A",
              "yourAnswer": "A"
            },
            "19": {
              "id": 19,
              "problem": "接口中方法的方法体内可以有几条代码？",
              "A": "0",
              "B": "1",
              "C": "2",
              "D": "多条",
              "answer": "A",
              "yourAnswer": "A"
            },
            "20": {
              "id": 20,
              "problem": "( )是FileInputStream的子类，可用于读取二进制文件.",
              "A": "DataOutputStream",
              "B": "DataInputStream",
              "C": "Reader",
              "D": "Writer",
              "answer": "B",
              "yourAnswer": "A"
            }
          }
        },
        "9": {
          "name": "Java泛型",
          "resource": "src\\pages\\Java泛型",
          "learned": false,
          "date": "Dec 7, 2020, 1:49:59 PM",
          "integerSelectProblemHashMap": {
            "1": {
              "id": 1,
              "problem": "在Java中用什么关键字修饰的方法可以直接通过类名来调用？( )",
              "A": "static",
              "B": "final",
              "C": "private",
              "D": "void",
              "answer": "A",
              "yourAnswer": "A"
            },
            "2": {
              "id": 2,
              "problem": "以下程序的结果是（ ）。class Base {     protected void fun(){         System.out.println(0);     } } class Derived extends Base {     protected void fun(){         System.out.println(1);     } } public class Test {     public static void main(String[] args) {         Base b1 \u003d new Derived();         b1.fun();     } }",
              "A": "运行错误",
              "B": "编译错误",
              "C": "0",
              "D": "1",
              "answer": "D",
              "yourAnswer": "A"
            },
            "3": {
              "id": 3,
              "problem": "下列关于打包的描述中，错误的是（ ）。",
              "A": "一个源文件中最多包含一条package语句，且必须是第一条语句",
              "B": "一个源文件中定义的类的字节码可以存放于不同的包中",
              "C": "若源文件中没有包含package语句，则类的字节码被放入无名包中",
              "D": "不在一个源文件中定义的子类和父类可以位于不同包中",
              "answer": "B",
              "yourAnswer": "A"
            },
            "4": {
              "id": 4,
              "problem": "以下标识符中哪项是不合法的( )",
              "A": "int",
              "B": "$double",
              "C": "hello",
              "D": "BigMeaninglessName",
              "answer": "A",
              "yourAnswer": "A"
            },
            "5": {
              "id": 5,
              "problem": "BufferedWriter类是Writer类的子类，BufferedWriter类中的（）方法可以插入一个换行符。",
              "A": "void newLine()",
              "B": "void close()",
              "C": "void flush()",
              "D": "void write(String str)",
              "answer": "A",
              "yourAnswer": "A"
            },
            "6": {
              "id": 6,
              "problem": "如果类中成员的定义没有用访问权限修饰符，则该成员不能被（ ）访问。",
              "A": "同一个包中子类",
              "B": "子类",
              "C": "同一个包中其他类",
              "D": "其他包中所有类",
              "answer": "D",
              "yourAnswer": "A"
            },
            "7": {
              "id": 7,
              "problem": "在创建对象时必须( )",
              "A": "先声明对象，然后才能使用对象",
              "B": "先声明对象，为对象分配内存空间，然后才能使用对象",
              "C": "先声明对象，为对象分配内存空间，对对象初始化，然后才能使用对象",
              "D": "上述说法都对",
              "answer": "C",
              "yourAnswer": "A"
            },
            "8": {
              "id": 8,
              "problem": "下列关于打包的描述中，错误的是（ ）。",
              "A": "一个源文件中最多包含一条package语句，且必须是第一条语句",
              "B": "一个源文件中定义的类的字节码可以存放于不同的包中",
              "C": "若源文件中没有包含package语句，则类的字节码被放入无名包中",
              "D": "不在一个源文件中定义的子类和父类可以位于不同包中",
              "answer": "B",
              "yourAnswer": "A"
            },
            "9": {
              "id": 9,
              "problem": "下列不是重载方法的特征的是（ ）。",
              "A": "参数个数不同",
              "B": "返回值类型不同",
              "C": "参数类型不同",
              "D": "方法名相同",
              "answer": "B",
              "yourAnswer": "A"
            },
            "10": {
              "id": 10,
              "problem": "类中存在一个方法int getValue(int x){…}，以下能与这个方法重载的是（ ）。",
              "A": "public getValue(int x){…};",
              "B": "void getValue(int x){…};",
              "C": "int getValue(int x, int y){…};",
              "D": "int get(int x){…};",
              "answer": "C",
              "yourAnswer": "A"
            },
            "11": {
              "id": 11,
              "problem": "以下关于重载的说法错误的是（ ）。",
              "A": "重载的方法只要定义正确，调用时就不会有歧义性。",
              "B": "重载的方法通常实现相似的功能",
              "C": "重载的方法可以互相调用，提高代码复用",
              "D": "重载是多态的一种表现形式",
              "answer": "A",
              "yourAnswer": "A"
            },
            "12": {
              "id": 12,
              "problem": "结构化程序设计所规定的三种基本控制结构是( )",
              "A": "输入、处理、输出",
              "B": "树形、网形、环形",
              "C": "顺序、选择、循环",
              "D": "主程序、子程序、函数",
              "answer": "C",
              "yourAnswer": "A"
            },
            "13": {
              "id": 13,
              "problem": "下列关于包的描述中错误的是（ ）",
              "A": "使用包的原因之一是避免类名重复",
              "B": "包是由.class文件组成的一个集合，是一个文件夹",
              "C": "功能相同或者相关的类一般组织在一个包中",
              "D": "包只能定义一层，即包中不能再有包",
              "answer": "D",
              "yourAnswer": "A"
            },
            "14": {
              "id": 14,
              "problem": "类中存在一个方法int getValue(double x){…}，以下不能与这个方法重载的是（ ）。",
              "A": "int getValue(int x){…};",
              "B": "int getValue(float x){…};",
              "C": "int getValue(double t){…};",
              "D": "int getValue(double x, double y){…};",
              "answer": "C",
              "yourAnswer": "A"
            },
            "15": {
              "id": 15,
              "problem": "下列说法正确的有（）?",
              "A": "不需要定义类，就能创建对象",
              "B": "对象中必须有属性和方法",
              "C": "属性必须是简单变量",
              "D": "属性可以是简单变量，也可以是一个对象",
              "answer": "D",
              "yourAnswer": "A"
            },
            "16": {
              "id": 16,
              "problem": "在创建对象时必须( )",
              "A": "先声明对象，然后才能使用对象",
              "B": "先声明对象，为对象分配内存空间，然后才能使用对象",
              "C": "先声明对象，为对象分配内存空间，对对象初始化，然后才能使用对象",
              "D": "上述说法都对",
              "answer": "C",
              "yourAnswer": "A"
            },
            "17": {
              "id": 17,
              "problem": "一个类可同时定义许多同名的方法，这些方法的形式参数个数、类型或顺序各不相同，传回的值也可以不相同，这种特性称为（ ）。",
              "A": "继承",
              "B": "重写",
              "C": "重载",
              "D": "封装",
              "answer": "C",
              "yourAnswer": "A"
            },
            "18": {
              "id": 18,
              "problem": "若A是抽象类，B是其子类且A和B都有默认构造方法，则以下语句非法的是（ ）。",
              "A": "A a;",
              "B": "A a \u003d new A();",
              "C": "A a[] \u003d new A[4];",
              "D": "A a \u003d new B();",
              "answer": "B",
              "yourAnswer": "A"
            },
            "19": {
              "id": 19,
              "problem": "在创建对象时必须( )",
              "A": "先声明对象，然后才能使用对象",
              "B": "先声明对象，为对象分配内存空间，然后才能使用对象",
              "C": "先声明对象，为对象分配内存空间，对对象初始化，然后才能使用对象",
              "D": "上述说法都对",
              "answer": "C",
              "yourAnswer": "A"
            },
            "20": {
              "id": 20,
              "problem": "下列哪个是合法的Java标识符？( )",
              "A": "Tree\u0026Glasses",
              "B": "FirstJavaApplet",
              "C": "*theLastOne",
              "D": "273.5",
              "answer": "B",
              "yourAnswer": "A"
            }
          }
        },
        "10": {
          "name": "Java序列化",
          "resource": "src\\pages\\Java序列化",
          "learned": false,
          "date": "Dec 7, 2020, 1:49:59 PM",
          "integerSelectProblemHashMap": {
            "1": {
              "id": 1,
              "problem": "下列关于包的描述中错误的是（ ）",
              "A": "使用包的原因之一是避免类名重复",
              "B": "包是由.class文件组成的一个集合，是一个文件夹",
              "C": "功能相同或者相关的类一般组织在一个包中",
              "D": "包只能定义一层，即包中不能再有包",
              "answer": "D",
              "yourAnswer": "A"
            },
            "2": {
              "id": 2,
              "problem": "以下没有体现出封装性的是（ ）。",
              "A": "将类的成员用访问权限修饰符加以访问控制",
              "B": "提供成员方法操作成员变量",
              "C": "将类的全部成员都设定为public权限",
              "D": "将类按照不同的包组织管理",
              "answer": "C",
              "yourAnswer": "A"
            },
            "3": {
              "id": 3,
              "problem": "以下关于继承的叙述正确的是( )",
              "A": "在Java中类只允许单一继承",
              "B": "在Java中一个类只能实现一个接口",
              "C": "在Java中一个类不能同时继承一个类和实现一个接口",
              "D": "在Java中接口只允许单一继承",
              "answer": "A",
              "yourAnswer": "A"
            },
            "4": {
              "id": 4,
              "problem": "已知A类具有以下四个成员方法，a是A类的对象，则a.fun(1, 3.14F)调用的是（ ）。",
              "A": "public void fun(int a, double b){…}",
              "B": "public int fun(double a, double b){…}",
              "C": "public void fun(float a, float b){…}",
              "D": "public float fun(int a, float b){…}",
              "answer": "D",
              "yourAnswer": "A"
            },
            "5": {
              "id": 5,
              "problem": "一个类可同时定义许多同名的方法，这些方法的形式参数个数、类型或顺序各不相同，传回的值也可以不相同，这种特性称为（ ）。",
              "A": "继承",
              "B": "重写",
              "C": "重载",
              "D": "封装",
              "answer": "C",
              "yourAnswer": "A"
            },
            "6": {
              "id": 6,
              "problem": "下列关于包的描述中错误的是（ ）",
              "A": "使用包的原因之一是避免类名重复",
              "B": "包是由.class文件组成的一个集合，是一个文件夹",
              "C": "功能相同或者相关的类一般组织在一个包中",
              "D": "包只能定义一层，即包中不能再有包",
              "answer": "D",
              "yourAnswer": "A"
            },
            "7": {
              "id": 7,
              "problem": "类中存在一个方法int getValue(int x){…}，以下能与这个方法重载的是（ ）。",
              "A": "public getValue(int x){…};",
              "B": "void getValue(int x){…};",
              "C": "int getValue(int x, int y){…};",
              "D": "int get(int x){…};",
              "answer": "C",
              "yourAnswer": "A"
            },
            "8": {
              "id": 8,
              "problem": "欲构造ArrayList类得一个实例，此类继承了List接口，下列哪个方法是正确的：",
              "A": "ArrayList myList \u003d new Object();",
              "B": "List myList \u003d new ArrayList();",
              "C": "ArraylList myList \u003d new List();",
              "D": "List myList \u003d new List();",
              "answer": "B",
              "yourAnswer": "A"
            },
            "9": {
              "id": 9,
              "problem": "表达式(11+3*8)/4%3的值是( )",
              "A": "31",
              "B": "0",
              "C": "1",
              "D": "2",
              "answer": "D",
              "yourAnswer": "A"
            },
            "10": {
              "id": 10,
              "problem": "如果希望类中成员能被所有子类继承后像自身成员一样直接访问，则应该使用修饰符（）",
              "A": "default",
              "B": "protected",
              "C": "不写",
              "D": "private",
              "answer": " ",
              "yourAnswer": "A"
            },
            "11": {
              "id": 11,
              "problem": "下列不可作为java语言修饰符的是( )",
              "A": "a1",
              "B": "$1",
              "C": "_1",
              "D": "11",
              "answer": "D",
              "yourAnswer": "A"
            },
            "12": {
              "id": 12,
              "problem": "以下标识符中哪项是不合法的( )",
              "A": "int",
              "B": "$double",
              "C": "hello",
              "D": "BigMeaninglessName",
              "answer": "A",
              "yourAnswer": "A"
            },
            "13": {
              "id": 13,
              "problem": "假设现在有一个对象X,有一个属性a.则访问当前属性的方法是（）？",
              "A": "a.x",
              "B": "x.a",
              "C": "A.x",
              "D": "X.a",
              "answer": "D",
              "yourAnswer": "A"
            },
            "14": {
              "id": 14,
              "problem": "Java的核心包中，提供编程应用的基本类包是（ ）",
              "A": "java.util",
              "B": "java.lang",
              "C": "java.applet",
              "D": "java.rmi",
              "answer": "B",
              "yourAnswer": "A"
            },
            "15": {
              "id": 15,
              "problem": "一个类要实现接口的功能，可以实现几个方法？",
              "A": "0",
              "B": "1",
              "C": "2",
              "D": "全部",
              "answer": "D",
              "yourAnswer": "A"
            },
            "16": {
              "id": 16,
              "problem": "一个类要实现接口的功能，可以实现几个方法？",
              "A": "0",
              "B": "1",
              "C": "2",
              "D": "全部",
              "answer": "D",
              "yourAnswer": "A"
            },
            "17": {
              "id": 17,
              "problem": "以下抽象类定义中合法的是（ ）。",
              "A": "abstract Animal{     abstract void growl(); }",
              "B": "class abstract Animal{     abstract void growl(); }",
              "C": "abstract class Animal {     abstract void growl(); } ",
              "D": "abstract class Animal {     abstract void growl() {     } }",
              "answer": "C",
              "yourAnswer": "A"
            },
            "18": {
              "id": 18,
              "problem": "下面哪一个循环会导致死循环？( )",
              "A": "for (int k \u003d 0; k \u003c 0; k++)",
              "B": "for (int k \u003d 10; k \u003e 0; k--)",
              "C": "for (int k \u003d 0; k \u003c 10; k--)",
              "D": " for (int k \u003d 0; k \u003e 10; k++)",
              "answer": "C",
              "yourAnswer": "A"
            },
            "19": {
              "id": 19,
              "problem": "对于私有构造方法，以下说法正确的是（ ）。",
              "A": "构造方法如果被限定为private则会产生编译错误",
              "B": "不能通过私有构造方法产生类的对象",
              "C": "私有构造方法不能在类外通过new调用创建对象",
              "D": "具有私有构造方法的类不能被继承",
              "answer": "C",
              "yourAnswer": "A"
            },
            "20": {
              "id": 20,
              "problem": "下列哪一个关键字用于实现接口来定义类？( )",
              "A": "extends",
              "B": "implements",
              "C": "abstract",
              "D": "interface",
              "answer": "B",
              "yourAnswer": "A"
            }
          }
        },
        "11": {
          "name": "Java网络编程",
          "resource": "src\\pages\\Java网络编程",
          "learned": false,
          "date": "Dec 7, 2020, 1:49:59 PM",
          "integerSelectProblemHashMap": {
            "1": {
              "id": 1,
              "problem": "下列选项中，抽象类的关键字是（）？",
              "A": "interface",
              "B": "implements",
              "C": "abstract",
              "D": "class",
              "answer": "C",
              "yourAnswer": "A"
            },
            "2": {
              "id": 2,
              "problem": "下列说法正确的有（）?",
              "A": "不需要定义类，就能创建对象",
              "B": "对象中必须有属性和方法",
              "C": "属性必须是简单变量",
              "D": "属性可以是简单变量，也可以是一个对象",
              "answer": "D",
              "yourAnswer": "A"
            },
            "3": {
              "id": 3,
              "problem": "所有Java类都直接或间接继承了哪个类？",
              "A": "String",
              "B": "Object",
              "C": "Interesting",
              "D": "Hero",
              "answer": "B",
              "yourAnswer": "A"
            },
            "4": {
              "id": 4,
              "problem": "下列关于引入包的描述中，错误的是（ ）。",
              "A": "使用项目中其他包中的类时，需要在源程序中写import语句",
              "B": "import语句写在类声明的上面，package语句的下面",
              "C": "import可以引入包中所有类或其中一个类",
              "D": "import语句必须是源文件中第一条语句",
              "answer": "D",
              "yourAnswer": "A"
            },
            "5": {
              "id": 5,
              "problem": "在创建对象时必须( )",
              "A": "先声明对象，然后才能使用对象",
              "B": "先声明对象，为对象分配内存空间，然后才能使用对象",
              "C": "先声明对象，为对象分配内存空间，对对象初始化，然后才能使用对象",
              "D": "上述说法都对",
              "answer": "C",
              "yourAnswer": "A"
            },
            "6": {
              "id": 6,
              "problem": "在Java中用什么关键字修饰的方法可以直接通过类名来调用？( )",
              "A": "static",
              "B": "final",
              "C": "private",
              "D": "void",
              "answer": "A",
              "yourAnswer": "A"
            },
            "7": {
              "id": 7,
              "problem": "以下没有体现出封装性的是（ ）。",
              "A": "将类的成员用访问权限修饰符加以访问控制",
              "B": "提供成员方法操作成员变量",
              "C": "将类的全部成员都设定为public权限",
              "D": "将类按照不同的包组织管理",
              "answer": "C",
              "yourAnswer": "A"
            },
            "8": {
              "id": 8,
              "problem": "类中存在一个方法int getValue(double x){…}，以下不能与这个方法重载的是（ ）。",
              "A": "int getValue(int x){…};",
              "B": "int getValue(float x){…};",
              "C": "int getValue(double t){…};",
              "D": "int getValue(double x, double y){…};",
              "answer": "C",
              "yourAnswer": "A"
            },
            "9": {
              "id": 9,
              "problem": "以下程序的结果是（ ）。class Base {     protected void fun(){         System.out.println(0);     } } class Derived extends Base {     protected void fun(){         System.out.println(1);     } } public class Test {     public static void main(String[] args) {         Base b1 \u003d new Derived();         b1.fun();     } }",
              "A": "运行错误",
              "B": "编译错误",
              "C": "0",
              "D": "1",
              "answer": "D",
              "yourAnswer": "A"
            },
            "10": {
              "id": 10,
              "problem": "在创建对象时必须( )",
              "A": "先声明对象，然后才能使用对象",
              "B": "先声明对象，为对象分配内存空间，然后才能使用对象",
              "C": "先声明对象，为对象分配内存空间，对对象初始化，然后才能使用对象",
              "D": "上述说法都对",
              "answer": "C",
              "yourAnswer": "A"
            },
            "11": {
              "id": 11,
              "problem": "对于私有构造方法，以下说法正确的是（ ）。",
              "A": "构造方法如果被限定为private则会产生编译错误",
              "B": "不能通过私有构造方法产生类的对象",
              "C": "私有构造方法不能在类外通过new调用创建对象",
              "D": "具有私有构造方法的类不能被继承",
              "answer": "C",
              "yourAnswer": "A"
            },
            "12": {
              "id": 12,
              "problem": "下列不可作为java语言修饰符的是( )",
              "A": "a1",
              "B": "$1",
              "C": "_1",
              "D": "11",
              "answer": "D",
              "yourAnswer": "A"
            },
            "13": {
              "id": 13,
              "problem": "欲构造ArrayList类得一个实例，此类继承了List接口，下列哪个方法是正确的：",
              "A": "ArrayList myList \u003d new Object();",
              "B": "List myList \u003d new ArrayList();",
              "C": "ArraylList myList \u003d new List();",
              "D": "List myList \u003d new List();",
              "answer": "B",
              "yourAnswer": "A"
            },
            "14": {
              "id": 14,
              "problem": "接口中有几个构造方法？",
              "A": "0",
              "B": "1",
              "C": "2",
              "D": "以上都不对",
              "answer": "A",
              "yourAnswer": "A"
            },
            "15": {
              "id": 15,
              "problem": "下列关于打包的描述中，错误的是（ ）。",
              "A": "一个源文件中最多包含一条package语句，且必须是第一条语句",
              "B": "一个源文件中定义的类的字节码可以存放于不同的包中",
              "C": "若源文件中没有包含package语句，则类的字节码被放入无名包中",
              "D": "不在一个源文件中定义的子类和父类可以位于不同包中",
              "answer": "B",
              "yourAnswer": "A"
            },
            "16": {
              "id": 16,
              "problem": "结构化程序设计所规定的三种基本控制结构是( )",
              "A": "输入、处理、输出",
              "B": "树形、网形、环形",
              "C": "顺序、选择、循环",
              "D": "主程序、子程序、函数",
              "answer": "C",
              "yourAnswer": "A"
            },
            "17": {
              "id": 17,
              "problem": "InputStream类的作用就是将文件中的数据读入到内存中，该类中的哪个方法可以关闭文件输入流对象？",
              "A": "int read()",
              "B": "void close()",
              "C": "int available()",
              "D": "int read(byte[] b)",
              "answer": "B",
              "yourAnswer": "A"
            },
            "18": {
              "id": 18,
              "problem": "InputStream类的作用就是将文件中的数据读入到内存中，该类中的哪个方法可以关闭文件输入流对象？",
              "A": "int read()",
              "B": "void close()",
              "C": "int available()",
              "D": "int read(byte[] b)",
              "answer": "B",
              "yourAnswer": "A"
            },
            "19": {
              "id": 19,
              "problem": "在创建对象时必须( )",
              "A": "先声明对象，然后才能使用对象",
              "B": "先声明对象，为对象分配内存空间，然后才能使用对象",
              "C": "先声明对象，为对象分配内存空间，对对象初始化，然后才能使用对象",
              "D": "上述说法都对",
              "answer": "C",
              "yourAnswer": "A"
            },
            "20": {
              "id": 20,
              "problem": "类中存在一个方法int getValue(double x){…}，以下不能与这个方法重载的是（ ）。",
              "A": "int getValue(int x){…};",
              "B": "int getValue(float x){…};",
              "C": "int getValue(double t){…};",
              "D": "int getValue(double x, double y){…};",
              "answer": "C",
              "yourAnswer": "A"
            }
          }
        },
        "12": {
          "name": "Java发送邮件",
          "resource": "src\\pages\\Java发送邮件",
          "learned": false,
          "date": "Dec 7, 2020, 1:49:59 PM",
          "integerSelectProblemHashMap": {
            "1": {
              "id": 1,
              "problem": "以下不是面向对象特征的是（ ）。",
              "A": "继承",
              "B": "代码复制",
              "C": "封装",
              "D": "多态",
              "answer": "B",
              "yourAnswer": "A"
            },
            "2": {
              "id": 2,
              "problem": "接口中方法的修饰符默认是？",
              "A": "public",
              "B": "abstract",
              "C": "public abstract",
              "D": "public static final",
              "answer": "C",
              "yourAnswer": "A"
            },
            "3": {
              "id": 3,
              "problem": "有一段java 应用程序，它的主类名是a1，那么保存它的源文件名可以是( )",
              "A": "a1.java",
              "B": "a1.class",
              "C": "a1",
              "D": "都对",
              "answer": "A",
              "yourAnswer": "A"
            },
            "4": {
              "id": 4,
              "problem": "若A是抽象类，B是其子类且A和B都有默认构造方法，则以下语句非法的是（ ）。",
              "A": "A a;",
              "B": "A a \u003d new A();",
              "C": "A a[] \u003d new A[4];",
              "D": "A a \u003d new B();",
              "answer": "B",
              "yourAnswer": "A"
            },
            "5": {
              "id": 5,
              "problem": "一个类可同时定义许多同名的方法，这些方法的形式参数个数、类型或顺序各不相同，传回的值也可以不相同，这种特性称为（ ）。",
              "A": "继承",
              "B": "重写",
              "C": "重载",
              "D": "封装",
              "answer": "C",
              "yourAnswer": "A"
            },
            "6": {
              "id": 6,
              "problem": "类中存在一个方法int getValue(double x){…}，以下不能与这个方法重载的是（ ）。",
              "A": "int getValue(int x){…};",
              "B": "int getValue(float x){…};",
              "C": "int getValue(double t){…};",
              "D": "int getValue(double x, double y){…};",
              "answer": "C",
              "yourAnswer": "A"
            },
            "7": {
              "id": 7,
              "problem": "欲构造ArrayList类得一个实例，此类继承了List接口，下列哪个方法是正确的：",
              "A": "ArrayList myList \u003d new Object();",
              "B": "List myList \u003d new ArrayList();",
              "C": "ArraylList myList \u003d new List();",
              "D": "List myList \u003d new List();",
              "answer": "B",
              "yourAnswer": "A"
            },
            "8": {
              "id": 8,
              "problem": "下列说法正确的有（）?",
              "A": "不需要定义类，就能创建对象",
              "B": "对象中必须有属性和方法",
              "C": "属性必须是简单变量",
              "D": "属性可以是简单变量，也可以是一个对象",
              "answer": "D",
              "yourAnswer": "A"
            },
            "9": {
              "id": 9,
              "problem": "有一段java 应用程序，它的主类名是a1，那么保存它的源文件名可以是( )",
              "A": "a1.java",
              "B": "a1.class",
              "C": "a1",
              "D": "都对",
              "answer": "A",
              "yourAnswer": "A"
            },
            "10": {
              "id": 10,
              "problem": "类中存在一个方法int getValue(int x){…}，以下能与这个方法重载的是（ ）。",
              "A": "public getValue(int x){…};",
              "B": "void getValue(int x){…};",
              "C": "int getValue(int x, int y){…};",
              "D": "int get(int x){…};",
              "answer": "C",
              "yourAnswer": "A"
            },
            "11": {
              "id": 11,
              "problem": "在创建对象时必须( )",
              "A": "先声明对象，然后才能使用对象",
              "B": "先声明对象，为对象分配内存空间，然后才能使用对象",
              "C": "先声明对象，为对象分配内存空间，对对象初始化，然后才能使用对象",
              "D": "上述说法都对",
              "answer": "C",
              "yourAnswer": "A"
            },
            "12": {
              "id": 12,
              "problem": "下列关于抽象类的描述中，错误的是（ ）。",
              "A": "抽象类中可以包含抽象方法，也可以不包含抽象方法",
              "B": "抽象类不能实例化，即使抽象类中没有声明抽象方法，也不能实例化",
              "C": "不能声明抽象类的变量(对象)",
              "D": "包含抽象方法的类，必须要声明为抽象类",
              "answer": "C",
              "yourAnswer": "A"
            },
            "13": {
              "id": 13,
              "problem": "一个类要实现接口的功能，可以实现几个方法？",
              "A": "0",
              "B": "1",
              "C": "2",
              "D": "全部",
              "answer": "D",
              "yourAnswer": "A"
            },
            "14": {
              "id": 14,
              "problem": "类中存在一个方法int getValue(int x){…}，以下能与这个方法重载的是（ ）。",
              "A": "public getValue(int x){…};",
              "B": "void getValue(int x){…};",
              "C": "int getValue(int x, int y){…};",
              "D": "int get(int x){…};",
              "answer": "C",
              "yourAnswer": "A"
            },
            "15": {
              "id": 15,
              "problem": "下列关于引入包的描述中，错误的是（ ）。",
              "A": "使用项目中其他包中的类时，需要在源程序中写import语句",
              "B": "import语句写在类声明的上面，package语句的下面",
              "C": "import可以引入包中所有类或其中一个类",
              "D": "import语句必须是源文件中第一条语句",
              "answer": "D",
              "yourAnswer": "A"
            },
            "16": {
              "id": 16,
              "problem": "下列不是重载方法的特征的是（ ）。",
              "A": "参数个数不同",
              "B": "返回值类型不同",
              "C": "参数类型不同",
              "D": "方法名相同",
              "answer": "B",
              "yourAnswer": "A"
            },
            "17": {
              "id": 17,
              "problem": "以下关于重载的说法错误的是（ ）。",
              "A": "重载的方法只要定义正确，调用时就不会有歧义性。",
              "B": "重载的方法通常实现相似的功能",
              "C": "重载的方法可以互相调用，提高代码复用",
              "D": "重载是多态的一种表现形式",
              "answer": "A",
              "yourAnswer": "A"
            },
            "18": {
              "id": 18,
              "problem": "若A是抽象类，B是其子类且A和B都有默认构造方法，则以下语句非法的是（ ）。",
              "A": "A a;",
              "B": "A a \u003d new A();",
              "C": "A a[] \u003d new A[4];",
              "D": "A a \u003d new B();",
              "answer": "B",
              "yourAnswer": "A"
            },
            "19": {
              "id": 19,
              "problem": "( )类带有缓冲区，可以把一批数据读到缓冲区，避免每次都从数据源读取数据进行字符编码转换。",
              "A": "Reader",
              "B": "FileReader",
              "C": "Writer",
              "D": "BufferedReader",
              "answer": "D",
              "yourAnswer": "A"
            },
            "20": {
              "id": 20,
              "problem": "以下关于多态的描述中错误的是（ ）。",
              "A": "重载和重写都是多态的表现形式",
              "B": "多态性分为动态多态性(动态绑定)和静态多态性两种",
              "C": "多态性可以加快代码的运行速度",
              "D": "多态性是面向对象的核心特征之一",
              "answer": "C",
              "yourAnswer": "A"
            }
          }
        },
        "13": {
          "name": "Java多线程编程",
          "resource": "src\\pages\\Java多线程编程",
          "learned": false,
          "date": "Dec 7, 2020, 1:49:59 PM",
          "integerSelectProblemHashMap": {
            "1": {
              "id": 1,
              "problem": "以下关于构造函数的描述错误的是( )",
              "A": "构造函数的返回类型只能是void型",
              "B": "构造函数是类的一种特殊函数，它的方法名必须与类名相同。",
              "C": "构造函数的主要作用是完成对类的对象的初始化工作。",
              "D": "一般在创建新对象时，系统会自动调用构造函数。",
              "answer": "A",
              "yourAnswer": "A"
            },
            "2": {
              "id": 2,
              "problem": "不是合法标识符的是（）",
              "A": "Javaworld",
              "B": "_sum",
              "C": "2Java Program",
              "D": "$abc",
              "answer": "C",
              "yourAnswer": "A"
            },
            "3": {
              "id": 3,
              "problem": "一个类可同时定义许多同名的方法，这些方法的形式参数个数、类型或顺序各不相同，传回的值也可以不相同，这种特性称为（ ）。",
              "A": "继承",
              "B": "重写",
              "C": "重载",
              "D": "封装",
              "answer": "C",
              "yourAnswer": "A"
            },
            "4": {
              "id": 4,
              "problem": "如果希望类中成员即使被子类继承也只能通过父类方法间接访问，则应该使用修饰符（）",
              "A": "public",
              "B": "protected",
              "C": "不写",
              "D": "private",
              "answer": "D",
              "yourAnswer": "A"
            },
            "5": {
              "id": 5,
              "problem": "以下关于重载的说法错误的是（ ）。",
              "A": "重载的方法只要定义正确，调用时就不会有歧义性。",
              "B": "重载的方法通常实现相似的功能",
              "C": "重载的方法可以互相调用，提高代码复用",
              "D": "重载是多态的一种表现形式",
              "answer": "A",
              "yourAnswer": "A"
            },
            "6": {
              "id": 6,
              "problem": "接口中的属性会自动被修饰为？",
              "A": "public static",
              "B": "static final",
              "C": "public static final",
              "D": "public final",
              "answer": "C",
              "yourAnswer": "A"
            },
            "7": {
              "id": 7,
              "problem": "下列不可作为java语言修饰符的是( )",
              "A": "a1",
              "B": "$1",
              "C": "_1",
              "D": "11",
              "answer": "D",
              "yourAnswer": "A"
            },
            "8": {
              "id": 8,
              "problem": "在Java中用什么关键字修饰的方法可以直接通过类名来调用？( )",
              "A": "static",
              "B": "final",
              "C": "private",
              "D": "void",
              "answer": "A",
              "yourAnswer": "A"
            },
            "9": {
              "id": 9,
              "problem": "以下程序的结果是（ ）。class Base {     protected void fun(){         System.out.println(0);     } } class Derived extends Base {     protected void fun(){         System.out.println(1);     } } public class Test {     public static void main(String[] args) {         Base b1 \u003d new Derived();         b1.fun();     } }",
              "A": "运行错误",
              "B": "编译错误",
              "C": "0",
              "D": "1",
              "answer": "D",
              "yourAnswer": "A"
            },
            "10": {
              "id": 10,
              "problem": "下列哪一个变量不需要创建对象，直接可以根据类名调用该属性？",
              "A": "public String str;",
              "B": "String str;",
              "C": "public static String str;",
              "D": "str",
              "answer": "C",
              "yourAnswer": "A"
            },
            "11": {
              "id": 11,
              "problem": "下列关于打包的描述中，错误的是（ ）。",
              "A": "一个源文件中最多包含一条package语句，且必须是第一条语句",
              "B": "一个源文件中定义的类的字节码可以存放于不同的包中",
              "C": "若源文件中没有包含package语句，则类的字节码被放入无名包中",
              "D": "不在一个源文件中定义的子类和父类可以位于不同包中",
              "answer": "B",
              "yourAnswer": "A"
            },
            "12": {
              "id": 12,
              "problem": "接口中方法的方法体内可以有几条代码？",
              "A": "0",
              "B": "1",
              "C": "2",
              "D": "多条",
              "answer": "A",
              "yourAnswer": "A"
            },
            "13": {
              "id": 13,
              "problem": "以下抽象类定义中合法的是（ ）。",
              "A": "abstract Animal{     abstract void growl(); }",
              "B": "class abstract Animal{     abstract void growl(); }",
              "C": "abstract class Animal {     abstract void growl(); } ",
              "D": "abstract class Animal {     abstract void growl() {     } }",
              "answer": "C",
              "yourAnswer": "A"
            },
            "14": {
              "id": 14,
              "problem": "Java的核心包中，提供编程应用的基本类包是（ ）",
              "A": "java.util",
              "B": "java.lang",
              "C": "java.applet",
              "D": "java.rmi",
              "answer": "B",
              "yourAnswer": "A"
            },
            "15": {
              "id": 15,
              "problem": "不是合法标识符的是（）",
              "A": "Javaworld",
              "B": "_sum",
              "C": "2Java Program",
              "D": "$abc",
              "answer": "C",
              "yourAnswer": "A"
            },
            "16": {
              "id": 16,
              "problem": "下列哪一个关键字用于实现接口来定义类？( )",
              "A": "extends",
              "B": "implements",
              "C": "abstract",
              "D": "interface",
              "answer": "B",
              "yourAnswer": "A"
            },
            "17": {
              "id": 17,
              "problem": "以下关于多态的描述中错误的是（ ）。",
              "A": "重载和重写都是多态的表现形式",
              "B": "多态性分为动态多态性(动态绑定)和静态多态性两种",
              "C": "多态性可以加快代码的运行速度",
              "D": "多态性是面向对象的核心特征之一",
              "answer": "C",
              "yourAnswer": "A"
            },
            "18": {
              "id": 18,
              "problem": "类中存在一个方法int getValue(double x){…}，以下不能与这个方法重载的是（ ）。",
              "A": "int getValue(int x){…};",
              "B": "int getValue(float x){…};",
              "C": "int getValue(double t){…};",
              "D": "int getValue(double x, double y){…};",
              "answer": "C",
              "yourAnswer": "A"
            },
            "19": {
              "id": 19,
              "problem": "以下程序的结果是（ ）。class Base {     protected void fun(){         System.out.println(0);     } } class Derived extends Base {     protected void fun(){         System.out.println(1);     } } public class Test {     public static void main(String[] args) {         Base b1 \u003d new Derived();         b1.fun();     } }",
              "A": "运行错误",
              "B": "编译错误",
              "C": "0",
              "D": "1",
              "answer": "D",
              "yourAnswer": "A"
            },
            "20": {
              "id": 20,
              "problem": "假设现在有一个对象X,有一个属性a.则访问当前属性的方法是（）？",
              "A": "a.x",
              "B": "x.a",
              "C": "A.x",
              "D": "X.a",
              "answer": "D",
              "yourAnswer": "A"
            }
          }
        },
        "14": {
          "name": "JavaApplet基础",
          "resource": "src\\pages\\JavaApplet基础",
          "learned": false,
          "date": "Dec 7, 2020, 1:49:59 PM",
          "integerSelectProblemHashMap": {
            "1": {
              "id": 1,
              "problem": "( )是FileInputStream的子类，可用于读取二进制文件.",
              "A": "DataOutputStream",
              "B": "DataInputStream",
              "C": "Reader",
              "D": "Writer",
              "answer": "B",
              "yourAnswer": "A"
            },
            "2": {
              "id": 2,
              "problem": "不是合法标识符的是（）",
              "A": "BigO1Long$223",
              "B": "Utfint",
              "C": "$12s",
              "D": "3d",
              "answer": "D",
              "yourAnswer": "A"
            },
            "3": {
              "id": 3,
              "problem": "类中存在一个方法int getValue(int x){…}，以下能与这个方法重载的是（ ）。",
              "A": "public getValue(int x){…};",
              "B": "void getValue(int x){…};",
              "C": "int getValue(int x, int y){…};",
              "D": "int get(int x){…};",
              "answer": "C",
              "yourAnswer": "A"
            },
            "4": {
              "id": 4,
              "problem": "接口中有几个构造方法？",
              "A": "0",
              "B": "1",
              "C": "2",
              "D": "以上都不对",
              "answer": "A",
              "yourAnswer": "A"
            },
            "5": {
              "id": 5,
              "problem": "对于私有构造方法，以下说法正确的是（ ）。",
              "A": "构造方法如果被限定为private则会产生编译错误",
              "B": "不能通过私有构造方法产生类的对象",
              "C": "私有构造方法不能在类外通过new调用创建对象",
              "D": "具有私有构造方法的类不能被继承",
              "answer": "C",
              "yourAnswer": "A"
            },
            "6": {
              "id": 6,
              "problem": "假设现在有一个对象X,有一个属性a.则访问当前属性的方法是（）？",
              "A": "a.x",
              "B": "x.a",
              "C": "A.x",
              "D": "X.a",
              "answer": "D",
              "yourAnswer": "A"
            },
            "7": {
              "id": 7,
              "problem": "以下关于重载的说法错误的是（ ）。",
              "A": "重载的方法只要定义正确，调用时就不会有歧义性。",
              "B": "重载的方法通常实现相似的功能",
              "C": "重载的方法可以互相调用，提高代码复用",
              "D": "重载是多态的一种表现形式",
              "answer": "A",
              "yourAnswer": "A"
            },
            "8": {
              "id": 8,
              "problem": "InputStream类的作用就是将文件中的数据读入到内存中，该类中的哪个方法可以关闭文件输入流对象？",
              "A": "int read()",
              "B": "void close()",
              "C": "int available()",
              "D": "int read(byte[] b)",
              "answer": "B",
              "yourAnswer": "A"
            },
            "9": {
              "id": 9,
              "problem": "欲构造ArrayList类得一个实例，此类继承了List接口，下列哪个方法是正确的：",
              "A": "ArrayList myList \u003d new Object();",
              "B": "List myList \u003d new ArrayList();",
              "C": "ArraylList myList \u003d new List();",
              "D": "List myList \u003d new List();",
              "answer": "B",
              "yourAnswer": "A"
            },
            "10": {
              "id": 10,
              "problem": "以下没有体现出封装性的是（ ）。",
              "A": "将类的成员用访问权限修饰符加以访问控制",
              "B": "提供成员方法操作成员变量",
              "C": "将类的全部成员都设定为public权限",
              "D": "将类按照不同的包组织管理",
              "answer": "C",
              "yourAnswer": "A"
            },
            "11": {
              "id": 11,
              "problem": "对于私有构造方法，以下说法正确的是（ ）。",
              "A": "构造方法如果被限定为private则会产生编译错误",
              "B": "不能通过私有构造方法产生类的对象",
              "C": "私有构造方法不能在类外通过new调用创建对象",
              "D": "具有私有构造方法的类不能被继承",
              "answer": "C",
              "yourAnswer": "A"
            },
            "12": {
              "id": 12,
              "problem": "不是合法标识符的是（）",
              "A": "BigO1Long$223",
              "B": "Utfint",
              "C": "$12s",
              "D": "3d",
              "answer": "D",
              "yourAnswer": "A"
            },
            "13": {
              "id": 13,
              "problem": "下列修饰符中与访问控制无关的是（）",
              "A": "private　",
              "B": "public",
              "C": "protected",
              "D": "default",
              "answer": "D",
              "yourAnswer": "A"
            },
            "14": {
              "id": 14,
              "problem": "BufferedWriter类是Writer类的子类，BufferedWriter类中的（）方法可以插入一个换行符。",
              "A": "void newLine()",
              "B": "void close()",
              "C": "void flush()",
              "D": "void write(String str)",
              "answer": "A",
              "yourAnswer": "A"
            },
            "15": {
              "id": 15,
              "problem": "已知A类具有以下四个成员方法，a是A类的对象，则a.fun(1, 3.14F)调用的是（ ）。",
              "A": "public void fun(int a, double b){…}",
              "B": "public int fun(double a, double b){…}",
              "C": "public void fun(float a, float b){…}",
              "D": "public float fun(int a, float b){…}",
              "answer": "D",
              "yourAnswer": "A"
            },
            "16": {
              "id": 16,
              "problem": "如果希望类中成员即使被子类继承也只能通过父类方法间接访问，则应该使用修饰符（）",
              "A": "public",
              "B": "protected",
              "C": "不写",
              "D": "private",
              "answer": "D",
              "yourAnswer": "A"
            },
            "17": {
              "id": 17,
              "problem": "一个类可同时定义许多同名的方法，这些方法的形式参数个数、类型或顺序各不相同，传回的值也可以不相同，这种特性称为（ ）。",
              "A": "继承",
              "B": "重写",
              "C": "重载",
              "D": "封装",
              "answer": "C",
              "yourAnswer": "A"
            },
            "18": {
              "id": 18,
              "problem": "Java的核心包中，提供编程应用的基本类包是（ ）",
              "A": "java.util",
              "B": "java.lang",
              "C": "java.applet",
              "D": "java.rmi",
              "answer": "B",
              "yourAnswer": "A"
            },
            "19": {
              "id": 19,
              "problem": "已知A类具有以下四个成员方法，a是A类的对象，则a.fun(1, 3.14F)调用的是（ ）。",
              "A": "public void fun(int a, double b){…}",
              "B": "public int fun(double a, double b){…}",
              "C": "public void fun(float a, float b){…}",
              "D": "public float fun(int a, float b){…}",
              "answer": "D",
              "yourAnswer": "A"
            },
            "20": {
              "id": 20,
              "problem": "下面哪个是applet传递参数的正确方式？（ ）",
              "A": "\u003capplet code\u003dTest.class age\u003d33 width\u003d1 height\u003d1\u003e",
              "B": "\u003cparam name\u003dage value\u003d33\u003e",
              "C": "\u003capplet code\u003dTest.class name\u003dage value\u003d33 width\u003d1 height\u003d1\u003e",
              "D": "\u003capplet Test 33\u003e",
              "answer": "B",
              "yourAnswer": "A"
            }
          }
        },
        "15": {
          "name": "Java文档注释",
          "resource": "src\\pages\\Java文档注释",
          "learned": false,
          "date": "Dec 7, 2020, 1:49:59 PM",
          "integerSelectProblemHashMap": {
            "1": {
              "id": 1,
              "problem": "在创建对象时必须( )",
              "A": "先声明对象，然后才能使用对象",
              "B": "先声明对象，为对象分配内存空间，然后才能使用对象",
              "C": "先声明对象，为对象分配内存空间，对对象初始化，然后才能使用对象",
              "D": "上述说法都对",
              "answer": "C",
              "yourAnswer": "A"
            },
            "2": {
              "id": 2,
              "problem": "以下关于继承的叙述正确的是( )",
              "A": "在Java中类只允许单一继承",
              "B": "在Java中一个类只能实现一个接口",
              "C": "在Java中一个类不能同时继承一个类和实现一个接口",
              "D": "在Java中接口只允许单一继承",
              "answer": "A",
              "yourAnswer": "A"
            },
            "3": {
              "id": 3,
              "problem": "以下标识符中哪项是不合法的( )",
              "A": "int",
              "B": "$double",
              "C": "hello",
              "D": "BigMeaninglessName",
              "answer": "A",
              "yourAnswer": "A"
            },
            "4": {
              "id": 4,
              "problem": "下列关于引入包的描述中，错误的是（ ）。",
              "A": "使用项目中其他包中的类时，需要在源程序中写import语句",
              "B": "import语句写在类声明的上面，package语句的下面",
              "C": "import可以引入包中所有类或其中一个类",
              "D": "import语句必须是源文件中第一条语句",
              "answer": "D",
              "yourAnswer": "A"
            },
            "5": {
              "id": 5,
              "problem": "以下关于继承的叙述正确的是( )",
              "A": "在Java中类只允许单一继承",
              "B": "在Java中一个类只能实现一个接口",
              "C": "在Java中一个类不能同时继承一个类和实现一个接口",
              "D": "在Java中接口只允许单一继承",
              "answer": "A",
              "yourAnswer": "A"
            },
            "6": {
              "id": 6,
              "problem": "下列关于打包的描述中，错误的是（ ）。",
              "A": "一个源文件中最多包含一条package语句，且必须是第一条语句",
              "B": "一个源文件中定义的类的字节码可以存放于不同的包中",
              "C": "若源文件中没有包含package语句，则类的字节码被放入无名包中",
              "D": "不在一个源文件中定义的子类和父类可以位于不同包中",
              "answer": "B",
              "yourAnswer": "A"
            },
            "7": {
              "id": 7,
              "problem": "下面哪个是applet传递参数的正确方式？（ ）",
              "A": "\u003capplet code\u003dTest.class age\u003d33 width\u003d1 height\u003d1\u003e",
              "B": "\u003cparam name\u003dage value\u003d33\u003e",
              "C": "\u003capplet code\u003dTest.class name\u003dage value\u003d33 width\u003d1 height\u003d1\u003e",
              "D": "\u003capplet Test 33\u003e",
              "answer": "B",
              "yourAnswer": "A"
            },
            "8": {
              "id": 8,
              "problem": "接口中有几个构造方法？",
              "A": "0",
              "B": "1",
              "C": "2",
              "D": "以上都不对",
              "answer": "A",
              "yourAnswer": "A"
            },
            "9": {
              "id": 9,
              "problem": "对于私有构造方法，以下说法正确的是（ ）。",
              "A": "构造方法如果被限定为private则会产生编译错误",
              "B": "不能通过私有构造方法产生类的对象",
              "C": "私有构造方法不能在类外通过new调用创建对象",
              "D": "具有私有构造方法的类不能被继承",
              "answer": "C",
              "yourAnswer": "A"
            },
            "10": {
              "id": 10,
              "problem": "下列关于构造方法的叙述中，错误的是( )",
              "A": "Java语言规定构造方法名与类名必须相同",
              "B": "Java语言规定构造方法没有返回值，但不用void声明",
              "C": "Java语言规定构造方法不可以重载",
              "D": "Java语言规定构造方法只能通过new自动调用",
              "answer": "C",
              "yourAnswer": "A"
            },
            "11": {
              "id": 11,
              "problem": "以下关于多态的描述中错误的是（ ）。",
              "A": "重载和重写都是多态的表现形式",
              "B": "多态性分为动态多态性(动态绑定)和静态多态性两种",
              "C": "多态性可以加快代码的运行速度",
              "D": "多态性是面向对象的核心特征之一",
              "answer": "C",
              "yourAnswer": "A"
            },
            "12": {
              "id": 12,
              "problem": "下列选项中，抽象类的关键字是（）？",
              "A": "interface",
              "B": "implements",
              "C": "abstract",
              "D": "class",
              "answer": "C",
              "yourAnswer": "A"
            },
            "13": {
              "id": 13,
              "problem": "类中存在一个方法int getValue(int x){…}，以下能与这个方法重载的是（ ）。",
              "A": "public getValue(int x){…};",
              "B": "void getValue(int x){…};",
              "C": "int getValue(int x, int y){…};",
              "D": "int get(int x){…};",
              "answer": "C",
              "yourAnswer": "A"
            },
            "14": {
              "id": 14,
              "problem": "对于私有构造方法，以下说法正确的是（ ）。",
              "A": "构造方法如果被限定为private则会产生编译错误",
              "B": "不能通过私有构造方法产生类的对象",
              "C": "私有构造方法不能在类外通过new调用创建对象",
              "D": "具有私有构造方法的类不能被继承",
              "answer": "C",
              "yourAnswer": "A"
            },
            "15": {
              "id": 15,
              "problem": "接口中方法的方法体内可以有几条代码？",
              "A": "0",
              "B": "1",
              "C": "2",
              "D": "多条",
              "answer": "A",
              "yourAnswer": "A"
            },
            "16": {
              "id": 16,
              "problem": "下面选项中关于 abstract 的使用正确的是( )。",
              "A": "private abstract void blood();",
              "B": "abstract final void blood ();",
              "C": "static abstract void blood ();",
              "D": "public abstract void blood ();",
              "answer": "D",
              "yourAnswer": "A"
            },
            "17": {
              "id": 17,
              "problem": "一个类要实现多个接口，用什么关键字?",
              "A": "extends",
              "B": "implements",
              "C": "instanceof",
              "D": "import",
              "answer": "B",
              "yourAnswer": "A"
            },
            "18": {
              "id": 18,
              "problem": "如果希望类中成员即使被子类继承也只能通过父类方法间接访问，则应该使用修饰符（）",
              "A": "public",
              "B": "protected",
              "C": "不写",
              "D": "private",
              "answer": "D",
              "yourAnswer": "A"
            },
            "19": {
              "id": 19,
              "problem": "下面哪一个循环会导致死循环？( )",
              "A": "for (int k \u003d 0; k \u003c 0; k++)",
              "B": "for (int k \u003d 10; k \u003e 0; k--)",
              "C": "for (int k \u003d 0; k \u003c 10; k--)",
              "D": " for (int k \u003d 0; k \u003e 10; k++)",
              "answer": "C",
              "yourAnswer": "A"
            },
            "20": {
              "id": 20,
              "problem": "不是合法标识符的是（）",
              "A": "BigO1Long$223",
              "B": "Utfint",
              "C": "$12s",
              "D": "3d",
              "answer": "D",
              "yourAnswer": "A"
            }
          }
        },
        "16": {
          "name": "Java实例",
          "resource": "src\\pages\\Java实例",
          "learned": false,
          "date": "Dec 7, 2020, 1:49:59 PM",
          "integerSelectProblemHashMap": {
            "1": {
              "id": 1,
              "problem": "欲构造ArrayList类得一个实例，此类继承了List接口，下列哪个方法是正确的：",
              "A": "ArrayList myList \u003d new Object();",
              "B": "List myList \u003d new ArrayList();",
              "C": "ArraylList myList \u003d new List();",
              "D": "List myList \u003d new List();",
              "answer": "B",
              "yourAnswer": "A"
            },
            "2": {
              "id": 2,
              "problem": "下列关于抽象类的描述中，错误的是（ ）。",
              "A": "抽象类中可以包含抽象方法，也可以不包含抽象方法",
              "B": "抽象类不能实例化，即使抽象类中没有声明抽象方法，也不能实例化",
              "C": "不能声明抽象类的变量(对象)",
              "D": "包含抽象方法的类，必须要声明为抽象类",
              "answer": "C",
              "yourAnswer": "A"
            },
            "3": {
              "id": 3,
              "problem": "下列选项中，抽象类的关键字是（）？",
              "A": "interface",
              "B": "implements",
              "C": "abstract",
              "D": "class",
              "answer": "C",
              "yourAnswer": "A"
            },
            "4": {
              "id": 4,
              "problem": "接口中有几个构造方法？",
              "A": "0",
              "B": "1",
              "C": "2",
              "D": "以上都不对",
              "answer": "A",
              "yourAnswer": "A"
            },
            "5": {
              "id": 5,
              "problem": "变量命名规范说法正确的是( )",
              "A": "不同类型的变量，可以起相同的名字；",
              "B": "变量由字母、下划线、数字、$符号随意组成；",
              "C": "变量不能以数字作为开头；",
              "D": "A和a在java中是同一个变量；",
              "answer": "A",
              "yourAnswer": "A"
            },
            "6": {
              "id": 6,
              "problem": "欲构造ArrayList类得一个实例，此类继承了List接口，下列哪个方法是正确的：",
              "A": "ArrayList myList \u003d new Object();",
              "B": "List myList \u003d new ArrayList();",
              "C": "ArraylList myList \u003d new List();",
              "D": "List myList \u003d new List();",
              "answer": "B",
              "yourAnswer": "A"
            },
            "7": {
              "id": 7,
              "problem": "以下程序的结果是（ ）。class Base {     protected void fun(){         System.out.println(0);     } } class Derived extends Base {     protected void fun(){         System.out.println(1);     } } public class Test {     public static void main(String[] args) {         Base b1 \u003d new Derived();         b1.fun();     } }",
              "A": "运行错误",
              "B": "编译错误",
              "C": "0",
              "D": "1",
              "answer": "D",
              "yourAnswer": "A"
            },
            "8": {
              "id": 8,
              "problem": "以下关于重载的说法错误的是（ ）。",
              "A": "重载的方法只要定义正确，调用时就不会有歧义性。",
              "B": "重载的方法通常实现相似的功能",
              "C": "重载的方法可以互相调用，提高代码复用",
              "D": "重载是多态的一种表现形式",
              "answer": "A",
              "yourAnswer": "A"
            },
            "9": {
              "id": 9,
              "problem": "一个类可同时定义许多同名的方法，这些方法的形式参数个数、类型或顺序各不相同，传回的值也可以不相同，这种特性称为（ ）。",
              "A": "继承",
              "B": "重写",
              "C": "重载",
              "D": "封装",
              "answer": "C",
              "yourAnswer": "A"
            },
            "10": {
              "id": 10,
              "problem": "如果类中成员的定义没有用访问权限修饰符，则该成员不能被（ ）访问。",
              "A": "同一个包中子类",
              "B": "子类",
              "C": "同一个包中其他类",
              "D": "其他包中所有类",
              "answer": "D",
              "yourAnswer": "A"
            },
            "11": {
              "id": 11,
              "problem": "下列关于包的描述中错误的是（ ）",
              "A": "使用包的原因之一是避免类名重复",
              "B": "包是由.class文件组成的一个集合，是一个文件夹",
              "C": "功能相同或者相关的类一般组织在一个包中",
              "D": "包只能定义一层，即包中不能再有包",
              "answer": "D",
              "yourAnswer": "A"
            },
            "12": {
              "id": 12,
              "problem": "( )是FileInputStream的子类，可用于读取二进制文件.",
              "A": "DataOutputStream",
              "B": "DataInputStream",
              "C": "Reader",
              "D": "Writer",
              "answer": "B",
              "yourAnswer": "A"
            },
            "13": {
              "id": 13,
              "problem": "接口中有几个构造方法？",
              "A": "0",
              "B": "1",
              "C": "2",
              "D": "以上都不对",
              "answer": "A",
              "yourAnswer": "A"
            },
            "14": {
              "id": 14,
              "problem": "以下关于多态的描述中错误的是（ ）。",
              "A": "重载和重写都是多态的表现形式",
              "B": "多态性分为动态多态性(动态绑定)和静态多态性两种",
              "C": "多态性可以加快代码的运行速度",
              "D": "多态性是面向对象的核心特征之一",
              "answer": "C",
              "yourAnswer": "A"
            },
            "15": {
              "id": 15,
              "problem": "若A是抽象类，B是其子类且A和B都有默认构造方法，则以下语句非法的是（ ）。",
              "A": "A a;",
              "B": "A a \u003d new A();",
              "C": "A a[] \u003d new A[4];",
              "D": "A a \u003d new B();",
              "answer": "B",
              "yourAnswer": "A"
            },
            "16": {
              "id": 16,
              "problem": "以下不是面向对象特征的是（ ）。",
              "A": "继承",
              "B": "代码复制",
              "C": "封装",
              "D": "多态",
              "answer": "B",
              "yourAnswer": "A"
            },
            "17": {
              "id": 17,
              "problem": "下列关于引入包的描述中，错误的是（ ）。",
              "A": "使用项目中其他包中的类时，需要在源程序中写import语句",
              "B": "import语句写在类声明的上面，package语句的下面",
              "C": "import可以引入包中所有类或其中一个类",
              "D": "import语句必须是源文件中第一条语句",
              "answer": "D",
              "yourAnswer": "A"
            },
            "18": {
              "id": 18,
              "problem": "在创建对象时必须( )",
              "A": "先声明对象，然后才能使用对象",
              "B": "先声明对象，为对象分配内存空间，然后才能使用对象",
              "C": "先声明对象，为对象分配内存空间，对对象初始化，然后才能使用对象",
              "D": "上述说法都对",
              "answer": "C",
              "yourAnswer": "A"
            },
            "19": {
              "id": 19,
              "problem": "以下程序的输出结果是（ ）。abstract class A {     public abstract void fun();     public void fun(int a) {         System.out.println(a);     } } class TestA extends A {     public static void main(String[] args) {         TestA ta \u003d new TestA();         ta.fun(1);     } }",
              "A": "1",
              "B": "编译错误",
              "C": "运行错误",
              "D": "无输出",
              "answer": "B",
              "yourAnswer": "A"
            },
            "20": {
              "id": 20,
              "problem": "下列关于构造方法的叙述中，错误的是( )",
              "A": "Java语言规定构造方法名与类名必须相同",
              "B": "Java语言规定构造方法没有返回值，但不用void声明",
              "C": "Java语言规定构造方法不可以重载",
              "D": "Java语言规定构造方法只能通过new自动调用",
              "answer": "C",
              "yourAnswer": "A"
            }
          }
        },
        "17": {
          "name": "Java8新特性",
          "resource": "src\\pages\\Java8新特性",
          "learned": false,
          "date": "Dec 7, 2020, 1:49:59 PM",
          "integerSelectProblemHashMap": {
            "1": {
              "id": 1,
              "problem": "下面哪一个循环会导致死循环？( )",
              "A": "for (int k \u003d 0; k \u003c 0; k++)",
              "B": "for (int k \u003d 10; k \u003e 0; k--)",
              "C": "for (int k \u003d 0; k \u003c 10; k--)",
              "D": " for (int k \u003d 0; k \u003e 10; k++)",
              "answer": "C",
              "yourAnswer": "A"
            },
            "2": {
              "id": 2,
              "problem": "java中所有类的父类是（）？",
              "A": "object",
              "B": "Father",
              "C": "Lang",
              "D": "Exception",
              "answer": "A",
              "yourAnswer": "A"
            },
            "3": {
              "id": 3,
              "problem": "以下程序的结果是（ ）。class Base {     protected void fun(){         System.out.println(0);     } } class Derived extends Base {     protected void fun(){         System.out.println(1);     } } public class Test {     public static void main(String[] args) {         Base b1 \u003d new Derived();         b1.fun();     } }",
              "A": "运行错误",
              "B": "编译错误",
              "C": "0",
              "D": "1",
              "answer": "D",
              "yourAnswer": "A"
            },
            "4": {
              "id": 4,
              "problem": "下面哪一个循环会导致死循环？( )",
              "A": "for (int k \u003d 0; k \u003c 0; k++)",
              "B": "for (int k \u003d 10; k \u003e 0; k--)",
              "C": "for (int k \u003d 0; k \u003c 10; k--)",
              "D": " for (int k \u003d 0; k \u003e 10; k++)",
              "answer": "C",
              "yourAnswer": "A"
            },
            "5": {
              "id": 5,
              "problem": "以下关于重载的说法错误的是（ ）。",
              "A": "重载的方法只要定义正确，调用时就不会有歧义性。",
              "B": "重载的方法通常实现相似的功能",
              "C": "重载的方法可以互相调用，提高代码复用",
              "D": "重载是多态的一种表现形式",
              "answer": "A",
              "yourAnswer": "A"
            },
            "6": {
              "id": 6,
              "problem": "以下没有体现出封装性的是（ ）。",
              "A": "将类的成员用访问权限修饰符加以访问控制",
              "B": "提供成员方法操作成员变量",
              "C": "将类的全部成员都设定为public权限",
              "D": "将类按照不同的包组织管理",
              "answer": "C",
              "yourAnswer": "A"
            },
            "7": {
              "id": 7,
              "problem": "以下关于构造函数的描述错误的是( )",
              "A": "构造函数的返回类型只能是void型",
              "B": "构造函数是类的一种特殊函数，它的方法名必须与类名相同。",
              "C": "构造函数的主要作用是完成对类的对象的初始化工作。",
              "D": "一般在创建新对象时，系统会自动调用构造函数。",
              "answer": "A",
              "yourAnswer": "A"
            },
            "8": {
              "id": 8,
              "problem": "java中所有类的父类是（）？",
              "A": "object",
              "B": "Father",
              "C": "Lang",
              "D": "Exception",
              "answer": "A",
              "yourAnswer": "A"
            },
            "9": {
              "id": 9,
              "problem": "接口中的属性会自动被修饰为？",
              "A": "public static",
              "B": "static final",
              "C": "public static final",
              "D": "public final",
              "answer": "C",
              "yourAnswer": "A"
            },
            "10": {
              "id": 10,
              "problem": "已知A类具有以下四个成员方法，a是A类的对象，则a.fun(1, 3.14F)调用的是（ ）。",
              "A": "public void fun(int a, double b){…}",
              "B": "public int fun(double a, double b){…}",
              "C": "public void fun(float a, float b){…}",
              "D": "public float fun(int a, float b){…}",
              "answer": "D",
              "yourAnswer": "A"
            },
            "11": {
              "id": 11,
              "problem": "以下没有体现出封装性的是（ ）。",
              "A": "将类的成员用访问权限修饰符加以访问控制",
              "B": "提供成员方法操作成员变量",
              "C": "将类的全部成员都设定为public权限",
              "D": "将类按照不同的包组织管理",
              "answer": "C",
              "yourAnswer": "A"
            },
            "12": {
              "id": 12,
              "problem": "下列关于构造方法的叙述中，错误的是( )",
              "A": "Java语言规定构造方法名与类名必须相同",
              "B": "Java语言规定构造方法没有返回值，但不用void声明",
              "C": "Java语言规定构造方法不可以重载",
              "D": "Java语言规定构造方法只能通过new自动调用",
              "answer": "C",
              "yourAnswer": "A"
            },
            "13": {
              "id": 13,
              "problem": "接口中所有的方法都是？",
              "A": "实现方法",
              "B": "抽象方法",
              "C": "无返回值的方法",
              "D": "有返回值的方法",
              "answer": "B",
              "yourAnswer": "A"
            },
            "14": {
              "id": 14,
              "problem": "以下不是面向对象特征的是（ ）。",
              "A": "继承",
              "B": "代码复制",
              "C": "封装",
              "D": "多态",
              "answer": "B",
              "yourAnswer": "A"
            },
            "15": {
              "id": 15,
              "problem": "如果希望类中成员即使被子类继承也只能通过父类方法间接访问，则应该使用修饰符（）",
              "A": "public",
              "B": "protected",
              "C": "不写",
              "D": "private",
              "answer": "D",
              "yourAnswer": "A"
            },
            "16": {
              "id": 16,
              "problem": "接口中方法的修饰符默认是？",
              "A": "public",
              "B": "abstract",
              "C": "public abstract",
              "D": "public static final",
              "answer": "C",
              "yourAnswer": "A"
            },
            "17": {
              "id": 17,
              "problem": "下列哪个是合法的Java标识符？( )",
              "A": "Tree\u0026Glasses",
              "B": "FirstJavaApplet",
              "C": "*theLastOne",
              "D": "273.5",
              "answer": "B",
              "yourAnswer": "A"
            },
            "18": {
              "id": 18,
              "problem": "java中所有类的父类是（）？",
              "A": "object",
              "B": "Father",
              "C": "Lang",
              "D": "Exception",
              "answer": "A",
              "yourAnswer": "A"
            },
            "19": {
              "id": 19,
              "problem": "( )是FileInputStream的子类，可用于读取二进制文件.",
              "A": "DataOutputStream",
              "B": "DataInputStream",
              "C": "Reader",
              "D": "Writer",
              "answer": "B",
              "yourAnswer": "A"
            },
            "20": {
              "id": 20,
              "problem": "接口中有几个构造方法？",
              "A": "0",
              "B": "1",
              "C": "2",
              "D": "以上都不对",
              "answer": "A",
              "yourAnswer": "A"
            }
          }
        },
        "18": {
          "name": "JavaMySQL连接",
          "resource": "src\\pages\\JavaMySQL连接",
          "learned": false,
          "date": "Dec 7, 2020, 1:49:59 PM",
          "integerSelectProblemHashMap": {
            "1": {
              "id": 1,
              "problem": "结构化程序设计所规定的三种基本控制结构是( )",
              "A": "输入、处理、输出",
              "B": "树形、网形、环形",
              "C": "顺序、选择、循环",
              "D": "主程序、子程序、函数",
              "answer": "C",
              "yourAnswer": "A"
            },
            "2": {
              "id": 2,
              "problem": "接口中的属性会自动被修饰为？",
              "A": "public static",
              "B": "static final",
              "C": "public static final",
              "D": "public final",
              "answer": "C",
              "yourAnswer": "A"
            },
            "3": {
              "id": 3,
              "problem": "下面选项中关于 abstract 的使用正确的是( )。",
              "A": "private abstract void blood();",
              "B": "abstract final void blood ();",
              "C": "static abstract void blood ();",
              "D": "public abstract void blood ();",
              "answer": "D",
              "yourAnswer": "A"
            },
            "4": {
              "id": 4,
              "problem": "InputStream类的作用就是将文件中的数据读入到内存中，该类中的哪个方法可以关闭文件输入流对象？",
              "A": "int read()",
              "B": "void close()",
              "C": "int available()",
              "D": "int read(byte[] b)",
              "answer": "B",
              "yourAnswer": "A"
            },
            "5": {
              "id": 5,
              "problem": "以下没有体现出封装性的是（ ）。",
              "A": "将类的成员用访问权限修饰符加以访问控制",
              "B": "提供成员方法操作成员变量",
              "C": "将类的全部成员都设定为public权限",
              "D": "将类按照不同的包组织管理",
              "answer": "C",
              "yourAnswer": "A"
            },
            "6": {
              "id": 6,
              "problem": "以下关于继承的叙述正确的是( )",
              "A": "在Java中类只允许单一继承",
              "B": "在Java中一个类只能实现一个接口",
              "C": "在Java中一个类不能同时继承一个类和实现一个接口",
              "D": "在Java中接口只允许单一继承",
              "answer": "A",
              "yourAnswer": "A"
            },
            "7": {
              "id": 7,
              "problem": "类中存在一个方法int getValue(double x){…}，以下不能与这个方法重载的是（ ）。",
              "A": "int getValue(int x){…};",
              "B": "int getValue(float x){…};",
              "C": "int getValue(double t){…};",
              "D": "int getValue(double x, double y){…};",
              "answer": "C",
              "yourAnswer": "A"
            },
            "8": {
              "id": 8,
              "problem": "下面哪一个循环会导致死循环？( )",
              "A": "for (int k \u003d 0; k \u003c 0; k++)",
              "B": "for (int k \u003d 10; k \u003e 0; k--)",
              "C": "for (int k \u003d 0; k \u003c 10; k--)",
              "D": " for (int k \u003d 0; k \u003e 10; k++)",
              "answer": "C",
              "yourAnswer": "A"
            },
            "9": {
              "id": 9,
              "problem": "如果希望类中成员能被所有子类继承后像自身成员一样直接访问，则应该使用修饰符（）",
              "A": "default",
              "B": "protected",
              "C": "不写",
              "D": "private",
              "answer": " ",
              "yourAnswer": "A"
            },
            "10": {
              "id": 10,
              "problem": "变量命名规范说法正确的是( )",
              "A": "不同类型的变量，可以起相同的名字；",
              "B": "变量由字母、下划线、数字、$符号随意组成；",
              "C": "变量不能以数字作为开头；",
              "D": "A和a在java中是同一个变量；",
              "answer": "A",
              "yourAnswer": "A"
            },
            "11": {
              "id": 11,
              "problem": "表达式(11+3*8)/4%3的值是( )",
              "A": "31",
              "B": "0",
              "C": "1",
              "D": "2",
              "answer": "D",
              "yourAnswer": "A"
            },
            "12": {
              "id": 12,
              "problem": "以下不是面向对象特征的是（ ）。",
              "A": "继承",
              "B": "代码复制",
              "C": "封装",
              "D": "多态",
              "answer": "B",
              "yourAnswer": "A"
            },
            "13": {
              "id": 13,
              "problem": "下列关于抽象方法的描述中，错误的是（ ）。",
              "A": "抽象方法声明只需给出方法头，不能写方法体，直接以分号结束",
              "B": "所有的方法都可以声明为抽象方法",
              "C": "构造方法不能声明为抽象方法",
              "D": "声明抽象方法使用关键字abstract修饰",
              "answer": "B",
              "yourAnswer": "A"
            },
            "14": {
              "id": 14,
              "problem": "下面哪个是applet传递参数的正确方式？（ ）",
              "A": "\u003capplet code\u003dTest.class age\u003d33 width\u003d1 height\u003d1\u003e",
              "B": "\u003cparam name\u003dage value\u003d33\u003e",
              "C": "\u003capplet code\u003dTest.class name\u003dage value\u003d33 width\u003d1 height\u003d1\u003e",
              "D": "\u003capplet Test 33\u003e",
              "answer": "B",
              "yourAnswer": "A"
            },
            "15": {
              "id": 15,
              "problem": "下列哪一个变量不需要创建对象，直接可以根据类名调用该属性？",
              "A": "public String str;",
              "B": "String str;",
              "C": "public static String str;",
              "D": "str",
              "answer": "C",
              "yourAnswer": "A"
            },
            "16": {
              "id": 16,
              "problem": "下列不可作为java语言修饰符的是( )",
              "A": "a1",
              "B": "$1",
              "C": "_1",
              "D": "11",
              "answer": "D",
              "yourAnswer": "A"
            },
            "17": {
              "id": 17,
              "problem": "欲构造ArrayList类得一个实例，此类继承了List接口，下列哪个方法是正确的：",
              "A": "ArrayList myList \u003d new Object();",
              "B": "List myList \u003d new ArrayList();",
              "C": "ArraylList myList \u003d new List();",
              "D": "List myList \u003d new List();",
              "answer": "B",
              "yourAnswer": "A"
            },
            "18": {
              "id": 18,
              "problem": "下面哪一个循环会导致死循环？( )",
              "A": "for (int k \u003d 0; k \u003c 0; k++)",
              "B": "for (int k \u003d 10; k \u003e 0; k--)",
              "C": "for (int k \u003d 0; k \u003c 10; k--)",
              "D": " for (int k \u003d 0; k \u003e 10; k++)",
              "answer": "C",
              "yourAnswer": "A"
            },
            "19": {
              "id": 19,
              "problem": "已知A类具有以下四个成员方法，a是A类的对象，则a.fun(1, 3.14F)调用的是（ ）。",
              "A": "public void fun(int a, double b){…}",
              "B": "public int fun(double a, double b){…}",
              "C": "public void fun(float a, float b){…}",
              "D": "public float fun(int a, float b){…}",
              "answer": "D",
              "yourAnswer": "A"
            },
            "20": {
              "id": 20,
              "problem": "不是合法标识符的是（）",
              "A": "BigO1Long$223",
              "B": "Utfint",
              "C": "$12s",
              "D": "3d",
              "answer": "D",
              "yourAnswer": "A"
            }
          }
        },
        "19": {
          "name": "Java9新特性",
          "resource": "src\\pages\\Java9新特性",
          "learned": false,
          "date": "Dec 7, 2020, 1:49:59 PM",
          "integerSelectProblemHashMap": {
            "1": {
              "id": 1,
              "problem": "Java的核心包中，提供编程应用的基本类包是（ ）",
              "A": "java.util",
              "B": "java.lang",
              "C": "java.applet",
              "D": "java.rmi",
              "answer": "B",
              "yourAnswer": "A"
            },
            "2": {
              "id": 2,
              "problem": "以下关于重载的说法错误的是（ ）。",
              "A": "重载的方法只要定义正确，调用时就不会有歧义性。",
              "B": "重载的方法通常实现相似的功能",
              "C": "重载的方法可以互相调用，提高代码复用",
              "D": "重载是多态的一种表现形式",
              "answer": "A",
              "yourAnswer": "A"
            },
            "3": {
              "id": 3,
              "problem": "接口中的属性会自动被修饰为？",
              "A": "public static",
              "B": "static final",
              "C": "public static final",
              "D": "public final",
              "answer": "C",
              "yourAnswer": "A"
            },
            "4": {
              "id": 4,
              "problem": "对于私有构造方法，以下说法正确的是（ ）。",
              "A": "构造方法如果被限定为private则会产生编译错误",
              "B": "不能通过私有构造方法产生类的对象",
              "C": "私有构造方法不能在类外通过new调用创建对象",
              "D": "具有私有构造方法的类不能被继承",
              "answer": "C",
              "yourAnswer": "A"
            },
            "5": {
              "id": 5,
              "problem": "以下关于多态的描述中错误的是（ ）。",
              "A": "重载和重写都是多态的表现形式",
              "B": "多态性分为动态多态性(动态绑定)和静态多态性两种",
              "C": "多态性可以加快代码的运行速度",
              "D": "多态性是面向对象的核心特征之一",
              "answer": "C",
              "yourAnswer": "A"
            },
            "6": {
              "id": 6,
              "problem": "以下没有体现出封装性的是（ ）。",
              "A": "将类的成员用访问权限修饰符加以访问控制",
              "B": "提供成员方法操作成员变量",
              "C": "将类的全部成员都设定为public权限",
              "D": "将类按照不同的包组织管理",
              "answer": "C",
              "yourAnswer": "A"
            },
            "7": {
              "id": 7,
              "problem": "变量命名规范说法正确的是( )",
              "A": "不同类型的变量，可以起相同的名字；",
              "B": "变量由字母、下划线、数字、$符号随意组成；",
              "C": "变量不能以数字作为开头；",
              "D": "A和a在java中是同一个变量；",
              "answer": "A",
              "yourAnswer": "A"
            },
            "8": {
              "id": 8,
              "problem": "下列哪一个变量不需要创建对象，直接可以根据类名调用该属性？",
              "A": "public String str;",
              "B": "String str;",
              "C": "public static String str;",
              "D": "str",
              "answer": "C",
              "yourAnswer": "A"
            },
            "9": {
              "id": 9,
              "problem": "一个类要实现接口的功能，可以实现几个方法？",
              "A": "0",
              "B": "1",
              "C": "2",
              "D": "全部",
              "answer": "D",
              "yourAnswer": "A"
            },
            "10": {
              "id": 10,
              "problem": "下列关于抽象方法的描述中，错误的是（ ）。",
              "A": "抽象方法声明只需给出方法头，不能写方法体，直接以分号结束",
              "B": "所有的方法都可以声明为抽象方法",
              "C": "构造方法不能声明为抽象方法",
              "D": "声明抽象方法使用关键字abstract修饰",
              "answer": "B",
              "yourAnswer": "A"
            },
            "11": {
              "id": 11,
              "problem": "下列关于抽象方法的描述中，错误的是（ ）。",
              "A": "抽象方法声明只需给出方法头，不能写方法体，直接以分号结束",
              "B": "所有的方法都可以声明为抽象方法",
              "C": "构造方法不能声明为抽象方法",
              "D": "声明抽象方法使用关键字abstract修饰",
              "answer": "B",
              "yourAnswer": "A"
            },
            "12": {
              "id": 12,
              "problem": "类中存在一个方法int getValue(int x){…}，以下能与这个方法重载的是（ ）。",
              "A": "public getValue(int x){…};",
              "B": "void getValue(int x){…};",
              "C": "int getValue(int x, int y){…};",
              "D": "int get(int x){…};",
              "answer": "C",
              "yourAnswer": "A"
            },
            "13": {
              "id": 13,
              "problem": "一个类可同时定义许多同名的方法，这些方法的形式参数个数、类型或顺序各不相同，传回的值也可以不相同，这种特性称为（ ）。",
              "A": "继承",
              "B": "重写",
              "C": "重载",
              "D": "封装",
              "answer": "C",
              "yourAnswer": "A"
            },
            "14": {
              "id": 14,
              "problem": "如果类中成员的定义没有用访问权限修饰符，则该成员不能被（ ）访问。",
              "A": "同一个包中子类",
              "B": "子类",
              "C": "同一个包中其他类",
              "D": "其他包中所有类",
              "answer": "D",
              "yourAnswer": "A"
            },
            "15": {
              "id": 15,
              "problem": "在创建对象时必须( )",
              "A": "先声明对象，然后才能使用对象",
              "B": "先声明对象，为对象分配内存空间，然后才能使用对象",
              "C": "先声明对象，为对象分配内存空间，对对象初始化，然后才能使用对象",
              "D": "上述说法都对",
              "answer": "C",
              "yourAnswer": "A"
            },
            "16": {
              "id": 16,
              "problem": "以下关于继承的叙述正确的是( )",
              "A": "在Java中类只允许单一继承",
              "B": "在Java中一个类只能实现一个接口",
              "C": "在Java中一个类不能同时继承一个类和实现一个接口",
              "D": "在Java中接口只允许单一继承",
              "answer": "A",
              "yourAnswer": "A"
            },
            "17": {
              "id": 17,
              "problem": "下列不是重载方法的特征的是（ ）。",
              "A": "参数个数不同",
              "B": "返回值类型不同",
              "C": "参数类型不同",
              "D": "方法名相同",
              "answer": "B",
              "yourAnswer": "A"
            },
            "18": {
              "id": 18,
              "problem": "在创建对象时必须( )",
              "A": "先声明对象，然后才能使用对象",
              "B": "先声明对象，为对象分配内存空间，然后才能使用对象",
              "C": "先声明对象，为对象分配内存空间，对对象初始化，然后才能使用对象",
              "D": "上述说法都对",
              "answer": "C",
              "yourAnswer": "A"
            },
            "19": {
              "id": 19,
              "problem": "有一段java 应用程序，它的主类名是a1，那么保存它的源文件名可以是( )",
              "A": "a1.java",
              "B": "a1.class",
              "C": "a1",
              "D": "都对",
              "answer": "A",
              "yourAnswer": "A"
            },
            "20": {
              "id": 20,
              "problem": "下列关于包的描述中错误的是（ ）",
              "A": "使用包的原因之一是避免类名重复",
              "B": "包是由.class文件组成的一个集合，是一个文件夹",
              "C": "功能相同或者相关的类一般组织在一个包中",
              "D": "包只能定义一层，即包中不能再有包",
              "answer": "D",
              "yourAnswer": "A"
            }
          }
        },
        "20": {
          "name": "Java测验",
          "resource": "src\\pages\\Java测验",
          "learned": false,
          "date": "Dec 7, 2020, 1:49:59 PM",
          "integerSelectProblemHashMap": {
            "1": {
              "id": 1,
              "problem": "下列关于包的描述中错误的是（ ）",
              "A": "使用包的原因之一是避免类名重复",
              "B": "包是由.class文件组成的一个集合，是一个文件夹",
              "C": "功能相同或者相关的类一般组织在一个包中",
              "D": "包只能定义一层，即包中不能再有包",
              "answer": "D",
              "yourAnswer": "A"
            },
            "2": {
              "id": 2,
              "problem": "下列选项中，抽象类的关键字是（）？",
              "A": "interface",
              "B": "implements",
              "C": "abstract",
              "D": "class",
              "answer": "C",
              "yourAnswer": "A"
            },
            "3": {
              "id": 3,
              "problem": "下列哪一个关键字用于实现接口来定义类？( )",
              "A": "extends",
              "B": "implements",
              "C": "abstract",
              "D": "interface",
              "answer": "B",
              "yourAnswer": "A"
            },
            "4": {
              "id": 4,
              "problem": "下面选项中关于 abstract 的使用正确的是( )。",
              "A": "private abstract void blood();",
              "B": "abstract final void blood ();",
              "C": "static abstract void blood ();",
              "D": "public abstract void blood ();",
              "answer": "D",
              "yourAnswer": "A"
            },
            "5": {
              "id": 5,
              "problem": "java中所有类的父类是（）？",
              "A": "object",
              "B": "Father",
              "C": "Lang",
              "D": "Exception",
              "answer": "A",
              "yourAnswer": "A"
            },
            "6": {
              "id": 6,
              "problem": "（ ）是Java语言的关键字。",
              "A": "public",
              "B": "static",
              "C": "void",
              "D": "以上都是",
              "answer": "D",
              "yourAnswer": "A"
            },
            "7": {
              "id": 7,
              "problem": "BufferedWriter类是Writer类的子类，BufferedWriter类中的（）方法可以插入一个换行符。",
              "A": "void newLine()",
              "B": "void close()",
              "C": "void flush()",
              "D": "void write(String str)",
              "answer": "A",
              "yourAnswer": "A"
            },
            "8": {
              "id": 8,
              "problem": "变量命名规范说法正确的是( )",
              "A": "不同类型的变量，可以起相同的名字；",
              "B": "变量由字母、下划线、数字、$符号随意组成；",
              "C": "变量不能以数字作为开头；",
              "D": "A和a在java中是同一个变量；",
              "answer": "A",
              "yourAnswer": "A"
            },
            "9": {
              "id": 9,
              "problem": "下列关于引入包的描述中，错误的是（ ）。",
              "A": "使用项目中其他包中的类时，需要在源程序中写import语句",
              "B": "import语句写在类声明的上面，package语句的下面",
              "C": "import可以引入包中所有类或其中一个类",
              "D": "import语句必须是源文件中第一条语句",
              "answer": "D",
              "yourAnswer": "A"
            },
            "10": {
              "id": 10,
              "problem": "下列不是重载方法的特征的是（ ）。",
              "A": "参数个数不同",
              "B": "返回值类型不同",
              "C": "参数类型不同",
              "D": "方法名相同",
              "answer": "B",
              "yourAnswer": "A"
            },
            "11": {
              "id": 11,
              "problem": "一个类可同时定义许多同名的方法，这些方法的形式参数个数、类型或顺序各不相同，传回的值也可以不相同，这种特性称为（ ）。",
              "A": "继承",
              "B": "重写",
              "C": "重载",
              "D": "封装",
              "answer": "C",
              "yourAnswer": "A"
            },
            "12": {
              "id": 12,
              "problem": "下列哪一个变量不需要创建对象，直接可以根据类名调用该属性？",
              "A": "public String str;",
              "B": "String str;",
              "C": "public static String str;",
              "D": "str",
              "answer": "C",
              "yourAnswer": "A"
            },
            "13": {
              "id": 13,
              "problem": "下列不是重载方法的特征的是（ ）。",
              "A": "参数个数不同",
              "B": "返回值类型不同",
              "C": "参数类型不同",
              "D": "方法名相同",
              "answer": "B",
              "yourAnswer": "A"
            },
            "14": {
              "id": 14,
              "problem": "下列关于引入包的描述中，错误的是（ ）。",
              "A": "使用项目中其他包中的类时，需要在源程序中写import语句",
              "B": "import语句写在类声明的上面，package语句的下面",
              "C": "import可以引入包中所有类或其中一个类",
              "D": "import语句必须是源文件中第一条语句",
              "answer": "D",
              "yourAnswer": "A"
            },
            "15": {
              "id": 15,
              "problem": "（ ）是Java语言的关键字。",
              "A": "public",
              "B": "static",
              "C": "void",
              "D": "以上都是",
              "answer": "D",
              "yourAnswer": "A"
            },
            "16": {
              "id": 16,
              "problem": "以下标识符中哪项是不合法的( )",
              "A": "int",
              "B": "$double",
              "C": "hello",
              "D": "BigMeaninglessName",
              "answer": "A",
              "yourAnswer": "A"
            },
            "17": {
              "id": 17,
              "problem": "接口中方法的修饰符默认是？",
              "A": "public",
              "B": "abstract",
              "C": "public abstract",
              "D": "public static final",
              "answer": "C",
              "yourAnswer": "A"
            },
            "18": {
              "id": 18,
              "problem": "以下关于多态的描述中错误的是（ ）。",
              "A": "重载和重写都是多态的表现形式",
              "B": "多态性分为动态多态性(动态绑定)和静态多态性两种",
              "C": "多态性可以加快代码的运行速度",
              "D": "多态性是面向对象的核心特征之一",
              "answer": "C",
              "yourAnswer": "A"
            },
            "19": {
              "id": 19,
              "problem": "有一段java 应用程序，它的主类名是a1，那么保存它的源文件名可以是( )",
              "A": "a1.java",
              "B": "a1.class",
              "C": "a1",
              "D": "都对",
              "answer": "A",
              "yourAnswer": "A"
            },
            "20": {
              "id": 20,
              "problem": "一个类要实现多个接口，用什么关键字?",
              "A": "extends",
              "B": "implements",
              "C": "instanceof",
              "D": "import",
              "answer": "B",
              "yourAnswer": "A"
            }
          }
        }
      }
    },
    "Java中级教程": {
      "ableToLearn": false,
      "stringNewTitleManagerHashMap": {
        "Java接口": {
          "name": "Java接口",
          "resource": "src\\pages\\Java接口",
          "learned": false,
          "date": "Dec 7, 2020, 1:49:59 PM",
          "integerSelectProblemHashMap": {
            "1": {
              "id": 1,
              "problem": "不允许作为类及类的成员的访问控制符的是（）？",
              "A": "public",
              "B": "private",
              "C": "protected",
              "D": "static",
              "answer": "D",
              "yourAnswer": "A"
            },
            "2": {
              "id": 2,
              "problem": "下列不可作为java语言修饰符的是( )",
              "A": "a1",
              "B": "$1",
              "C": "_1",
              "D": "11",
              "answer": "D",
              "yourAnswer": "A"
            },
            "3": {
              "id": 3,
              "problem": "下列关于抽象方法的描述中，错误的是（ ）。",
              "A": "抽象方法声明只需给出方法头，不能写方法体，直接以分号结束",
              "B": "所有的方法都可以声明为抽象方法",
              "C": "构造方法不能声明为抽象方法",
              "D": "声明抽象方法使用关键字abstract修饰",
              "answer": "B",
              "yourAnswer": "A"
            },
            "4": {
              "id": 4,
              "problem": "已知A类具有以下四个成员方法，a是A类的对象，则a.fun(1, 3.14F)调用的是（ ）。",
              "A": "public void fun(int a, double b){…}",
              "B": "public int fun(double a, double b){…}",
              "C": "public void fun(float a, float b){…}",
              "D": "public float fun(int a, float b){…}",
              "answer": "D",
              "yourAnswer": "A"
            },
            "5": {
              "id": 5,
              "problem": "在创建对象时必须( )",
              "A": "先声明对象，然后才能使用对象",
              "B": "先声明对象，为对象分配内存空间，然后才能使用对象",
              "C": "先声明对象，为对象分配内存空间，对对象初始化，然后才能使用对象",
              "D": "上述说法都对",
              "answer": "C",
              "yourAnswer": "A"
            },
            "6": {
              "id": 6,
              "problem": "下列哪个是合法的Java标识符？( )",
              "A": "Tree\u0026Glasses",
              "B": "FirstJavaApplet",
              "C": "*theLastOne",
              "D": "273.5",
              "answer": "B",
              "yourAnswer": "A"
            },
            "7": {
              "id": 7,
              "problem": "( )是FileInputStream的子类，可用于读取二进制文件.",
              "A": "DataOutputStream",
              "B": "DataInputStream",
              "C": "Reader",
              "D": "Writer",
              "answer": "B",
              "yourAnswer": "A"
            },
            "8": {
              "id": 8,
              "problem": "以下关于重载的说法错误的是（ ）。",
              "A": "重载的方法只要定义正确，调用时就不会有歧义性。",
              "B": "重载的方法通常实现相似的功能",
              "C": "重载的方法可以互相调用，提高代码复用",
              "D": "重载是多态的一种表现形式",
              "answer": "A",
              "yourAnswer": "A"
            },
            "9": {
              "id": 9,
              "problem": "java中所有类的父类是（）？",
              "A": "object",
              "B": "Father",
              "C": "Lang",
              "D": "Exception",
              "answer": "A",
              "yourAnswer": "A"
            },
            "10": {
              "id": 10,
              "problem": "( )类带有缓冲区，可以把一批数据读到缓冲区，避免每次都从数据源读取数据进行字符编码转换。",
              "A": "Reader",
              "B": "FileReader",
              "C": "Writer",
              "D": "BufferedReader",
              "answer": "D",
              "yourAnswer": "A"
            },
            "11": {
              "id": 11,
              "problem": "以下程序的输出结果是（ ）。abstract class A {     public abstract void fun();     public void fun(int a) {         System.out.println(a);     } } class TestA extends A {     public static void main(String[] args) {         TestA ta \u003d new TestA();         ta.fun(1);     } }",
              "A": "1",
              "B": "编译错误",
              "C": "运行错误",
              "D": "无输出",
              "answer": "B",
              "yourAnswer": "A"
            },
            "12": {
              "id": 12,
              "problem": "（ ）是Java语言的关键字。",
              "A": "public",
              "B": "static",
              "C": "void",
              "D": "以上都是",
              "answer": "D",
              "yourAnswer": "A"
            },
            "13": {
              "id": 13,
              "problem": "在创建对象时必须( )",
              "A": "先声明对象，然后才能使用对象",
              "B": "先声明对象，为对象分配内存空间，然后才能使用对象",
              "C": "先声明对象，为对象分配内存空间，对对象初始化，然后才能使用对象",
              "D": "上述说法都对",
              "answer": "C",
              "yourAnswer": "A"
            },
            "14": {
              "id": 14,
              "problem": "有一段java 应用程序，它的主类名是a1，那么保存它的源文件名可以是( )",
              "A": "a1.java",
              "B": "a1.class",
              "C": "a1",
              "D": "都对",
              "answer": "A",
              "yourAnswer": "A"
            },
            "15": {
              "id": 15,
              "problem": "下列关于引入包的描述中，错误的是（ ）。",
              "A": "使用项目中其他包中的类时，需要在源程序中写import语句",
              "B": "import语句写在类声明的上面，package语句的下面",
              "C": "import可以引入包中所有类或其中一个类",
              "D": "import语句必须是源文件中第一条语句",
              "answer": "D",
              "yourAnswer": "A"
            },
            "16": {
              "id": 16,
              "problem": "下列关于包的描述中错误的是（ ）",
              "A": "使用包的原因之一是避免类名重复",
              "B": "包是由.class文件组成的一个集合，是一个文件夹",
              "C": "功能相同或者相关的类一般组织在一个包中",
              "D": "包只能定义一层，即包中不能再有包",
              "answer": "D",
              "yourAnswer": "A"
            },
            "17": {
              "id": 17,
              "problem": "不是合法标识符的是（）",
              "A": "BigO1Long$223",
              "B": "Utfint",
              "C": "$12s",
              "D": "3d",
              "answer": "D",
              "yourAnswer": "A"
            },
            "18": {
              "id": 18,
              "problem": "下列关于引入包的描述中，错误的是（ ）。",
              "A": "使用项目中其他包中的类时，需要在源程序中写import语句",
              "B": "import语句写在类声明的上面，package语句的下面",
              "C": "import可以引入包中所有类或其中一个类",
              "D": "import语句必须是源文件中第一条语句",
              "answer": "D",
              "yourAnswer": "A"
            },
            "19": {
              "id": 19,
              "problem": "BufferedWriter类是Writer类的子类，BufferedWriter类中的（）方法可以插入一个换行符。",
              "A": "void newLine()",
              "B": "void close()",
              "C": "void flush()",
              "D": "void write(String str)",
              "answer": "A",
              "yourAnswer": "A"
            },
            "20": {
              "id": 20,
              "problem": "下列关于打包的描述中，错误的是（ ）。",
              "A": "一个源文件中最多包含一条package语句，且必须是第一条语句",
              "B": "一个源文件中定义的类的字节码可以存放于不同的包中",
              "C": "若源文件中没有包含package语句，则类的字节码被放入无名包中",
              "D": "不在一个源文件中定义的子类和父类可以位于不同包中",
              "answer": "B",
              "yourAnswer": "A"
            }
          }
        },
        "JavaOverride/Overload": {
          "name": "JavaOverride/Overload",
          "resource": "src\\pages\\JavaOverride/Overload",
          "learned": false,
          "date": "Dec 7, 2020, 1:49:59 PM",
          "integerSelectProblemHashMap": {
            "1": {
              "id": 1,
              "problem": "接口中方法的修饰符默认是？",
              "A": "public",
              "B": "abstract",
              "C": "public abstract",
              "D": "public static final",
              "answer": "C",
              "yourAnswer": "A"
            },
            "2": {
              "id": 2,
              "problem": "类中存在一个方法int getValue(double x){…}，以下不能与这个方法重载的是（ ）。",
              "A": "int getValue(int x){…};",
              "B": "int getValue(float x){…};",
              "C": "int getValue(double t){…};",
              "D": "int getValue(double x, double y){…};",
              "answer": "C",
              "yourAnswer": "A"
            },
            "3": {
              "id": 3,
              "problem": "以下关于多态的描述中错误的是（ ）。",
              "A": "重载和重写都是多态的表现形式",
              "B": "多态性分为动态多态性(动态绑定)和静态多态性两种",
              "C": "多态性可以加快代码的运行速度",
              "D": "多态性是面向对象的核心特征之一",
              "answer": "C",
              "yourAnswer": "A"
            },
            "4": {
              "id": 4,
              "problem": "对于私有构造方法，以下说法正确的是（ ）。",
              "A": "构造方法如果被限定为private则会产生编译错误",
              "B": "不能通过私有构造方法产生类的对象",
              "C": "私有构造方法不能在类外通过new调用创建对象",
              "D": "具有私有构造方法的类不能被继承",
              "answer": "C",
              "yourAnswer": "A"
            },
            "5": {
              "id": 5,
              "problem": "一个类要实现多个接口，用什么关键字?",
              "A": "extends",
              "B": "implements",
              "C": "instanceof",
              "D": "import",
              "answer": "B",
              "yourAnswer": "A"
            },
            "6": {
              "id": 6,
              "problem": "下列哪个是合法的Java标识符？( )",
              "A": "Tree\u0026Glasses",
              "B": "FirstJavaApplet",
              "C": "*theLastOne",
              "D": "273.5",
              "answer": "B",
              "yourAnswer": "A"
            },
            "7": {
              "id": 7,
              "problem": "java中所有类的父类是（）？",
              "A": "object",
              "B": "Father",
              "C": "Lang",
              "D": "Exception",
              "answer": "A",
              "yourAnswer": "A"
            },
            "8": {
              "id": 8,
              "problem": "下面选项中关于 abstract 的使用正确的是( )。",
              "A": "private abstract void blood();",
              "B": "abstract final void blood ();",
              "C": "static abstract void blood ();",
              "D": "public abstract void blood ();",
              "answer": "D",
              "yourAnswer": "A"
            },
            "9": {
              "id": 9,
              "problem": "下列关于抽象方法的描述中，错误的是（ ）。",
              "A": "抽象方法声明只需给出方法头，不能写方法体，直接以分号结束",
              "B": "所有的方法都可以声明为抽象方法",
              "C": "构造方法不能声明为抽象方法",
              "D": "声明抽象方法使用关键字abstract修饰",
              "answer": "B",
              "yourAnswer": "A"
            },
            "10": {
              "id": 10,
              "problem": "下列哪个是合法的Java标识符？( )",
              "A": "Tree\u0026Glasses",
              "B": "FirstJavaApplet",
              "C": "*theLastOne",
              "D": "273.5",
              "answer": "B",
              "yourAnswer": "A"
            },
            "11": {
              "id": 11,
              "problem": "以下不是面向对象特征的是（ ）。",
              "A": "继承",
              "B": "代码复制",
              "C": "封装",
              "D": "多态",
              "answer": "B",
              "yourAnswer": "A"
            },
            "12": {
              "id": 12,
              "problem": "下列关于打包的描述中，错误的是（ ）。",
              "A": "一个源文件中最多包含一条package语句，且必须是第一条语句",
              "B": "一个源文件中定义的类的字节码可以存放于不同的包中",
              "C": "若源文件中没有包含package语句，则类的字节码被放入无名包中",
              "D": "不在一个源文件中定义的子类和父类可以位于不同包中",
              "answer": "B",
              "yourAnswer": "A"
            },
            "13": {
              "id": 13,
              "problem": "下列关于打包的描述中，错误的是（ ）。",
              "A": "一个源文件中最多包含一条package语句，且必须是第一条语句",
              "B": "一个源文件中定义的类的字节码可以存放于不同的包中",
              "C": "若源文件中没有包含package语句，则类的字节码被放入无名包中",
              "D": "不在一个源文件中定义的子类和父类可以位于不同包中",
              "answer": "B",
              "yourAnswer": "A"
            },
            "14": {
              "id": 14,
              "problem": "下列关于包的描述中错误的是（ ）",
              "A": "使用包的原因之一是避免类名重复",
              "B": "包是由.class文件组成的一个集合，是一个文件夹",
              "C": "功能相同或者相关的类一般组织在一个包中",
              "D": "包只能定义一层，即包中不能再有包",
              "answer": "D",
              "yourAnswer": "A"
            },
            "15": {
              "id": 15,
              "problem": "一个类可同时定义许多同名的方法，这些方法的形式参数个数、类型或顺序各不相同，传回的值也可以不相同，这种特性称为（ ）。",
              "A": "继承",
              "B": "重写",
              "C": "重载",
              "D": "封装",
              "answer": "C",
              "yourAnswer": "A"
            },
            "16": {
              "id": 16,
              "problem": "以下关于多态的描述中错误的是（ ）。",
              "A": "重载和重写都是多态的表现形式",
              "B": "多态性分为动态多态性(动态绑定)和静态多态性两种",
              "C": "多态性可以加快代码的运行速度",
              "D": "多态性是面向对象的核心特征之一",
              "answer": "C",
              "yourAnswer": "A"
            },
            "17": {
              "id": 17,
              "problem": "java中所有类的父类是（）？",
              "A": "object",
              "B": "Father",
              "C": "Lang",
              "D": "Exception",
              "answer": "A",
              "yourAnswer": "A"
            },
            "18": {
              "id": 18,
              "problem": "下列哪个是合法的Java标识符？( )",
              "A": "Tree\u0026Glasses",
              "B": "FirstJavaApplet",
              "C": "*theLastOne",
              "D": "273.5",
              "answer": "B",
              "yourAnswer": "A"
            },
            "19": {
              "id": 19,
              "problem": "如果类中成员的定义没有用访问权限修饰符，则该成员不能被（ ）访问。",
              "A": "同一个包中子类",
              "B": "子类",
              "C": "同一个包中其他类",
              "D": "其他包中所有类",
              "answer": "D",
              "yourAnswer": "A"
            },
            "20": {
              "id": 20,
              "problem": "变量命名规范说法正确的是( )",
              "A": "不同类型的变量，可以起相同的名字；",
              "B": "变量由字母、下划线、数字、$符号随意组成；",
              "C": "变量不能以数字作为开头；",
              "D": "A和a在java中是同一个变量；",
              "answer": "A",
              "yourAnswer": "A"
            }
          }
        },
        "Java多态": {
          "name": "Java多态",
          "resource": "src\\pages\\Java多态",
          "learned": false,
          "date": "Dec 7, 2020, 1:49:59 PM",
          "integerSelectProblemHashMap": {
            "1": {
              "id": 1,
              "problem": "下列关于包的描述中错误的是（ ）",
              "A": "使用包的原因之一是避免类名重复",
              "B": "包是由.class文件组成的一个集合，是一个文件夹",
              "C": "功能相同或者相关的类一般组织在一个包中",
              "D": "包只能定义一层，即包中不能再有包",
              "answer": "D",
              "yourAnswer": "A"
            },
            "2": {
              "id": 2,
              "problem": "Java中( )",
              "A": "一个子类可以有多个父类，一个父类也可以有多个子类",
              "B": "一个子类可以有多个父类，但一个父类只可以有一个子类",
              "C": "一个子类可以有一个父类，但一个父类可以有多个子类",
              "D": "上述说法都不对",
              "answer": "C",
              "yourAnswer": "A"
            },
            "3": {
              "id": 3,
              "problem": "对于私有构造方法，以下说法正确的是（ ）。",
              "A": "构造方法如果被限定为private则会产生编译错误",
              "B": "不能通过私有构造方法产生类的对象",
              "C": "私有构造方法不能在类外通过new调用创建对象",
              "D": "具有私有构造方法的类不能被继承",
              "answer": "C",
              "yourAnswer": "A"
            },
            "4": {
              "id": 4,
              "problem": "欲构造ArrayList类得一个实例，此类继承了List接口，下列哪个方法是正确的：",
              "A": "ArrayList myList \u003d new Object();",
              "B": "List myList \u003d new ArrayList();",
              "C": "ArraylList myList \u003d new List();",
              "D": "List myList \u003d new List();",
              "answer": "B",
              "yourAnswer": "A"
            },
            "5": {
              "id": 5,
              "problem": "下列关于包的描述中错误的是（ ）",
              "A": "使用包的原因之一是避免类名重复",
              "B": "包是由.class文件组成的一个集合，是一个文件夹",
              "C": "功能相同或者相关的类一般组织在一个包中",
              "D": "包只能定义一层，即包中不能再有包",
              "answer": "D",
              "yourAnswer": "A"
            },
            "6": {
              "id": 6,
              "problem": "下列哪个是合法的Java标识符？( )",
              "A": "Tree\u0026Glasses",
              "B": "FirstJavaApplet",
              "C": "*theLastOne",
              "D": "273.5",
              "answer": "B",
              "yourAnswer": "A"
            },
            "7": {
              "id": 7,
              "problem": "若A是抽象类，B是其子类且A和B都有默认构造方法，则以下语句非法的是（ ）。",
              "A": "A a;",
              "B": "A a \u003d new A();",
              "C": "A a[] \u003d new A[4];",
              "D": "A a \u003d new B();",
              "answer": "B",
              "yourAnswer": "A"
            },
            "8": {
              "id": 8,
              "problem": "表达式(11+3*8)/4%3的值是( )",
              "A": "31",
              "B": "0",
              "C": "1",
              "D": "2",
              "answer": "D",
              "yourAnswer": "A"
            },
            "9": {
              "id": 9,
              "problem": "Java的核心包中，提供编程应用的基本类包是（ ）",
              "A": "java.util",
              "B": "java.lang",
              "C": "java.applet",
              "D": "java.rmi",
              "answer": "B",
              "yourAnswer": "A"
            },
            "10": {
              "id": 10,
              "problem": "变量命名规范说法正确的是( )",
              "A": "不同类型的变量，可以起相同的名字；",
              "B": "变量由字母、下划线、数字、$符号随意组成；",
              "C": "变量不能以数字作为开头；",
              "D": "A和a在java中是同一个变量；",
              "answer": "A",
              "yourAnswer": "A"
            },
            "11": {
              "id": 11,
              "problem": "以下关于多态的描述中错误的是（ ）。",
              "A": "重载和重写都是多态的表现形式",
              "B": "多态性分为动态多态性(动态绑定)和静态多态性两种",
              "C": "多态性可以加快代码的运行速度",
              "D": "多态性是面向对象的核心特征之一",
              "answer": "C",
              "yourAnswer": "A"
            },
            "12": {
              "id": 12,
              "problem": "下列关于构造方法的叙述中，错误的是( )",
              "A": "Java语言规定构造方法名与类名必须相同",
              "B": "Java语言规定构造方法没有返回值，但不用void声明",
              "C": "Java语言规定构造方法不可以重载",
              "D": "Java语言规定构造方法只能通过new自动调用",
              "answer": "C",
              "yourAnswer": "A"
            },
            "13": {
              "id": 13,
              "problem": "如果类中成员的定义没有用访问权限修饰符，则该成员不能被（ ）访问。",
              "A": "同一个包中子类",
              "B": "子类",
              "C": "同一个包中其他类",
              "D": "其他包中所有类",
              "answer": "D",
              "yourAnswer": "A"
            },
            "14": {
              "id": 14,
              "problem": "已知A类具有以下四个成员方法，a是A类的对象，则a.fun(1, 3.14F)调用的是（ ）。",
              "A": "public void fun(int a, double b){…}",
              "B": "public int fun(double a, double b){…}",
              "C": "public void fun(float a, float b){…}",
              "D": "public float fun(int a, float b){…}",
              "answer": "D",
              "yourAnswer": "A"
            },
            "15": {
              "id": 15,
              "problem": "有一段java 应用程序，它的主类名是a1，那么保存它的源文件名可以是( )",
              "A": "a1.java",
              "B": "a1.class",
              "C": "a1",
              "D": "都对",
              "answer": "A",
              "yourAnswer": "A"
            },
            "16": {
              "id": 16,
              "problem": "下列修饰符中与访问控制无关的是（）",
              "A": "private　",
              "B": "public",
              "C": "protected",
              "D": "default",
              "answer": "D",
              "yourAnswer": "A"
            },
            "17": {
              "id": 17,
              "problem": "不是合法标识符的是（）",
              "A": "BigO1Long$223",
              "B": "Utfint",
              "C": "$12s",
              "D": "3d",
              "answer": "D",
              "yourAnswer": "A"
            },
            "18": {
              "id": 18,
              "problem": "以下关于重载的说法错误的是（ ）。",
              "A": "重载的方法只要定义正确，调用时就不会有歧义性。",
              "B": "重载的方法通常实现相似的功能",
              "C": "重载的方法可以互相调用，提高代码复用",
              "D": "重载是多态的一种表现形式",
              "answer": "A",
              "yourAnswer": "A"
            },
            "19": {
              "id": 19,
              "problem": "类中存在一个方法int getValue(double x){…}，以下不能与这个方法重载的是（ ）。",
              "A": "int getValue(int x){…};",
              "B": "int getValue(float x){…};",
              "C": "int getValue(double t){…};",
              "D": "int getValue(double x, double y){…};",
              "answer": "C",
              "yourAnswer": "A"
            },
            "20": {
              "id": 20,
              "problem": "已知A类具有以下四个成员方法，a是A类的对象，则a.fun(1, 3.14F)调用的是（ ）。",
              "A": "public void fun(int a, double b){…}",
              "B": "public int fun(double a, double b){…}",
              "C": "public void fun(float a, float b){…}",
              "D": "public float fun(int a, float b){…}",
              "answer": "D",
              "yourAnswer": "A"
            }
          }
        },
        "Java封装": {
          "name": "Java封装",
          "resource": "src\\pages\\Java封装",
          "learned": false,
          "date": "Dec 7, 2020, 1:49:59 PM",
          "integerSelectProblemHashMap": {
            "1": {
              "id": 1,
              "problem": "InputStream类的作用就是将文件中的数据读入到内存中，该类中的哪个方法可以关闭文件输入流对象？",
              "A": "int read()",
              "B": "void close()",
              "C": "int available()",
              "D": "int read(byte[] b)",
              "answer": "B",
              "yourAnswer": "A"
            },
            "2": {
              "id": 2,
              "problem": "下列修饰符中与访问控制无关的是（）",
              "A": "private　",
              "B": "public",
              "C": "protected",
              "D": "default",
              "answer": "D",
              "yourAnswer": "A"
            },
            "3": {
              "id": 3,
              "problem": "欲构造ArrayList类得一个实例，此类继承了List接口，下列哪个方法是正确的：",
              "A": "ArrayList myList \u003d new Object();",
              "B": "List myList \u003d new ArrayList();",
              "C": "ArraylList myList \u003d new List();",
              "D": "List myList \u003d new List();",
              "answer": "B",
              "yourAnswer": "A"
            },
            "4": {
              "id": 4,
              "problem": "以下程序的结果是（ ）。class Base {     protected void fun(){         System.out.println(0);     } } class Derived extends Base {     protected void fun(){         System.out.println(1);     } } public class Test {     public static void main(String[] args) {         Base b1 \u003d new Derived();         b1.fun();     } }",
              "A": "运行错误",
              "B": "编译错误",
              "C": "0",
              "D": "1",
              "answer": "D",
              "yourAnswer": "A"
            },
            "5": {
              "id": 5,
              "problem": "Java的核心包中，提供编程应用的基本类包是（ ）",
              "A": "java.util",
              "B": "java.lang",
              "C": "java.applet",
              "D": "java.rmi",
              "answer": "B",
              "yourAnswer": "A"
            },
            "6": {
              "id": 6,
              "problem": "一个类可同时定义许多同名的方法，这些方法的形式参数个数、类型或顺序各不相同，传回的值也可以不相同，这种特性称为（ ）。",
              "A": "继承",
              "B": "重写",
              "C": "重载",
              "D": "封装",
              "answer": "C",
              "yourAnswer": "A"
            },
            "7": {
              "id": 7,
              "problem": "若A是抽象类，B是其子类且A和B都有默认构造方法，则以下语句非法的是（ ）。",
              "A": "A a;",
              "B": "A a \u003d new A();",
              "C": "A a[] \u003d new A[4];",
              "D": "A a \u003d new B();",
              "answer": "B",
              "yourAnswer": "A"
            },
            "8": {
              "id": 8,
              "problem": "一个类可同时定义许多同名的方法，这些方法的形式参数个数、类型或顺序各不相同，传回的值也可以不相同，这种特性称为（ ）。",
              "A": "继承",
              "B": "重写",
              "C": "重载",
              "D": "封装",
              "answer": "C",
              "yourAnswer": "A"
            },
            "9": {
              "id": 9,
              "problem": "以下标识符中哪项是不合法的( )",
              "A": "int",
              "B": "$double",
              "C": "hello",
              "D": "BigMeaninglessName",
              "answer": "A",
              "yourAnswer": "A"
            },
            "10": {
              "id": 10,
              "problem": "有一段java 应用程序，它的主类名是a1，那么保存它的源文件名可以是( )",
              "A": "a1.java",
              "B": "a1.class",
              "C": "a1",
              "D": "都对",
              "answer": "A",
              "yourAnswer": "A"
            },
            "11": {
              "id": 11,
              "problem": "下列关于包的描述中错误的是（ ）",
              "A": "使用包的原因之一是避免类名重复",
              "B": "包是由.class文件组成的一个集合，是一个文件夹",
              "C": "功能相同或者相关的类一般组织在一个包中",
              "D": "包只能定义一层，即包中不能再有包",
              "answer": "D",
              "yourAnswer": "A"
            },
            "12": {
              "id": 12,
              "problem": "下列哪个是合法的Java标识符？( )",
              "A": "Tree\u0026Glasses",
              "B": "FirstJavaApplet",
              "C": "*theLastOne",
              "D": "273.5",
              "answer": "B",
              "yourAnswer": "A"
            },
            "13": {
              "id": 13,
              "problem": "已知A类具有以下四个成员方法，a是A类的对象，则a.fun(1, 3.14F)调用的是（ ）。",
              "A": "public void fun(int a, double b){…}",
              "B": "public int fun(double a, double b){…}",
              "C": "public void fun(float a, float b){…}",
              "D": "public float fun(int a, float b){…}",
              "answer": "D",
              "yourAnswer": "A"
            },
            "14": {
              "id": 14,
              "problem": "在创建对象时必须( )",
              "A": "先声明对象，然后才能使用对象",
              "B": "先声明对象，为对象分配内存空间，然后才能使用对象",
              "C": "先声明对象，为对象分配内存空间，对对象初始化，然后才能使用对象",
              "D": "上述说法都对",
              "answer": "C",
              "yourAnswer": "A"
            },
            "15": {
              "id": 15,
              "problem": "InputStream类的作用就是将文件中的数据读入到内存中，该类中的哪个方法可以关闭文件输入流对象？",
              "A": "int read()",
              "B": "void close()",
              "C": "int available()",
              "D": "int read(byte[] b)",
              "answer": "B",
              "yourAnswer": "A"
            },
            "16": {
              "id": 16,
              "problem": "以下关于继承的叙述正确的是( )",
              "A": "在Java中类只允许单一继承",
              "B": "在Java中一个类只能实现一个接口",
              "C": "在Java中一个类不能同时继承一个类和实现一个接口",
              "D": "在Java中接口只允许单一继承",
              "answer": "A",
              "yourAnswer": "A"
            },
            "17": {
              "id": 17,
              "problem": "如果类中成员的定义没有用访问权限修饰符，则该成员不能被（ ）访问。",
              "A": "同一个包中子类",
              "B": "子类",
              "C": "同一个包中其他类",
              "D": "其他包中所有类",
              "answer": "D",
              "yourAnswer": "A"
            },
            "18": {
              "id": 18,
              "problem": "java中所有类的父类是（）？",
              "A": "object",
              "B": "Father",
              "C": "Lang",
              "D": "Exception",
              "answer": "A",
              "yourAnswer": "A"
            },
            "19": {
              "id": 19,
              "problem": "如果希望类中成员即使被子类继承也只能通过父类方法间接访问，则应该使用修饰符（）",
              "A": "public",
              "B": "protected",
              "C": "不写",
              "D": "private",
              "answer": "D",
              "yourAnswer": "A"
            },
            "20": {
              "id": 20,
              "problem": "不是合法标识符的是（）",
              "A": "BigO1Long$223",
              "B": "Utfint",
              "C": "$12s",
              "D": "3d",
              "answer": "D",
              "yourAnswer": "A"
            }
          }
        },
        "Java抽象类": {
          "name": "Java抽象类",
          "resource": "src\\pages\\Java抽象类",
          "learned": false,
          "date": "Dec 7, 2020, 1:49:59 PM",
          "integerSelectProblemHashMap": {
            "1": {
              "id": 1,
              "problem": "下列说法正确的有（）?",
              "A": "不需要定义类，就能创建对象",
              "B": "对象中必须有属性和方法",
              "C": "属性必须是简单变量",
              "D": "属性可以是简单变量，也可以是一个对象",
              "answer": "D",
              "yourAnswer": "A"
            },
            "2": {
              "id": 2,
              "problem": "下列哪个是合法的Java标识符？( )",
              "A": "Tree\u0026Glasses",
              "B": "FirstJavaApplet",
              "C": "*theLastOne",
              "D": "273.5",
              "answer": "B",
              "yourAnswer": "A"
            },
            "3": {
              "id": 3,
              "problem": "类中存在一个方法int getValue(double x){…}，以下不能与这个方法重载的是（ ）。",
              "A": "int getValue(int x){…};",
              "B": "int getValue(float x){…};",
              "C": "int getValue(double t){…};",
              "D": "int getValue(double x, double y){…};",
              "answer": "C",
              "yourAnswer": "A"
            },
            "4": {
              "id": 4,
              "problem": "以下关于多态的描述中错误的是（ ）。",
              "A": "重载和重写都是多态的表现形式",
              "B": "多态性分为动态多态性(动态绑定)和静态多态性两种",
              "C": "多态性可以加快代码的运行速度",
              "D": "多态性是面向对象的核心特征之一",
              "answer": "C",
              "yourAnswer": "A"
            },
            "5": {
              "id": 5,
              "problem": "有一段java 应用程序，它的主类名是a1，那么保存它的源文件名可以是( )",
              "A": "a1.java",
              "B": "a1.class",
              "C": "a1",
              "D": "都对",
              "answer": "A",
              "yourAnswer": "A"
            },
            "6": {
              "id": 6,
              "problem": "下面哪一个循环会导致死循环？( )",
              "A": "for (int k \u003d 0; k \u003c 0; k++)",
              "B": "for (int k \u003d 10; k \u003e 0; k--)",
              "C": "for (int k \u003d 0; k \u003c 10; k--)",
              "D": " for (int k \u003d 0; k \u003e 10; k++)",
              "answer": "C",
              "yourAnswer": "A"
            },
            "7": {
              "id": 7,
              "problem": "以下程序的输出结果是（ ）。abstract class A {     public abstract void fun();     public void fun(int a) {         System.out.println(a);     } } class TestA extends A {     public static void main(String[] args) {         TestA ta \u003d new TestA();         ta.fun(1);     } }",
              "A": "1",
              "B": "编译错误",
              "C": "运行错误",
              "D": "无输出",
              "answer": "B",
              "yourAnswer": "A"
            },
            "8": {
              "id": 8,
              "problem": "如果希望类中成员即使被子类继承也只能通过父类方法间接访问，则应该使用修饰符（）",
              "A": "public",
              "B": "protected",
              "C": "不写",
              "D": "private",
              "answer": "D",
              "yourAnswer": "A"
            },
            "9": {
              "id": 9,
              "problem": "下列关于包的描述中错误的是（ ）",
              "A": "使用包的原因之一是避免类名重复",
              "B": "包是由.class文件组成的一个集合，是一个文件夹",
              "C": "功能相同或者相关的类一般组织在一个包中",
              "D": "包只能定义一层，即包中不能再有包",
              "answer": "D",
              "yourAnswer": "A"
            },
            "10": {
              "id": 10,
              "problem": "如果类中成员的定义没有用访问权限修饰符，则该成员不能被（ ）访问。",
              "A": "同一个包中子类",
              "B": "子类",
              "C": "同一个包中其他类",
              "D": "其他包中所有类",
              "answer": "D",
              "yourAnswer": "A"
            },
            "11": {
              "id": 11,
              "problem": "一个类可同时定义许多同名的方法，这些方法的形式参数个数、类型或顺序各不相同，传回的值也可以不相同，这种特性称为（ ）。",
              "A": "继承",
              "B": "重写",
              "C": "重载",
              "D": "封装",
              "answer": "C",
              "yourAnswer": "A"
            },
            "12": {
              "id": 12,
              "problem": "在Java中用什么关键字修饰的方法可以直接通过类名来调用？( )",
              "A": "static",
              "B": "final",
              "C": "private",
              "D": "void",
              "answer": "A",
              "yourAnswer": "A"
            },
            "13": {
              "id": 13,
              "problem": "以下关于重载的说法错误的是（ ）。",
              "A": "重载的方法只要定义正确，调用时就不会有歧义性。",
              "B": "重载的方法通常实现相似的功能",
              "C": "重载的方法可以互相调用，提高代码复用",
              "D": "重载是多态的一种表现形式",
              "answer": "A",
              "yourAnswer": "A"
            },
            "14": {
              "id": 14,
              "problem": "下列说法正确的有（）?",
              "A": "不需要定义类，就能创建对象",
              "B": "对象中必须有属性和方法",
              "C": "属性必须是简单变量",
              "D": "属性可以是简单变量，也可以是一个对象",
              "answer": "D",
              "yourAnswer": "A"
            },
            "15": {
              "id": 15,
              "problem": "下列关于包的描述中错误的是（ ）",
              "A": "使用包的原因之一是避免类名重复",
              "B": "包是由.class文件组成的一个集合，是一个文件夹",
              "C": "功能相同或者相关的类一般组织在一个包中",
              "D": "包只能定义一层，即包中不能再有包",
              "answer": "D",
              "yourAnswer": "A"
            },
            "16": {
              "id": 16,
              "problem": "以下关于继承的叙述正确的是( )",
              "A": "在Java中类只允许单一继承",
              "B": "在Java中一个类只能实现一个接口",
              "C": "在Java中一个类不能同时继承一个类和实现一个接口",
              "D": "在Java中接口只允许单一继承",
              "answer": "A",
              "yourAnswer": "A"
            },
            "17": {
              "id": 17,
              "problem": "欲构造ArrayList类得一个实例，此类继承了List接口，下列哪个方法是正确的：",
              "A": "ArrayList myList \u003d new Object();",
              "B": "List myList \u003d new ArrayList();",
              "C": "ArraylList myList \u003d new List();",
              "D": "List myList \u003d new List();",
              "answer": "B",
              "yourAnswer": "A"
            },
            "18": {
              "id": 18,
              "problem": "以下标识符中哪项是不合法的( )",
              "A": "int",
              "B": "$double",
              "C": "hello",
              "D": "BigMeaninglessName",
              "answer": "A",
              "yourAnswer": "A"
            },
            "19": {
              "id": 19,
              "problem": "不是合法标识符的是（）",
              "A": "BigO1Long$223",
              "B": "Utfint",
              "C": "$12s",
              "D": "3d",
              "answer": "D",
              "yourAnswer": "A"
            },
            "20": {
              "id": 20,
              "problem": "下列关于抽象方法的描述中，错误的是（ ）。",
              "A": "抽象方法声明只需给出方法头，不能写方法体，直接以分号结束",
              "B": "所有的方法都可以声明为抽象方法",
              "C": "构造方法不能声明为抽象方法",
              "D": "声明抽象方法使用关键字abstract修饰",
              "answer": "B",
              "yourAnswer": "A"
            }
          }
        },
        "Java枚举": {
          "name": "Java枚举",
          "resource": "src\\pages\\Java枚举",
          "learned": false,
          "date": "Dec 7, 2020, 1:49:59 PM",
          "integerSelectProblemHashMap": {
            "1": {
              "id": 1,
              "problem": "下列不是重载方法的特征的是（ ）。",
              "A": "参数个数不同",
              "B": "返回值类型不同",
              "C": "参数类型不同",
              "D": "方法名相同",
              "answer": "B",
              "yourAnswer": "A"
            },
            "2": {
              "id": 2,
              "problem": "下列哪一个关键字用于实现接口来定义类？( )",
              "A": "extends",
              "B": "implements",
              "C": "abstract",
              "D": "interface",
              "answer": "B",
              "yourAnswer": "A"
            },
            "3": {
              "id": 3,
              "problem": "不是合法标识符的是（）",
              "A": "Javaworld",
              "B": "_sum",
              "C": "2Java Program",
              "D": "$abc",
              "answer": "C",
              "yourAnswer": "A"
            },
            "4": {
              "id": 4,
              "problem": "下面选项中关于 abstract 的使用正确的是( )。",
              "A": "private abstract void blood();",
              "B": "abstract final void blood ();",
              "C": "static abstract void blood ();",
              "D": "public abstract void blood ();",
              "answer": "D",
              "yourAnswer": "A"
            },
            "5": {
              "id": 5,
              "problem": "对于私有构造方法，以下说法正确的是（ ）。",
              "A": "构造方法如果被限定为private则会产生编译错误",
              "B": "不能通过私有构造方法产生类的对象",
              "C": "私有构造方法不能在类外通过new调用创建对象",
              "D": "具有私有构造方法的类不能被继承",
              "answer": "C",
              "yourAnswer": "A"
            },
            "6": {
              "id": 6,
              "problem": "以下程序的结果是（ ）。class Base {     protected void fun(){         System.out.println(0);     } } class Derived extends Base {     protected void fun(){         System.out.println(1);     } } public class Test {     public static void main(String[] args) {         Base b1 \u003d new Derived();         b1.fun();     } }",
              "A": "运行错误",
              "B": "编译错误",
              "C": "0",
              "D": "1",
              "answer": "D",
              "yourAnswer": "A"
            },
            "7": {
              "id": 7,
              "problem": "下列关于抽象类的描述中，错误的是（ ）。",
              "A": "抽象类中可以包含抽象方法，也可以不包含抽象方法",
              "B": "抽象类不能实例化，即使抽象类中没有声明抽象方法，也不能实例化",
              "C": "不能声明抽象类的变量(对象)",
              "D": "包含抽象方法的类，必须要声明为抽象类",
              "answer": "C",
              "yourAnswer": "A"
            },
            "8": {
              "id": 8,
              "problem": "如果类中成员的定义没有用访问权限修饰符，则该成员不能被（ ）访问。",
              "A": "同一个包中子类",
              "B": "子类",
              "C": "同一个包中其他类",
              "D": "其他包中所有类",
              "answer": "D",
              "yourAnswer": "A"
            },
            "9": {
              "id": 9,
              "problem": "不是合法标识符的是（）",
              "A": "Javaworld",
              "B": "_sum",
              "C": "2Java Program",
              "D": "$abc",
              "answer": "C",
              "yourAnswer": "A"
            },
            "10": {
              "id": 10,
              "problem": "以下没有体现出封装性的是（ ）。",
              "A": "将类的成员用访问权限修饰符加以访问控制",
              "B": "提供成员方法操作成员变量",
              "C": "将类的全部成员都设定为public权限",
              "D": "将类按照不同的包组织管理",
              "answer": "C",
              "yourAnswer": "A"
            },
            "11": {
              "id": 11,
              "problem": "Java的核心包中，提供编程应用的基本类包是（ ）",
              "A": "java.util",
              "B": "java.lang",
              "C": "java.applet",
              "D": "java.rmi",
              "answer": "B",
              "yourAnswer": "A"
            },
            "12": {
              "id": 12,
              "problem": "以下程序的输出结果是（ ）。abstract class A {     public abstract void fun();     public void fun(int a) {         System.out.println(a);     } } class TestA extends A {     public static void main(String[] args) {         TestA ta \u003d new TestA();         ta.fun(1);     } }",
              "A": "1",
              "B": "编译错误",
              "C": "运行错误",
              "D": "无输出",
              "answer": "B",
              "yourAnswer": "A"
            },
            "13": {
              "id": 13,
              "problem": "以下抽象类定义中合法的是（ ）。",
              "A": "abstract Animal{     abstract void growl(); }",
              "B": "class abstract Animal{     abstract void growl(); }",
              "C": "abstract class Animal {     abstract void growl(); } ",
              "D": "abstract class Animal {     abstract void growl() {     } }",
              "answer": "C",
              "yourAnswer": "A"
            },
            "14": {
              "id": 14,
              "problem": "（ ）是Java语言的关键字。",
              "A": "public",
              "B": "static",
              "C": "void",
              "D": "以上都是",
              "answer": "D",
              "yourAnswer": "A"
            },
            "15": {
              "id": 15,
              "problem": "下列说法正确的有（）?",
              "A": "不需要定义类，就能创建对象",
              "B": "对象中必须有属性和方法",
              "C": "属性必须是简单变量",
              "D": "属性可以是简单变量，也可以是一个对象",
              "answer": "D",
              "yourAnswer": "A"
            },
            "16": {
              "id": 16,
              "problem": "下列修饰符中与访问控制无关的是（）",
              "A": "private　",
              "B": "public",
              "C": "protected",
              "D": "default",
              "answer": "D",
              "yourAnswer": "A"
            },
            "17": {
              "id": 17,
              "problem": "一个类要实现接口的功能，可以实现几个方法？",
              "A": "0",
              "B": "1",
              "C": "2",
              "D": "全部",
              "answer": "D",
              "yourAnswer": "A"
            },
            "18": {
              "id": 18,
              "problem": "Java的核心包中，提供编程应用的基本类包是（ ）",
              "A": "java.util",
              "B": "java.lang",
              "C": "java.applet",
              "D": "java.rmi",
              "answer": "B",
              "yourAnswer": "A"
            },
            "19": {
              "id": 19,
              "problem": "不允许作为类及类的成员的访问控制符的是（）？",
              "A": "public",
              "B": "private",
              "C": "protected",
              "D": "static",
              "answer": "D",
              "yourAnswer": "A"
            },
            "20": {
              "id": 20,
              "problem": "java中所有类的父类是（）？",
              "A": "object",
              "B": "Father",
              "C": "Lang",
              "D": "Exception",
              "answer": "A",
              "yourAnswer": "A"
            }
          }
        },
        "Java继承": {
          "name": "Java继承",
          "resource": "src\\pages\\Java继承",
          "learned": false,
          "date": "Dec 7, 2020, 1:49:59 PM",
          "integerSelectProblemHashMap": {
            "1": {
              "id": 1,
              "problem": "以下关于多态的描述中错误的是（ ）。",
              "A": "重载和重写都是多态的表现形式",
              "B": "多态性分为动态多态性(动态绑定)和静态多态性两种",
              "C": "多态性可以加快代码的运行速度",
              "D": "多态性是面向对象的核心特征之一",
              "answer": "C",
              "yourAnswer": "A"
            },
            "2": {
              "id": 2,
              "problem": "如果希望类中成员即使被子类继承也只能通过父类方法间接访问，则应该使用修饰符（）",
              "A": "public",
              "B": "protected",
              "C": "不写",
              "D": "private",
              "answer": "D",
              "yourAnswer": "A"
            },
            "3": {
              "id": 3,
              "problem": "以下关于继承的叙述正确的是( )",
              "A": "在Java中类只允许单一继承",
              "B": "在Java中一个类只能实现一个接口",
              "C": "在Java中一个类不能同时继承一个类和实现一个接口",
              "D": "在Java中接口只允许单一继承",
              "answer": "A",
              "yourAnswer": "A"
            },
            "4": {
              "id": 4,
              "problem": "如果类中成员的定义没有用访问权限修饰符，则该成员不能被（ ）访问。",
              "A": "同一个包中子类",
              "B": "子类",
              "C": "同一个包中其他类",
              "D": "其他包中所有类",
              "answer": "D",
              "yourAnswer": "A"
            },
            "5": {
              "id": 5,
              "problem": "下列哪个是合法的Java标识符？( )",
              "A": "Tree\u0026Glasses",
              "B": "FirstJavaApplet",
              "C": "*theLastOne",
              "D": "273.5",
              "answer": "B",
              "yourAnswer": "A"
            },
            "6": {
              "id": 6,
              "problem": "以下关于构造函数的描述错误的是( )",
              "A": "构造函数的返回类型只能是void型",
              "B": "构造函数是类的一种特殊函数，它的方法名必须与类名相同。",
              "C": "构造函数的主要作用是完成对类的对象的初始化工作。",
              "D": "一般在创建新对象时，系统会自动调用构造函数。",
              "answer": "A",
              "yourAnswer": "A"
            },
            "7": {
              "id": 7,
              "problem": "所有Java类都直接或间接继承了哪个类？",
              "A": "String",
              "B": "Object",
              "C": "Interesting",
              "D": "Hero",
              "answer": "B",
              "yourAnswer": "A"
            },
            "8": {
              "id": 8,
              "problem": "如果类中成员的定义没有用访问权限修饰符，则该成员不能被（ ）访问。",
              "A": "同一个包中子类",
              "B": "子类",
              "C": "同一个包中其他类",
              "D": "其他包中所有类",
              "answer": "D",
              "yourAnswer": "A"
            },
            "9": {
              "id": 9,
              "problem": "下面哪个是applet传递参数的正确方式？（ ）",
              "A": "\u003capplet code\u003dTest.class age\u003d33 width\u003d1 height\u003d1\u003e",
              "B": "\u003cparam name\u003dage value\u003d33\u003e",
              "C": "\u003capplet code\u003dTest.class name\u003dage value\u003d33 width\u003d1 height\u003d1\u003e",
              "D": "\u003capplet Test 33\u003e",
              "answer": "B",
              "yourAnswer": "A"
            },
            "10": {
              "id": 10,
              "problem": "Java的核心包中，提供编程应用的基本类包是（ ）",
              "A": "java.util",
              "B": "java.lang",
              "C": "java.applet",
              "D": "java.rmi",
              "answer": "B",
              "yourAnswer": "A"
            },
            "11": {
              "id": 11,
              "problem": "Java的核心包中，提供编程应用的基本类包是（ ）",
              "A": "java.util",
              "B": "java.lang",
              "C": "java.applet",
              "D": "java.rmi",
              "answer": "B",
              "yourAnswer": "A"
            },
            "12": {
              "id": 12,
              "problem": "下列关于构造方法的叙述中，错误的是( )",
              "A": "Java语言规定构造方法名与类名必须相同",
              "B": "Java语言规定构造方法没有返回值，但不用void声明",
              "C": "Java语言规定构造方法不可以重载",
              "D": "Java语言规定构造方法只能通过new自动调用",
              "answer": "C",
              "yourAnswer": "A"
            },
            "13": {
              "id": 13,
              "problem": "以下没有体现出封装性的是（ ）。",
              "A": "将类的成员用访问权限修饰符加以访问控制",
              "B": "提供成员方法操作成员变量",
              "C": "将类的全部成员都设定为public权限",
              "D": "将类按照不同的包组织管理",
              "answer": "C",
              "yourAnswer": "A"
            },
            "14": {
              "id": 14,
              "problem": "下列关于包的描述中错误的是（ ）",
              "A": "使用包的原因之一是避免类名重复",
              "B": "包是由.class文件组成的一个集合，是一个文件夹",
              "C": "功能相同或者相关的类一般组织在一个包中",
              "D": "包只能定义一层，即包中不能再有包",
              "answer": "D",
              "yourAnswer": "A"
            },
            "15": {
              "id": 15,
              "problem": "Java的核心包中，提供编程应用的基本类包是（ ）",
              "A": "java.util",
              "B": "java.lang",
              "C": "java.applet",
              "D": "java.rmi",
              "answer": "B",
              "yourAnswer": "A"
            },
            "16": {
              "id": 16,
              "problem": "所有Java类都直接或间接继承了哪个类？",
              "A": "String",
              "B": "Object",
              "C": "Interesting",
              "D": "Hero",
              "answer": "B",
              "yourAnswer": "A"
            },
            "17": {
              "id": 17,
              "problem": "表达式(11+3*8)/4%3的值是( )",
              "A": "31",
              "B": "0",
              "C": "1",
              "D": "2",
              "answer": "D",
              "yourAnswer": "A"
            },
            "18": {
              "id": 18,
              "problem": "接口中有几个构造方法？",
              "A": "0",
              "B": "1",
              "C": "2",
              "D": "以上都不对",
              "answer": "A",
              "yourAnswer": "A"
            },
            "19": {
              "id": 19,
              "problem": "变量命名规范说法正确的是( )",
              "A": "不同类型的变量，可以起相同的名字；",
              "B": "变量由字母、下划线、数字、$符号随意组成；",
              "C": "变量不能以数字作为开头；",
              "D": "A和a在java中是同一个变量；",
              "answer": "A",
              "yourAnswer": "A"
            },
            "20": {
              "id": 20,
              "problem": "假设现在有一个对象X,有一个属性a.则访问当前属性的方法是（）？",
              "A": "a.x",
              "B": "x.a",
              "C": "A.x",
              "D": "X.a",
              "answer": "D",
              "yourAnswer": "A"
            }
          }
        }
      },
      "integerNewTitleManagerHashMap": {
        "1": {
          "name": "Java继承",
          "resource": "src\\pages\\Java继承",
          "learned": false,
          "date": "Dec 7, 2020, 1:49:59 PM",
          "integerSelectProblemHashMap": {
            "1": {
              "id": 1,
              "problem": "以下关于多态的描述中错误的是（ ）。",
              "A": "重载和重写都是多态的表现形式",
              "B": "多态性分为动态多态性(动态绑定)和静态多态性两种",
              "C": "多态性可以加快代码的运行速度",
              "D": "多态性是面向对象的核心特征之一",
              "answer": "C",
              "yourAnswer": "A"
            },
            "2": {
              "id": 2,
              "problem": "如果希望类中成员即使被子类继承也只能通过父类方法间接访问，则应该使用修饰符（）",
              "A": "public",
              "B": "protected",
              "C": "不写",
              "D": "private",
              "answer": "D",
              "yourAnswer": "A"
            },
            "3": {
              "id": 3,
              "problem": "以下关于继承的叙述正确的是( )",
              "A": "在Java中类只允许单一继承",
              "B": "在Java中一个类只能实现一个接口",
              "C": "在Java中一个类不能同时继承一个类和实现一个接口",
              "D": "在Java中接口只允许单一继承",
              "answer": "A",
              "yourAnswer": "A"
            },
            "4": {
              "id": 4,
              "problem": "如果类中成员的定义没有用访问权限修饰符，则该成员不能被（ ）访问。",
              "A": "同一个包中子类",
              "B": "子类",
              "C": "同一个包中其他类",
              "D": "其他包中所有类",
              "answer": "D",
              "yourAnswer": "A"
            },
            "5": {
              "id": 5,
              "problem": "下列哪个是合法的Java标识符？( )",
              "A": "Tree\u0026Glasses",
              "B": "FirstJavaApplet",
              "C": "*theLastOne",
              "D": "273.5",
              "answer": "B",
              "yourAnswer": "A"
            },
            "6": {
              "id": 6,
              "problem": "以下关于构造函数的描述错误的是( )",
              "A": "构造函数的返回类型只能是void型",
              "B": "构造函数是类的一种特殊函数，它的方法名必须与类名相同。",
              "C": "构造函数的主要作用是完成对类的对象的初始化工作。",
              "D": "一般在创建新对象时，系统会自动调用构造函数。",
              "answer": "A",
              "yourAnswer": "A"
            },
            "7": {
              "id": 7,
              "problem": "所有Java类都直接或间接继承了哪个类？",
              "A": "String",
              "B": "Object",
              "C": "Interesting",
              "D": "Hero",
              "answer": "B",
              "yourAnswer": "A"
            },
            "8": {
              "id": 8,
              "problem": "如果类中成员的定义没有用访问权限修饰符，则该成员不能被（ ）访问。",
              "A": "同一个包中子类",
              "B": "子类",
              "C": "同一个包中其他类",
              "D": "其他包中所有类",
              "answer": "D",
              "yourAnswer": "A"
            },
            "9": {
              "id": 9,
              "problem": "下面哪个是applet传递参数的正确方式？（ ）",
              "A": "\u003capplet code\u003dTest.class age\u003d33 width\u003d1 height\u003d1\u003e",
              "B": "\u003cparam name\u003dage value\u003d33\u003e",
              "C": "\u003capplet code\u003dTest.class name\u003dage value\u003d33 width\u003d1 height\u003d1\u003e",
              "D": "\u003capplet Test 33\u003e",
              "answer": "B",
              "yourAnswer": "A"
            },
            "10": {
              "id": 10,
              "problem": "Java的核心包中，提供编程应用的基本类包是（ ）",
              "A": "java.util",
              "B": "java.lang",
              "C": "java.applet",
              "D": "java.rmi",
              "answer": "B",
              "yourAnswer": "A"
            },
            "11": {
              "id": 11,
              "problem": "Java的核心包中，提供编程应用的基本类包是（ ）",
              "A": "java.util",
              "B": "java.lang",
              "C": "java.applet",
              "D": "java.rmi",
              "answer": "B",
              "yourAnswer": "A"
            },
            "12": {
              "id": 12,
              "problem": "下列关于构造方法的叙述中，错误的是( )",
              "A": "Java语言规定构造方法名与类名必须相同",
              "B": "Java语言规定构造方法没有返回值，但不用void声明",
              "C": "Java语言规定构造方法不可以重载",
              "D": "Java语言规定构造方法只能通过new自动调用",
              "answer": "C",
              "yourAnswer": "A"
            },
            "13": {
              "id": 13,
              "problem": "以下没有体现出封装性的是（ ）。",
              "A": "将类的成员用访问权限修饰符加以访问控制",
              "B": "提供成员方法操作成员变量",
              "C": "将类的全部成员都设定为public权限",
              "D": "将类按照不同的包组织管理",
              "answer": "C",
              "yourAnswer": "A"
            },
            "14": {
              "id": 14,
              "problem": "下列关于包的描述中错误的是（ ）",
              "A": "使用包的原因之一是避免类名重复",
              "B": "包是由.class文件组成的一个集合，是一个文件夹",
              "C": "功能相同或者相关的类一般组织在一个包中",
              "D": "包只能定义一层，即包中不能再有包",
              "answer": "D",
              "yourAnswer": "A"
            },
            "15": {
              "id": 15,
              "problem": "Java的核心包中，提供编程应用的基本类包是（ ）",
              "A": "java.util",
              "B": "java.lang",
              "C": "java.applet",
              "D": "java.rmi",
              "answer": "B",
              "yourAnswer": "A"
            },
            "16": {
              "id": 16,
              "problem": "所有Java类都直接或间接继承了哪个类？",
              "A": "String",
              "B": "Object",
              "C": "Interesting",
              "D": "Hero",
              "answer": "B",
              "yourAnswer": "A"
            },
            "17": {
              "id": 17,
              "problem": "表达式(11+3*8)/4%3的值是( )",
              "A": "31",
              "B": "0",
              "C": "1",
              "D": "2",
              "answer": "D",
              "yourAnswer": "A"
            },
            "18": {
              "id": 18,
              "problem": "接口中有几个构造方法？",
              "A": "0",
              "B": "1",
              "C": "2",
              "D": "以上都不对",
              "answer": "A",
              "yourAnswer": "A"
            },
            "19": {
              "id": 19,
              "problem": "变量命名规范说法正确的是( )",
              "A": "不同类型的变量，可以起相同的名字；",
              "B": "变量由字母、下划线、数字、$符号随意组成；",
              "C": "变量不能以数字作为开头；",
              "D": "A和a在java中是同一个变量；",
              "answer": "A",
              "yourAnswer": "A"
            },
            "20": {
              "id": 20,
              "problem": "假设现在有一个对象X,有一个属性a.则访问当前属性的方法是（）？",
              "A": "a.x",
              "B": "x.a",
              "C": "A.x",
              "D": "X.a",
              "answer": "D",
              "yourAnswer": "A"
            }
          }
        },
        "2": {
          "name": "JavaOverride/Overload",
          "resource": "src\\pages\\JavaOverride/Overload",
          "learned": false,
          "date": "Dec 7, 2020, 1:49:59 PM",
          "integerSelectProblemHashMap": {
            "1": {
              "id": 1,
              "problem": "接口中方法的修饰符默认是？",
              "A": "public",
              "B": "abstract",
              "C": "public abstract",
              "D": "public static final",
              "answer": "C",
              "yourAnswer": "A"
            },
            "2": {
              "id": 2,
              "problem": "类中存在一个方法int getValue(double x){…}，以下不能与这个方法重载的是（ ）。",
              "A": "int getValue(int x){…};",
              "B": "int getValue(float x){…};",
              "C": "int getValue(double t){…};",
              "D": "int getValue(double x, double y){…};",
              "answer": "C",
              "yourAnswer": "A"
            },
            "3": {
              "id": 3,
              "problem": "以下关于多态的描述中错误的是（ ）。",
              "A": "重载和重写都是多态的表现形式",
              "B": "多态性分为动态多态性(动态绑定)和静态多态性两种",
              "C": "多态性可以加快代码的运行速度",
              "D": "多态性是面向对象的核心特征之一",
              "answer": "C",
              "yourAnswer": "A"
            },
            "4": {
              "id": 4,
              "problem": "对于私有构造方法，以下说法正确的是（ ）。",
              "A": "构造方法如果被限定为private则会产生编译错误",
              "B": "不能通过私有构造方法产生类的对象",
              "C": "私有构造方法不能在类外通过new调用创建对象",
              "D": "具有私有构造方法的类不能被继承",
              "answer": "C",
              "yourAnswer": "A"
            },
            "5": {
              "id": 5,
              "problem": "一个类要实现多个接口，用什么关键字?",
              "A": "extends",
              "B": "implements",
              "C": "instanceof",
              "D": "import",
              "answer": "B",
              "yourAnswer": "A"
            },
            "6": {
              "id": 6,
              "problem": "下列哪个是合法的Java标识符？( )",
              "A": "Tree\u0026Glasses",
              "B": "FirstJavaApplet",
              "C": "*theLastOne",
              "D": "273.5",
              "answer": "B",
              "yourAnswer": "A"
            },
            "7": {
              "id": 7,
              "problem": "java中所有类的父类是（）？",
              "A": "object",
              "B": "Father",
              "C": "Lang",
              "D": "Exception",
              "answer": "A",
              "yourAnswer": "A"
            },
            "8": {
              "id": 8,
              "problem": "下面选项中关于 abstract 的使用正确的是( )。",
              "A": "private abstract void blood();",
              "B": "abstract final void blood ();",
              "C": "static abstract void blood ();",
              "D": "public abstract void blood ();",
              "answer": "D",
              "yourAnswer": "A"
            },
            "9": {
              "id": 9,
              "problem": "下列关于抽象方法的描述中，错误的是（ ）。",
              "A": "抽象方法声明只需给出方法头，不能写方法体，直接以分号结束",
              "B": "所有的方法都可以声明为抽象方法",
              "C": "构造方法不能声明为抽象方法",
              "D": "声明抽象方法使用关键字abstract修饰",
              "answer": "B",
              "yourAnswer": "A"
            },
            "10": {
              "id": 10,
              "problem": "下列哪个是合法的Java标识符？( )",
              "A": "Tree\u0026Glasses",
              "B": "FirstJavaApplet",
              "C": "*theLastOne",
              "D": "273.5",
              "answer": "B",
              "yourAnswer": "A"
            },
            "11": {
              "id": 11,
              "problem": "以下不是面向对象特征的是（ ）。",
              "A": "继承",
              "B": "代码复制",
              "C": "封装",
              "D": "多态",
              "answer": "B",
              "yourAnswer": "A"
            },
            "12": {
              "id": 12,
              "problem": "下列关于打包的描述中，错误的是（ ）。",
              "A": "一个源文件中最多包含一条package语句，且必须是第一条语句",
              "B": "一个源文件中定义的类的字节码可以存放于不同的包中",
              "C": "若源文件中没有包含package语句，则类的字节码被放入无名包中",
              "D": "不在一个源文件中定义的子类和父类可以位于不同包中",
              "answer": "B",
              "yourAnswer": "A"
            },
            "13": {
              "id": 13,
              "problem": "下列关于打包的描述中，错误的是（ ）。",
              "A": "一个源文件中最多包含一条package语句，且必须是第一条语句",
              "B": "一个源文件中定义的类的字节码可以存放于不同的包中",
              "C": "若源文件中没有包含package语句，则类的字节码被放入无名包中",
              "D": "不在一个源文件中定义的子类和父类可以位于不同包中",
              "answer": "B",
              "yourAnswer": "A"
            },
            "14": {
              "id": 14,
              "problem": "下列关于包的描述中错误的是（ ）",
              "A": "使用包的原因之一是避免类名重复",
              "B": "包是由.class文件组成的一个集合，是一个文件夹",
              "C": "功能相同或者相关的类一般组织在一个包中",
              "D": "包只能定义一层，即包中不能再有包",
              "answer": "D",
              "yourAnswer": "A"
            },
            "15": {
              "id": 15,
              "problem": "一个类可同时定义许多同名的方法，这些方法的形式参数个数、类型或顺序各不相同，传回的值也可以不相同，这种特性称为（ ）。",
              "A": "继承",
              "B": "重写",
              "C": "重载",
              "D": "封装",
              "answer": "C",
              "yourAnswer": "A"
            },
            "16": {
              "id": 16,
              "problem": "以下关于多态的描述中错误的是（ ）。",
              "A": "重载和重写都是多态的表现形式",
              "B": "多态性分为动态多态性(动态绑定)和静态多态性两种",
              "C": "多态性可以加快代码的运行速度",
              "D": "多态性是面向对象的核心特征之一",
              "answer": "C",
              "yourAnswer": "A"
            },
            "17": {
              "id": 17,
              "problem": "java中所有类的父类是（）？",
              "A": "object",
              "B": "Father",
              "C": "Lang",
              "D": "Exception",
              "answer": "A",
              "yourAnswer": "A"
            },
            "18": {
              "id": 18,
              "problem": "下列哪个是合法的Java标识符？( )",
              "A": "Tree\u0026Glasses",
              "B": "FirstJavaApplet",
              "C": "*theLastOne",
              "D": "273.5",
              "answer": "B",
              "yourAnswer": "A"
            },
            "19": {
              "id": 19,
              "problem": "如果类中成员的定义没有用访问权限修饰符，则该成员不能被（ ）访问。",
              "A": "同一个包中子类",
              "B": "子类",
              "C": "同一个包中其他类",
              "D": "其他包中所有类",
              "answer": "D",
              "yourAnswer": "A"
            },
            "20": {
              "id": 20,
              "problem": "变量命名规范说法正确的是( )",
              "A": "不同类型的变量，可以起相同的名字；",
              "B": "变量由字母、下划线、数字、$符号随意组成；",
              "C": "变量不能以数字作为开头；",
              "D": "A和a在java中是同一个变量；",
              "answer": "A",
              "yourAnswer": "A"
            }
          }
        },
        "3": {
          "name": "Java多态",
          "resource": "src\\pages\\Java多态",
          "learned": false,
          "date": "Dec 7, 2020, 1:49:59 PM",
          "integerSelectProblemHashMap": {
            "1": {
              "id": 1,
              "problem": "下列关于包的描述中错误的是（ ）",
              "A": "使用包的原因之一是避免类名重复",
              "B": "包是由.class文件组成的一个集合，是一个文件夹",
              "C": "功能相同或者相关的类一般组织在一个包中",
              "D": "包只能定义一层，即包中不能再有包",
              "answer": "D",
              "yourAnswer": "A"
            },
            "2": {
              "id": 2,
              "problem": "Java中( )",
              "A": "一个子类可以有多个父类，一个父类也可以有多个子类",
              "B": "一个子类可以有多个父类，但一个父类只可以有一个子类",
              "C": "一个子类可以有一个父类，但一个父类可以有多个子类",
              "D": "上述说法都不对",
              "answer": "C",
              "yourAnswer": "A"
            },
            "3": {
              "id": 3,
              "problem": "对于私有构造方法，以下说法正确的是（ ）。",
              "A": "构造方法如果被限定为private则会产生编译错误",
              "B": "不能通过私有构造方法产生类的对象",
              "C": "私有构造方法不能在类外通过new调用创建对象",
              "D": "具有私有构造方法的类不能被继承",
              "answer": "C",
              "yourAnswer": "A"
            },
            "4": {
              "id": 4,
              "problem": "欲构造ArrayList类得一个实例，此类继承了List接口，下列哪个方法是正确的：",
              "A": "ArrayList myList \u003d new Object();",
              "B": "List myList \u003d new ArrayList();",
              "C": "ArraylList myList \u003d new List();",
              "D": "List myList \u003d new List();",
              "answer": "B",
              "yourAnswer": "A"
            },
            "5": {
              "id": 5,
              "problem": "下列关于包的描述中错误的是（ ）",
              "A": "使用包的原因之一是避免类名重复",
              "B": "包是由.class文件组成的一个集合，是一个文件夹",
              "C": "功能相同或者相关的类一般组织在一个包中",
              "D": "包只能定义一层，即包中不能再有包",
              "answer": "D",
              "yourAnswer": "A"
            },
            "6": {
              "id": 6,
              "problem": "下列哪个是合法的Java标识符？( )",
              "A": "Tree\u0026Glasses",
              "B": "FirstJavaApplet",
              "C": "*theLastOne",
              "D": "273.5",
              "answer": "B",
              "yourAnswer": "A"
            },
            "7": {
              "id": 7,
              "problem": "若A是抽象类，B是其子类且A和B都有默认构造方法，则以下语句非法的是（ ）。",
              "A": "A a;",
              "B": "A a \u003d new A();",
              "C": "A a[] \u003d new A[4];",
              "D": "A a \u003d new B();",
              "answer": "B",
              "yourAnswer": "A"
            },
            "8": {
              "id": 8,
              "problem": "表达式(11+3*8)/4%3的值是( )",
              "A": "31",
              "B": "0",
              "C": "1",
              "D": "2",
              "answer": "D",
              "yourAnswer": "A"
            },
            "9": {
              "id": 9,
              "problem": "Java的核心包中，提供编程应用的基本类包是（ ）",
              "A": "java.util",
              "B": "java.lang",
              "C": "java.applet",
              "D": "java.rmi",
              "answer": "B",
              "yourAnswer": "A"
            },
            "10": {
              "id": 10,
              "problem": "变量命名规范说法正确的是( )",
              "A": "不同类型的变量，可以起相同的名字；",
              "B": "变量由字母、下划线、数字、$符号随意组成；",
              "C": "变量不能以数字作为开头；",
              "D": "A和a在java中是同一个变量；",
              "answer": "A",
              "yourAnswer": "A"
            },
            "11": {
              "id": 11,
              "problem": "以下关于多态的描述中错误的是（ ）。",
              "A": "重载和重写都是多态的表现形式",
              "B": "多态性分为动态多态性(动态绑定)和静态多态性两种",
              "C": "多态性可以加快代码的运行速度",
              "D": "多态性是面向对象的核心特征之一",
              "answer": "C",
              "yourAnswer": "A"
            },
            "12": {
              "id": 12,
              "problem": "下列关于构造方法的叙述中，错误的是( )",
              "A": "Java语言规定构造方法名与类名必须相同",
              "B": "Java语言规定构造方法没有返回值，但不用void声明",
              "C": "Java语言规定构造方法不可以重载",
              "D": "Java语言规定构造方法只能通过new自动调用",
              "answer": "C",
              "yourAnswer": "A"
            },
            "13": {
              "id": 13,
              "problem": "如果类中成员的定义没有用访问权限修饰符，则该成员不能被（ ）访问。",
              "A": "同一个包中子类",
              "B": "子类",
              "C": "同一个包中其他类",
              "D": "其他包中所有类",
              "answer": "D",
              "yourAnswer": "A"
            },
            "14": {
              "id": 14,
              "problem": "已知A类具有以下四个成员方法，a是A类的对象，则a.fun(1, 3.14F)调用的是（ ）。",
              "A": "public void fun(int a, double b){…}",
              "B": "public int fun(double a, double b){…}",
              "C": "public void fun(float a, float b){…}",
              "D": "public float fun(int a, float b){…}",
              "answer": "D",
              "yourAnswer": "A"
            },
            "15": {
              "id": 15,
              "problem": "有一段java 应用程序，它的主类名是a1，那么保存它的源文件名可以是( )",
              "A": "a1.java",
              "B": "a1.class",
              "C": "a1",
              "D": "都对",
              "answer": "A",
              "yourAnswer": "A"
            },
            "16": {
              "id": 16,
              "problem": "下列修饰符中与访问控制无关的是（）",
              "A": "private　",
              "B": "public",
              "C": "protected",
              "D": "default",
              "answer": "D",
              "yourAnswer": "A"
            },
            "17": {
              "id": 17,
              "problem": "不是合法标识符的是（）",
              "A": "BigO1Long$223",
              "B": "Utfint",
              "C": "$12s",
              "D": "3d",
              "answer": "D",
              "yourAnswer": "A"
            },
            "18": {
              "id": 18,
              "problem": "以下关于重载的说法错误的是（ ）。",
              "A": "重载的方法只要定义正确，调用时就不会有歧义性。",
              "B": "重载的方法通常实现相似的功能",
              "C": "重载的方法可以互相调用，提高代码复用",
              "D": "重载是多态的一种表现形式",
              "answer": "A",
              "yourAnswer": "A"
            },
            "19": {
              "id": 19,
              "problem": "类中存在一个方法int getValue(double x){…}，以下不能与这个方法重载的是（ ）。",
              "A": "int getValue(int x){…};",
              "B": "int getValue(float x){…};",
              "C": "int getValue(double t){…};",
              "D": "int getValue(double x, double y){…};",
              "answer": "C",
              "yourAnswer": "A"
            },
            "20": {
              "id": 20,
              "problem": "已知A类具有以下四个成员方法，a是A类的对象，则a.fun(1, 3.14F)调用的是（ ）。",
              "A": "public void fun(int a, double b){…}",
              "B": "public int fun(double a, double b){…}",
              "C": "public void fun(float a, float b){…}",
              "D": "public float fun(int a, float b){…}",
              "answer": "D",
              "yourAnswer": "A"
            }
          }
        },
        "4": {
          "name": "Java抽象类",
          "resource": "src\\pages\\Java抽象类",
          "learned": false,
          "date": "Dec 7, 2020, 1:49:59 PM",
          "integerSelectProblemHashMap": {
            "1": {
              "id": 1,
              "problem": "下列说法正确的有（）?",
              "A": "不需要定义类，就能创建对象",
              "B": "对象中必须有属性和方法",
              "C": "属性必须是简单变量",
              "D": "属性可以是简单变量，也可以是一个对象",
              "answer": "D",
              "yourAnswer": "A"
            },
            "2": {
              "id": 2,
              "problem": "下列哪个是合法的Java标识符？( )",
              "A": "Tree\u0026Glasses",
              "B": "FirstJavaApplet",
              "C": "*theLastOne",
              "D": "273.5",
              "answer": "B",
              "yourAnswer": "A"
            },
            "3": {
              "id": 3,
              "problem": "类中存在一个方法int getValue(double x){…}，以下不能与这个方法重载的是（ ）。",
              "A": "int getValue(int x){…};",
              "B": "int getValue(float x){…};",
              "C": "int getValue(double t){…};",
              "D": "int getValue(double x, double y){…};",
              "answer": "C",
              "yourAnswer": "A"
            },
            "4": {
              "id": 4,
              "problem": "以下关于多态的描述中错误的是（ ）。",
              "A": "重载和重写都是多态的表现形式",
              "B": "多态性分为动态多态性(动态绑定)和静态多态性两种",
              "C": "多态性可以加快代码的运行速度",
              "D": "多态性是面向对象的核心特征之一",
              "answer": "C",
              "yourAnswer": "A"
            },
            "5": {
              "id": 5,
              "problem": "有一段java 应用程序，它的主类名是a1，那么保存它的源文件名可以是( )",
              "A": "a1.java",
              "B": "a1.class",
              "C": "a1",
              "D": "都对",
              "answer": "A",
              "yourAnswer": "A"
            },
            "6": {
              "id": 6,
              "problem": "下面哪一个循环会导致死循环？( )",
              "A": "for (int k \u003d 0; k \u003c 0; k++)",
              "B": "for (int k \u003d 10; k \u003e 0; k--)",
              "C": "for (int k \u003d 0; k \u003c 10; k--)",
              "D": " for (int k \u003d 0; k \u003e 10; k++)",
              "answer": "C",
              "yourAnswer": "A"
            },
            "7": {
              "id": 7,
              "problem": "以下程序的输出结果是（ ）。abstract class A {     public abstract void fun();     public void fun(int a) {         System.out.println(a);     } } class TestA extends A {     public static void main(String[] args) {         TestA ta \u003d new TestA();         ta.fun(1);     } }",
              "A": "1",
              "B": "编译错误",
              "C": "运行错误",
              "D": "无输出",
              "answer": "B",
              "yourAnswer": "A"
            },
            "8": {
              "id": 8,
              "problem": "如果希望类中成员即使被子类继承也只能通过父类方法间接访问，则应该使用修饰符（）",
              "A": "public",
              "B": "protected",
              "C": "不写",
              "D": "private",
              "answer": "D",
              "yourAnswer": "A"
            },
            "9": {
              "id": 9,
              "problem": "下列关于包的描述中错误的是（ ）",
              "A": "使用包的原因之一是避免类名重复",
              "B": "包是由.class文件组成的一个集合，是一个文件夹",
              "C": "功能相同或者相关的类一般组织在一个包中",
              "D": "包只能定义一层，即包中不能再有包",
              "answer": "D",
              "yourAnswer": "A"
            },
            "10": {
              "id": 10,
              "problem": "如果类中成员的定义没有用访问权限修饰符，则该成员不能被（ ）访问。",
              "A": "同一个包中子类",
              "B": "子类",
              "C": "同一个包中其他类",
              "D": "其他包中所有类",
              "answer": "D",
              "yourAnswer": "A"
            },
            "11": {
              "id": 11,
              "problem": "一个类可同时定义许多同名的方法，这些方法的形式参数个数、类型或顺序各不相同，传回的值也可以不相同，这种特性称为（ ）。",
              "A": "继承",
              "B": "重写",
              "C": "重载",
              "D": "封装",
              "answer": "C",
              "yourAnswer": "A"
            },
            "12": {
              "id": 12,
              "problem": "在Java中用什么关键字修饰的方法可以直接通过类名来调用？( )",
              "A": "static",
              "B": "final",
              "C": "private",
              "D": "void",
              "answer": "A",
              "yourAnswer": "A"
            },
            "13": {
              "id": 13,
              "problem": "以下关于重载的说法错误的是（ ）。",
              "A": "重载的方法只要定义正确，调用时就不会有歧义性。",
              "B": "重载的方法通常实现相似的功能",
              "C": "重载的方法可以互相调用，提高代码复用",
              "D": "重载是多态的一种表现形式",
              "answer": "A",
              "yourAnswer": "A"
            },
            "14": {
              "id": 14,
              "problem": "下列说法正确的有（）?",
              "A": "不需要定义类，就能创建对象",
              "B": "对象中必须有属性和方法",
              "C": "属性必须是简单变量",
              "D": "属性可以是简单变量，也可以是一个对象",
              "answer": "D",
              "yourAnswer": "A"
            },
            "15": {
              "id": 15,
              "problem": "下列关于包的描述中错误的是（ ）",
              "A": "使用包的原因之一是避免类名重复",
              "B": "包是由.class文件组成的一个集合，是一个文件夹",
              "C": "功能相同或者相关的类一般组织在一个包中",
              "D": "包只能定义一层，即包中不能再有包",
              "answer": "D",
              "yourAnswer": "A"
            },
            "16": {
              "id": 16,
              "problem": "以下关于继承的叙述正确的是( )",
              "A": "在Java中类只允许单一继承",
              "B": "在Java中一个类只能实现一个接口",
              "C": "在Java中一个类不能同时继承一个类和实现一个接口",
              "D": "在Java中接口只允许单一继承",
              "answer": "A",
              "yourAnswer": "A"
            },
            "17": {
              "id": 17,
              "problem": "欲构造ArrayList类得一个实例，此类继承了List接口，下列哪个方法是正确的：",
              "A": "ArrayList myList \u003d new Object();",
              "B": "List myList \u003d new ArrayList();",
              "C": "ArraylList myList \u003d new List();",
              "D": "List myList \u003d new List();",
              "answer": "B",
              "yourAnswer": "A"
            },
            "18": {
              "id": 18,
              "problem": "以下标识符中哪项是不合法的( )",
              "A": "int",
              "B": "$double",
              "C": "hello",
              "D": "BigMeaninglessName",
              "answer": "A",
              "yourAnswer": "A"
            },
            "19": {
              "id": 19,
              "problem": "不是合法标识符的是（）",
              "A": "BigO1Long$223",
              "B": "Utfint",
              "C": "$12s",
              "D": "3d",
              "answer": "D",
              "yourAnswer": "A"
            },
            "20": {
              "id": 20,
              "problem": "下列关于抽象方法的描述中，错误的是（ ）。",
              "A": "抽象方法声明只需给出方法头，不能写方法体，直接以分号结束",
              "B": "所有的方法都可以声明为抽象方法",
              "C": "构造方法不能声明为抽象方法",
              "D": "声明抽象方法使用关键字abstract修饰",
              "answer": "B",
              "yourAnswer": "A"
            }
          }
        },
        "5": {
          "name": "Java封装",
          "resource": "src\\pages\\Java封装",
          "learned": false,
          "date": "Dec 7, 2020, 1:49:59 PM",
          "integerSelectProblemHashMap": {
            "1": {
              "id": 1,
              "problem": "InputStream类的作用就是将文件中的数据读入到内存中，该类中的哪个方法可以关闭文件输入流对象？",
              "A": "int read()",
              "B": "void close()",
              "C": "int available()",
              "D": "int read(byte[] b)",
              "answer": "B",
              "yourAnswer": "A"
            },
            "2": {
              "id": 2,
              "problem": "下列修饰符中与访问控制无关的是（）",
              "A": "private　",
              "B": "public",
              "C": "protected",
              "D": "default",
              "answer": "D",
              "yourAnswer": "A"
            },
            "3": {
              "id": 3,
              "problem": "欲构造ArrayList类得一个实例，此类继承了List接口，下列哪个方法是正确的：",
              "A": "ArrayList myList \u003d new Object();",
              "B": "List myList \u003d new ArrayList();",
              "C": "ArraylList myList \u003d new List();",
              "D": "List myList \u003d new List();",
              "answer": "B",
              "yourAnswer": "A"
            },
            "4": {
              "id": 4,
              "problem": "以下程序的结果是（ ）。class Base {     protected void fun(){         System.out.println(0);     } } class Derived extends Base {     protected void fun(){         System.out.println(1);     } } public class Test {     public static void main(String[] args) {         Base b1 \u003d new Derived();         b1.fun();     } }",
              "A": "运行错误",
              "B": "编译错误",
              "C": "0",
              "D": "1",
              "answer": "D",
              "yourAnswer": "A"
            },
            "5": {
              "id": 5,
              "problem": "Java的核心包中，提供编程应用的基本类包是（ ）",
              "A": "java.util",
              "B": "java.lang",
              "C": "java.applet",
              "D": "java.rmi",
              "answer": "B",
              "yourAnswer": "A"
            },
            "6": {
              "id": 6,
              "problem": "一个类可同时定义许多同名的方法，这些方法的形式参数个数、类型或顺序各不相同，传回的值也可以不相同，这种特性称为（ ）。",
              "A": "继承",
              "B": "重写",
              "C": "重载",
              "D": "封装",
              "answer": "C",
              "yourAnswer": "A"
            },
            "7": {
              "id": 7,
              "problem": "若A是抽象类，B是其子类且A和B都有默认构造方法，则以下语句非法的是（ ）。",
              "A": "A a;",
              "B": "A a \u003d new A();",
              "C": "A a[] \u003d new A[4];",
              "D": "A a \u003d new B();",
              "answer": "B",
              "yourAnswer": "A"
            },
            "8": {
              "id": 8,
              "problem": "一个类可同时定义许多同名的方法，这些方法的形式参数个数、类型或顺序各不相同，传回的值也可以不相同，这种特性称为（ ）。",
              "A": "继承",
              "B": "重写",
              "C": "重载",
              "D": "封装",
              "answer": "C",
              "yourAnswer": "A"
            },
            "9": {
              "id": 9,
              "problem": "以下标识符中哪项是不合法的( )",
              "A": "int",
              "B": "$double",
              "C": "hello",
              "D": "BigMeaninglessName",
              "answer": "A",
              "yourAnswer": "A"
            },
            "10": {
              "id": 10,
              "problem": "有一段java 应用程序，它的主类名是a1，那么保存它的源文件名可以是( )",
              "A": "a1.java",
              "B": "a1.class",
              "C": "a1",
              "D": "都对",
              "answer": "A",
              "yourAnswer": "A"
            },
            "11": {
              "id": 11,
              "problem": "下列关于包的描述中错误的是（ ）",
              "A": "使用包的原因之一是避免类名重复",
              "B": "包是由.class文件组成的一个集合，是一个文件夹",
              "C": "功能相同或者相关的类一般组织在一个包中",
              "D": "包只能定义一层，即包中不能再有包",
              "answer": "D",
              "yourAnswer": "A"
            },
            "12": {
              "id": 12,
              "problem": "下列哪个是合法的Java标识符？( )",
              "A": "Tree\u0026Glasses",
              "B": "FirstJavaApplet",
              "C": "*theLastOne",
              "D": "273.5",
              "answer": "B",
              "yourAnswer": "A"
            },
            "13": {
              "id": 13,
              "problem": "已知A类具有以下四个成员方法，a是A类的对象，则a.fun(1, 3.14F)调用的是（ ）。",
              "A": "public void fun(int a, double b){…}",
              "B": "public int fun(double a, double b){…}",
              "C": "public void fun(float a, float b){…}",
              "D": "public float fun(int a, float b){…}",
              "answer": "D",
              "yourAnswer": "A"
            },
            "14": {
              "id": 14,
              "problem": "在创建对象时必须( )",
              "A": "先声明对象，然后才能使用对象",
              "B": "先声明对象，为对象分配内存空间，然后才能使用对象",
              "C": "先声明对象，为对象分配内存空间，对对象初始化，然后才能使用对象",
              "D": "上述说法都对",
              "answer": "C",
              "yourAnswer": "A"
            },
            "15": {
              "id": 15,
              "problem": "InputStream类的作用就是将文件中的数据读入到内存中，该类中的哪个方法可以关闭文件输入流对象？",
              "A": "int read()",
              "B": "void close()",
              "C": "int available()",
              "D": "int read(byte[] b)",
              "answer": "B",
              "yourAnswer": "A"
            },
            "16": {
              "id": 16,
              "problem": "以下关于继承的叙述正确的是( )",
              "A": "在Java中类只允许单一继承",
              "B": "在Java中一个类只能实现一个接口",
              "C": "在Java中一个类不能同时继承一个类和实现一个接口",
              "D": "在Java中接口只允许单一继承",
              "answer": "A",
              "yourAnswer": "A"
            },
            "17": {
              "id": 17,
              "problem": "如果类中成员的定义没有用访问权限修饰符，则该成员不能被（ ）访问。",
              "A": "同一个包中子类",
              "B": "子类",
              "C": "同一个包中其他类",
              "D": "其他包中所有类",
              "answer": "D",
              "yourAnswer": "A"
            },
            "18": {
              "id": 18,
              "problem": "java中所有类的父类是（）？",
              "A": "object",
              "B": "Father",
              "C": "Lang",
              "D": "Exception",
              "answer": "A",
              "yourAnswer": "A"
            },
            "19": {
              "id": 19,
              "problem": "如果希望类中成员即使被子类继承也只能通过父类方法间接访问，则应该使用修饰符（）",
              "A": "public",
              "B": "protected",
              "C": "不写",
              "D": "private",
              "answer": "D",
              "yourAnswer": "A"
            },
            "20": {
              "id": 20,
              "problem": "不是合法标识符的是（）",
              "A": "BigO1Long$223",
              "B": "Utfint",
              "C": "$12s",
              "D": "3d",
              "answer": "D",
              "yourAnswer": "A"
            }
          }
        },
        "6": {
          "name": "Java接口",
          "resource": "src\\pages\\Java接口",
          "learned": false,
          "date": "Dec 7, 2020, 1:49:59 PM",
          "integerSelectProblemHashMap": {
            "1": {
              "id": 1,
              "problem": "不允许作为类及类的成员的访问控制符的是（）？",
              "A": "public",
              "B": "private",
              "C": "protected",
              "D": "static",
              "answer": "D",
              "yourAnswer": "A"
            },
            "2": {
              "id": 2,
              "problem": "下列不可作为java语言修饰符的是( )",
              "A": "a1",
              "B": "$1",
              "C": "_1",
              "D": "11",
              "answer": "D",
              "yourAnswer": "A"
            },
            "3": {
              "id": 3,
              "problem": "下列关于抽象方法的描述中，错误的是（ ）。",
              "A": "抽象方法声明只需给出方法头，不能写方法体，直接以分号结束",
              "B": "所有的方法都可以声明为抽象方法",
              "C": "构造方法不能声明为抽象方法",
              "D": "声明抽象方法使用关键字abstract修饰",
              "answer": "B",
              "yourAnswer": "A"
            },
            "4": {
              "id": 4,
              "problem": "已知A类具有以下四个成员方法，a是A类的对象，则a.fun(1, 3.14F)调用的是（ ）。",
              "A": "public void fun(int a, double b){…}",
              "B": "public int fun(double a, double b){…}",
              "C": "public void fun(float a, float b){…}",
              "D": "public float fun(int a, float b){…}",
              "answer": "D",
              "yourAnswer": "A"
            },
            "5": {
              "id": 5,
              "problem": "在创建对象时必须( )",
              "A": "先声明对象，然后才能使用对象",
              "B": "先声明对象，为对象分配内存空间，然后才能使用对象",
              "C": "先声明对象，为对象分配内存空间，对对象初始化，然后才能使用对象",
              "D": "上述说法都对",
              "answer": "C",
              "yourAnswer": "A"
            },
            "6": {
              "id": 6,
              "problem": "下列哪个是合法的Java标识符？( )",
              "A": "Tree\u0026Glasses",
              "B": "FirstJavaApplet",
              "C": "*theLastOne",
              "D": "273.5",
              "answer": "B",
              "yourAnswer": "A"
            },
            "7": {
              "id": 7,
              "problem": "( )是FileInputStream的子类，可用于读取二进制文件.",
              "A": "DataOutputStream",
              "B": "DataInputStream",
              "C": "Reader",
              "D": "Writer",
              "answer": "B",
              "yourAnswer": "A"
            },
            "8": {
              "id": 8,
              "problem": "以下关于重载的说法错误的是（ ）。",
              "A": "重载的方法只要定义正确，调用时就不会有歧义性。",
              "B": "重载的方法通常实现相似的功能",
              "C": "重载的方法可以互相调用，提高代码复用",
              "D": "重载是多态的一种表现形式",
              "answer": "A",
              "yourAnswer": "A"
            },
            "9": {
              "id": 9,
              "problem": "java中所有类的父类是（）？",
              "A": "object",
              "B": "Father",
              "C": "Lang",
              "D": "Exception",
              "answer": "A",
              "yourAnswer": "A"
            },
            "10": {
              "id": 10,
              "problem": "( )类带有缓冲区，可以把一批数据读到缓冲区，避免每次都从数据源读取数据进行字符编码转换。",
              "A": "Reader",
              "B": "FileReader",
              "C": "Writer",
              "D": "BufferedReader",
              "answer": "D",
              "yourAnswer": "A"
            },
            "11": {
              "id": 11,
              "problem": "以下程序的输出结果是（ ）。abstract class A {     public abstract void fun();     public void fun(int a) {         System.out.println(a);     } } class TestA extends A {     public static void main(String[] args) {         TestA ta \u003d new TestA();         ta.fun(1);     } }",
              "A": "1",
              "B": "编译错误",
              "C": "运行错误",
              "D": "无输出",
              "answer": "B",
              "yourAnswer": "A"
            },
            "12": {
              "id": 12,
              "problem": "（ ）是Java语言的关键字。",
              "A": "public",
              "B": "static",
              "C": "void",
              "D": "以上都是",
              "answer": "D",
              "yourAnswer": "A"
            },
            "13": {
              "id": 13,
              "problem": "在创建对象时必须( )",
              "A": "先声明对象，然后才能使用对象",
              "B": "先声明对象，为对象分配内存空间，然后才能使用对象",
              "C": "先声明对象，为对象分配内存空间，对对象初始化，然后才能使用对象",
              "D": "上述说法都对",
              "answer": "C",
              "yourAnswer": "A"
            },
            "14": {
              "id": 14,
              "problem": "有一段java 应用程序，它的主类名是a1，那么保存它的源文件名可以是( )",
              "A": "a1.java",
              "B": "a1.class",
              "C": "a1",
              "D": "都对",
              "answer": "A",
              "yourAnswer": "A"
            },
            "15": {
              "id": 15,
              "problem": "下列关于引入包的描述中，错误的是（ ）。",
              "A": "使用项目中其他包中的类时，需要在源程序中写import语句",
              "B": "import语句写在类声明的上面，package语句的下面",
              "C": "import可以引入包中所有类或其中一个类",
              "D": "import语句必须是源文件中第一条语句",
              "answer": "D",
              "yourAnswer": "A"
            },
            "16": {
              "id": 16,
              "problem": "下列关于包的描述中错误的是（ ）",
              "A": "使用包的原因之一是避免类名重复",
              "B": "包是由.class文件组成的一个集合，是一个文件夹",
              "C": "功能相同或者相关的类一般组织在一个包中",
              "D": "包只能定义一层，即包中不能再有包",
              "answer": "D",
              "yourAnswer": "A"
            },
            "17": {
              "id": 17,
              "problem": "不是合法标识符的是（）",
              "A": "BigO1Long$223",
              "B": "Utfint",
              "C": "$12s",
              "D": "3d",
              "answer": "D",
              "yourAnswer": "A"
            },
            "18": {
              "id": 18,
              "problem": "下列关于引入包的描述中，错误的是（ ）。",
              "A": "使用项目中其他包中的类时，需要在源程序中写import语句",
              "B": "import语句写在类声明的上面，package语句的下面",
              "C": "import可以引入包中所有类或其中一个类",
              "D": "import语句必须是源文件中第一条语句",
              "answer": "D",
              "yourAnswer": "A"
            },
            "19": {
              "id": 19,
              "problem": "BufferedWriter类是Writer类的子类，BufferedWriter类中的（）方法可以插入一个换行符。",
              "A": "void newLine()",
              "B": "void close()",
              "C": "void flush()",
              "D": "void write(String str)",
              "answer": "A",
              "yourAnswer": "A"
            },
            "20": {
              "id": 20,
              "problem": "下列关于打包的描述中，错误的是（ ）。",
              "A": "一个源文件中最多包含一条package语句，且必须是第一条语句",
              "B": "一个源文件中定义的类的字节码可以存放于不同的包中",
              "C": "若源文件中没有包含package语句，则类的字节码被放入无名包中",
              "D": "不在一个源文件中定义的子类和父类可以位于不同包中",
              "answer": "B",
              "yourAnswer": "A"
            }
          }
        },
        "7": {
          "name": "Java枚举",
          "resource": "src\\pages\\Java枚举",
          "learned": false,
          "date": "Dec 7, 2020, 1:49:59 PM",
          "integerSelectProblemHashMap": {
            "1": {
              "id": 1,
              "problem": "下列不是重载方法的特征的是（ ）。",
              "A": "参数个数不同",
              "B": "返回值类型不同",
              "C": "参数类型不同",
              "D": "方法名相同",
              "answer": "B",
              "yourAnswer": "A"
            },
            "2": {
              "id": 2,
              "problem": "下列哪一个关键字用于实现接口来定义类？( )",
              "A": "extends",
              "B": "implements",
              "C": "abstract",
              "D": "interface",
              "answer": "B",
              "yourAnswer": "A"
            },
            "3": {
              "id": 3,
              "problem": "不是合法标识符的是（）",
              "A": "Javaworld",
              "B": "_sum",
              "C": "2Java Program",
              "D": "$abc",
              "answer": "C",
              "yourAnswer": "A"
            },
            "4": {
              "id": 4,
              "problem": "下面选项中关于 abstract 的使用正确的是( )。",
              "A": "private abstract void blood();",
              "B": "abstract final void blood ();",
              "C": "static abstract void blood ();",
              "D": "public abstract void blood ();",
              "answer": "D",
              "yourAnswer": "A"
            },
            "5": {
              "id": 5,
              "problem": "对于私有构造方法，以下说法正确的是（ ）。",
              "A": "构造方法如果被限定为private则会产生编译错误",
              "B": "不能通过私有构造方法产生类的对象",
              "C": "私有构造方法不能在类外通过new调用创建对象",
              "D": "具有私有构造方法的类不能被继承",
              "answer": "C",
              "yourAnswer": "A"
            },
            "6": {
              "id": 6,
              "problem": "以下程序的结果是（ ）。class Base {     protected void fun(){         System.out.println(0);     } } class Derived extends Base {     protected void fun(){         System.out.println(1);     } } public class Test {     public static void main(String[] args) {         Base b1 \u003d new Derived();         b1.fun();     } }",
              "A": "运行错误",
              "B": "编译错误",
              "C": "0",
              "D": "1",
              "answer": "D",
              "yourAnswer": "A"
            },
            "7": {
              "id": 7,
              "problem": "下列关于抽象类的描述中，错误的是（ ）。",
              "A": "抽象类中可以包含抽象方法，也可以不包含抽象方法",
              "B": "抽象类不能实例化，即使抽象类中没有声明抽象方法，也不能实例化",
              "C": "不能声明抽象类的变量(对象)",
              "D": "包含抽象方法的类，必须要声明为抽象类",
              "answer": "C",
              "yourAnswer": "A"
            },
            "8": {
              "id": 8,
              "problem": "如果类中成员的定义没有用访问权限修饰符，则该成员不能被（ ）访问。",
              "A": "同一个包中子类",
              "B": "子类",
              "C": "同一个包中其他类",
              "D": "其他包中所有类",
              "answer": "D",
              "yourAnswer": "A"
            },
            "9": {
              "id": 9,
              "problem": "不是合法标识符的是（）",
              "A": "Javaworld",
              "B": "_sum",
              "C": "2Java Program",
              "D": "$abc",
              "answer": "C",
              "yourAnswer": "A"
            },
            "10": {
              "id": 10,
              "problem": "以下没有体现出封装性的是（ ）。",
              "A": "将类的成员用访问权限修饰符加以访问控制",
              "B": "提供成员方法操作成员变量",
              "C": "将类的全部成员都设定为public权限",
              "D": "将类按照不同的包组织管理",
              "answer": "C",
              "yourAnswer": "A"
            },
            "11": {
              "id": 11,
              "problem": "Java的核心包中，提供编程应用的基本类包是（ ）",
              "A": "java.util",
              "B": "java.lang",
              "C": "java.applet",
              "D": "java.rmi",
              "answer": "B",
              "yourAnswer": "A"
            },
            "12": {
              "id": 12,
              "problem": "以下程序的输出结果是（ ）。abstract class A {     public abstract void fun();     public void fun(int a) {         System.out.println(a);     } } class TestA extends A {     public static void main(String[] args) {         TestA ta \u003d new TestA();         ta.fun(1);     } }",
              "A": "1",
              "B": "编译错误",
              "C": "运行错误",
              "D": "无输出",
              "answer": "B",
              "yourAnswer": "A"
            },
            "13": {
              "id": 13,
              "problem": "以下抽象类定义中合法的是（ ）。",
              "A": "abstract Animal{     abstract void growl(); }",
              "B": "class abstract Animal{     abstract void growl(); }",
              "C": "abstract class Animal {     abstract void growl(); } ",
              "D": "abstract class Animal {     abstract void growl() {     } }",
              "answer": "C",
              "yourAnswer": "A"
            },
            "14": {
              "id": 14,
              "problem": "（ ）是Java语言的关键字。",
              "A": "public",
              "B": "static",
              "C": "void",
              "D": "以上都是",
              "answer": "D",
              "yourAnswer": "A"
            },
            "15": {
              "id": 15,
              "problem": "下列说法正确的有（）?",
              "A": "不需要定义类，就能创建对象",
              "B": "对象中必须有属性和方法",
              "C": "属性必须是简单变量",
              "D": "属性可以是简单变量，也可以是一个对象",
              "answer": "D",
              "yourAnswer": "A"
            },
            "16": {
              "id": 16,
              "problem": "下列修饰符中与访问控制无关的是（）",
              "A": "private　",
              "B": "public",
              "C": "protected",
              "D": "default",
              "answer": "D",
              "yourAnswer": "A"
            },
            "17": {
              "id": 17,
              "problem": "一个类要实现接口的功能，可以实现几个方法？",
              "A": "0",
              "B": "1",
              "C": "2",
              "D": "全部",
              "answer": "D",
              "yourAnswer": "A"
            },
            "18": {
              "id": 18,
              "problem": "Java的核心包中，提供编程应用的基本类包是（ ）",
              "A": "java.util",
              "B": "java.lang",
              "C": "java.applet",
              "D": "java.rmi",
              "answer": "B",
              "yourAnswer": "A"
            },
            "19": {
              "id": 19,
              "problem": "不允许作为类及类的成员的访问控制符的是（）？",
              "A": "public",
              "B": "private",
              "C": "protected",
              "D": "static",
              "answer": "D",
              "yourAnswer": "A"
            },
            "20": {
              "id": 20,
              "problem": "java中所有类的父类是（）？",
              "A": "object",
              "B": "Father",
              "C": "Lang",
              "D": "Exception",
              "answer": "A",
              "yourAnswer": "A"
            }
          }
        }
      }
    },
    "Java初级教程": {
      "ableToLearn": false,
      "stringNewTitleManagerHashMap": {
        "JavaStringBuffer": {
          "name": "JavaStringBuffer",
          "resource": "src\\pages\\JavaStringBuffer",
          "learned": false,
          "date": "Dec 7, 2020, 1:49:59 PM",
          "integerSelectProblemHashMap": {
            "1": {
              "id": 1,
              "problem": "下列不是重载方法的特征的是（ ）。",
              "A": "参数个数不同",
              "B": "返回值类型不同",
              "C": "参数类型不同",
              "D": "方法名相同",
              "answer": "B",
              "yourAnswer": "A"
            },
            "2": {
              "id": 2,
              "problem": "下列关于包的描述中错误的是（ ）",
              "A": "使用包的原因之一是避免类名重复",
              "B": "包是由.class文件组成的一个集合，是一个文件夹",
              "C": "功能相同或者相关的类一般组织在一个包中",
              "D": "包只能定义一层，即包中不能再有包",
              "answer": "D",
              "yourAnswer": "A"
            },
            "3": {
              "id": 3,
              "problem": "不是合法标识符的是（）",
              "A": "BigO1Long$223",
              "B": "Utfint",
              "C": "$12s",
              "D": "3d",
              "answer": "D",
              "yourAnswer": "A"
            },
            "4": {
              "id": 4,
              "problem": "不是合法标识符的是（）",
              "A": "BigO1Long$223",
              "B": "Utfint",
              "C": "$12s",
              "D": "3d",
              "answer": "D",
              "yourAnswer": "A"
            },
            "5": {
              "id": 5,
              "problem": "以下没有体现出封装性的是（ ）。",
              "A": "将类的成员用访问权限修饰符加以访问控制",
              "B": "提供成员方法操作成员变量",
              "C": "将类的全部成员都设定为public权限",
              "D": "将类按照不同的包组织管理",
              "answer": "C",
              "yourAnswer": "A"
            },
            "6": {
              "id": 6,
              "problem": "结构化程序设计所规定的三种基本控制结构是( )",
              "A": "输入、处理、输出",
              "B": "树形、网形、环形",
              "C": "顺序、选择、循环",
              "D": "主程序、子程序、函数",
              "answer": "C",
              "yourAnswer": "A"
            },
            "7": {
              "id": 7,
              "problem": "下列关于抽象类的描述中，错误的是（ ）。",
              "A": "抽象类中可以包含抽象方法，也可以不包含抽象方法",
              "B": "抽象类不能实例化，即使抽象类中没有声明抽象方法，也不能实例化",
              "C": "不能声明抽象类的变量(对象)",
              "D": "包含抽象方法的类，必须要声明为抽象类",
              "answer": "C",
              "yourAnswer": "A"
            },
            "8": {
              "id": 8,
              "problem": "以下抽象类定义中合法的是（ ）。",
              "A": "abstract Animal{     abstract void growl(); }",
              "B": "class abstract Animal{     abstract void growl(); }",
              "C": "abstract class Animal {     abstract void growl(); } ",
              "D": "abstract class Animal {     abstract void growl() {     } }",
              "answer": "C",
              "yourAnswer": "A"
            },
            "9": {
              "id": 9,
              "problem": "以下关于多态的描述中错误的是（ ）。",
              "A": "重载和重写都是多态的表现形式",
              "B": "多态性分为动态多态性(动态绑定)和静态多态性两种",
              "C": "多态性可以加快代码的运行速度",
              "D": "多态性是面向对象的核心特征之一",
              "answer": "C",
              "yourAnswer": "A"
            },
            "10": {
              "id": 10,
              "problem": "下列不是重载方法的特征的是（ ）。",
              "A": "参数个数不同",
              "B": "返回值类型不同",
              "C": "参数类型不同",
              "D": "方法名相同",
              "answer": "B",
              "yourAnswer": "A"
            },
            "11": {
              "id": 11,
              "problem": "以下程序的结果是（ ）。class Base {     protected void fun(){         System.out.println(0);     } } class Derived extends Base {     protected void fun(){         System.out.println(1);     } } public class Test {     public static void main(String[] args) {         Base b1 \u003d new Derived();         b1.fun();     } }",
              "A": "运行错误",
              "B": "编译错误",
              "C": "0",
              "D": "1",
              "answer": "D",
              "yourAnswer": "A"
            },
            "12": {
              "id": 12,
              "problem": "表达式(11+3*8)/4%3的值是( )",
              "A": "31",
              "B": "0",
              "C": "1",
              "D": "2",
              "answer": "D",
              "yourAnswer": "A"
            },
            "13": {
              "id": 13,
              "problem": "以下程序的输出结果是（ ）。abstract class A {     public abstract void fun();     public void fun(int a) {         System.out.println(a);     } } class TestA extends A {     public static void main(String[] args) {         TestA ta \u003d new TestA();         ta.fun(1);     } }",
              "A": "1",
              "B": "编译错误",
              "C": "运行错误",
              "D": "无输出",
              "answer": "B",
              "yourAnswer": "A"
            },
            "14": {
              "id": 14,
              "problem": "欲构造ArrayList类得一个实例，此类继承了List接口，下列哪个方法是正确的：",
              "A": "ArrayList myList \u003d new Object();",
              "B": "List myList \u003d new ArrayList();",
              "C": "ArraylList myList \u003d new List();",
              "D": "List myList \u003d new List();",
              "answer": "B",
              "yourAnswer": "A"
            },
            "15": {
              "id": 15,
              "problem": "以下关于继承的叙述正确的是( )",
              "A": "在Java中类只允许单一继承",
              "B": "在Java中一个类只能实现一个接口",
              "C": "在Java中一个类不能同时继承一个类和实现一个接口",
              "D": "在Java中接口只允许单一继承",
              "answer": "A",
              "yourAnswer": "A"
            },
            "16": {
              "id": 16,
              "problem": "( )类带有缓冲区，可以把一批数据读到缓冲区，避免每次都从数据源读取数据进行字符编码转换。",
              "A": "Reader",
              "B": "FileReader",
              "C": "Writer",
              "D": "BufferedReader",
              "answer": "D",
              "yourAnswer": "A"
            },
            "17": {
              "id": 17,
              "problem": "接口中方法的修饰符默认是？",
              "A": "public",
              "B": "abstract",
              "C": "public abstract",
              "D": "public static final",
              "answer": "C",
              "yourAnswer": "A"
            },
            "18": {
              "id": 18,
              "problem": "下列关于包的描述中错误的是（ ）",
              "A": "使用包的原因之一是避免类名重复",
              "B": "包是由.class文件组成的一个集合，是一个文件夹",
              "C": "功能相同或者相关的类一般组织在一个包中",
              "D": "包只能定义一层，即包中不能再有包",
              "answer": "D",
              "yourAnswer": "A"
            },
            "19": {
              "id": 19,
              "problem": "下列关于引入包的描述中，错误的是（ ）。",
              "A": "使用项目中其他包中的类时，需要在源程序中写import语句",
              "B": "import语句写在类声明的上面，package语句的下面",
              "C": "import可以引入包中所有类或其中一个类",
              "D": "import语句必须是源文件中第一条语句",
              "answer": "D",
              "yourAnswer": "A"
            },
            "20": {
              "id": 20,
              "problem": "以下没有体现出封装性的是（ ）。",
              "A": "将类的成员用访问权限修饰符加以访问控制",
              "B": "提供成员方法操作成员变量",
              "C": "将类的全部成员都设定为public权限",
              "D": "将类按照不同的包组织管理",
              "answer": "C",
              "yourAnswer": "A"
            }
          }
        },
        "JavaScanner类": {
          "name": "JavaScanner类",
          "resource": "src\\pages\\JavaScanner类",
          "learned": false,
          "date": "Dec 7, 2020, 1:49:59 PM",
          "integerSelectProblemHashMap": {
            "1": {
              "id": 1,
              "problem": "不允许作为类及类的成员的访问控制符的是（）？",
              "A": "public",
              "B": "private",
              "C": "protected",
              "D": "static",
              "answer": "D",
              "yourAnswer": "A"
            },
            "2": {
              "id": 2,
              "problem": "以下关于重载的说法错误的是（ ）。",
              "A": "重载的方法只要定义正确，调用时就不会有歧义性。",
              "B": "重载的方法通常实现相似的功能",
              "C": "重载的方法可以互相调用，提高代码复用",
              "D": "重载是多态的一种表现形式",
              "answer": "A",
              "yourAnswer": "A"
            },
            "3": {
              "id": 3,
              "problem": "对于私有构造方法，以下说法正确的是（ ）。",
              "A": "构造方法如果被限定为private则会产生编译错误",
              "B": "不能通过私有构造方法产生类的对象",
              "C": "私有构造方法不能在类外通过new调用创建对象",
              "D": "具有私有构造方法的类不能被继承",
              "answer": "C",
              "yourAnswer": "A"
            },
            "4": {
              "id": 4,
              "problem": "下列关于抽象方法的描述中，错误的是（ ）。",
              "A": "抽象方法声明只需给出方法头，不能写方法体，直接以分号结束",
              "B": "所有的方法都可以声明为抽象方法",
              "C": "构造方法不能声明为抽象方法",
              "D": "声明抽象方法使用关键字abstract修饰",
              "answer": "B",
              "yourAnswer": "A"
            },
            "5": {
              "id": 5,
              "problem": "Java中( )",
              "A": "一个子类可以有多个父类，一个父类也可以有多个子类",
              "B": "一个子类可以有多个父类，但一个父类只可以有一个子类",
              "C": "一个子类可以有一个父类，但一个父类可以有多个子类",
              "D": "上述说法都不对",
              "answer": "C",
              "yourAnswer": "A"
            },
            "6": {
              "id": 6,
              "problem": "以下关于多态的描述中错误的是（ ）。",
              "A": "重载和重写都是多态的表现形式",
              "B": "多态性分为动态多态性(动态绑定)和静态多态性两种",
              "C": "多态性可以加快代码的运行速度",
              "D": "多态性是面向对象的核心特征之一",
              "answer": "C",
              "yourAnswer": "A"
            },
            "7": {
              "id": 7,
              "problem": "一个类要实现多个接口，用什么关键字?",
              "A": "extends",
              "B": "implements",
              "C": "instanceof",
              "D": "import",
              "answer": "B",
              "yourAnswer": "A"
            },
            "8": {
              "id": 8,
              "problem": "接口中方法的方法体内可以有几条代码？",
              "A": "0",
              "B": "1",
              "C": "2",
              "D": "多条",
              "answer": "A",
              "yourAnswer": "A"
            },
            "9": {
              "id": 9,
              "problem": "Java的核心包中，提供编程应用的基本类包是（ ）",
              "A": "java.util",
              "B": "java.lang",
              "C": "java.applet",
              "D": "java.rmi",
              "answer": "B",
              "yourAnswer": "A"
            },
            "10": {
              "id": 10,
              "problem": "以下不是面向对象特征的是（ ）。",
              "A": "继承",
              "B": "代码复制",
              "C": "封装",
              "D": "多态",
              "answer": "B",
              "yourAnswer": "A"
            },
            "11": {
              "id": 11,
              "problem": "接口中的属性会自动被修饰为？",
              "A": "public static",
              "B": "static final",
              "C": "public static final",
              "D": "public final",
              "answer": "C",
              "yourAnswer": "A"
            },
            "12": {
              "id": 12,
              "problem": "一个类可同时定义许多同名的方法，这些方法的形式参数个数、类型或顺序各不相同，传回的值也可以不相同，这种特性称为（ ）。",
              "A": "继承",
              "B": "重写",
              "C": "重载",
              "D": "封装",
              "answer": "C",
              "yourAnswer": "A"
            },
            "13": {
              "id": 13,
              "problem": "如果类中成员的定义没有用访问权限修饰符，则该成员不能被（ ）访问。",
              "A": "同一个包中子类",
              "B": "子类",
              "C": "同一个包中其他类",
              "D": "其他包中所有类",
              "answer": "D",
              "yourAnswer": "A"
            },
            "14": {
              "id": 14,
              "problem": "以下关于重载的说法错误的是（ ）。",
              "A": "重载的方法只要定义正确，调用时就不会有歧义性。",
              "B": "重载的方法通常实现相似的功能",
              "C": "重载的方法可以互相调用，提高代码复用",
              "D": "重载是多态的一种表现形式",
              "answer": "A",
              "yourAnswer": "A"
            },
            "15": {
              "id": 15,
              "problem": "以下关于继承的叙述正确的是( )",
              "A": "在Java中类只允许单一继承",
              "B": "在Java中一个类只能实现一个接口",
              "C": "在Java中一个类不能同时继承一个类和实现一个接口",
              "D": "在Java中接口只允许单一继承",
              "answer": "A",
              "yourAnswer": "A"
            },
            "16": {
              "id": 16,
              "problem": "下面哪一个循环会导致死循环？( )",
              "A": "for (int k \u003d 0; k \u003c 0; k++)",
              "B": "for (int k \u003d 10; k \u003e 0; k--)",
              "C": "for (int k \u003d 0; k \u003c 10; k--)",
              "D": " for (int k \u003d 0; k \u003e 10; k++)",
              "answer": "C",
              "yourAnswer": "A"
            },
            "17": {
              "id": 17,
              "problem": "接口中的属性会自动被修饰为？",
              "A": "public static",
              "B": "static final",
              "C": "public static final",
              "D": "public final",
              "answer": "C",
              "yourAnswer": "A"
            },
            "18": {
              "id": 18,
              "problem": "如果类中成员的定义没有用访问权限修饰符，则该成员不能被（ ）访问。",
              "A": "同一个包中子类",
              "B": "子类",
              "C": "同一个包中其他类",
              "D": "其他包中所有类",
              "answer": "D",
              "yourAnswer": "A"
            },
            "19": {
              "id": 19,
              "problem": "( )是FileInputStream的子类，可用于读取二进制文件.",
              "A": "DataOutputStream",
              "B": "DataInputStream",
              "C": "Reader",
              "D": "Writer",
              "answer": "B",
              "yourAnswer": "A"
            },
            "20": {
              "id": 20,
              "problem": "假设现在有一个对象X,有一个属性a.则访问当前属性的方法是（）？",
              "A": "a.x",
              "B": "x.a",
              "C": "A.x",
              "D": "X.a",
              "answer": "D",
              "yourAnswer": "A"
            }
          }
        },
        "Java正则表达式": {
          "name": "Java正则表达式",
          "resource": "src\\pages\\Java正则表达式",
          "learned": false,
          "date": "Dec 7, 2020, 1:49:59 PM",
          "integerSelectProblemHashMap": {
            "1": {
              "id": 1,
              "problem": "在Java中用什么关键字修饰的方法可以直接通过类名来调用？( )",
              "A": "static",
              "B": "final",
              "C": "private",
              "D": "void",
              "answer": "A",
              "yourAnswer": "A"
            },
            "2": {
              "id": 2,
              "problem": "以下程序的结果是（ ）。class Base {     protected void fun(){         System.out.println(0);     } } class Derived extends Base {     protected void fun(){         System.out.println(1);     } } public class Test {     public static void main(String[] args) {         Base b1 \u003d new Derived();         b1.fun();     } }",
              "A": "运行错误",
              "B": "编译错误",
              "C": "0",
              "D": "1",
              "answer": "D",
              "yourAnswer": "A"
            },
            "3": {
              "id": 3,
              "problem": "有一段java 应用程序，它的主类名是a1，那么保存它的源文件名可以是( )",
              "A": "a1.java",
              "B": "a1.class",
              "C": "a1",
              "D": "都对",
              "answer": "A",
              "yourAnswer": "A"
            },
            "4": {
              "id": 4,
              "problem": "接口中有几个构造方法？",
              "A": "0",
              "B": "1",
              "C": "2",
              "D": "以上都不对",
              "answer": "A",
              "yourAnswer": "A"
            },
            "5": {
              "id": 5,
              "problem": "下面选项中关于 abstract 的使用正确的是( )。",
              "A": "private abstract void blood();",
              "B": "abstract final void blood ();",
              "C": "static abstract void blood ();",
              "D": "public abstract void blood ();",
              "answer": "D",
              "yourAnswer": "A"
            },
            "6": {
              "id": 6,
              "problem": "BufferedWriter类是Writer类的子类，BufferedWriter类中的（）方法可以插入一个换行符。",
              "A": "void newLine()",
              "B": "void close()",
              "C": "void flush()",
              "D": "void write(String str)",
              "answer": "A",
              "yourAnswer": "A"
            },
            "7": {
              "id": 7,
              "problem": "欲构造ArrayList类得一个实例，此类继承了List接口，下列哪个方法是正确的：",
              "A": "ArrayList myList \u003d new Object();",
              "B": "List myList \u003d new ArrayList();",
              "C": "ArraylList myList \u003d new List();",
              "D": "List myList \u003d new List();",
              "answer": "B",
              "yourAnswer": "A"
            },
            "8": {
              "id": 8,
              "problem": "以下程序的输出结果是（ ）。abstract class A {     public abstract void fun();     public void fun(int a) {         System.out.println(a);     } } class TestA extends A {     public static void main(String[] args) {         TestA ta \u003d new TestA();         ta.fun(1);     } }",
              "A": "1",
              "B": "编译错误",
              "C": "运行错误",
              "D": "无输出",
              "answer": "B",
              "yourAnswer": "A"
            },
            "9": {
              "id": 9,
              "problem": "一个类可同时定义许多同名的方法，这些方法的形式参数个数、类型或顺序各不相同，传回的值也可以不相同，这种特性称为（ ）。",
              "A": "继承",
              "B": "重写",
              "C": "重载",
              "D": "封装",
              "answer": "C",
              "yourAnswer": "A"
            },
            "10": {
              "id": 10,
              "problem": "所有Java类都直接或间接继承了哪个类？",
              "A": "String",
              "B": "Object",
              "C": "Interesting",
              "D": "Hero",
              "answer": "B",
              "yourAnswer": "A"
            },
            "11": {
              "id": 11,
              "problem": "以下标识符中哪项是不合法的( )",
              "A": "int",
              "B": "$double",
              "C": "hello",
              "D": "BigMeaninglessName",
              "answer": "A",
              "yourAnswer": "A"
            },
            "12": {
              "id": 12,
              "problem": "结构化程序设计所规定的三种基本控制结构是( )",
              "A": "输入、处理、输出",
              "B": "树形、网形、环形",
              "C": "顺序、选择、循环",
              "D": "主程序、子程序、函数",
              "answer": "C",
              "yourAnswer": "A"
            },
            "13": {
              "id": 13,
              "problem": "下列关于抽象方法的描述中，错误的是（ ）。",
              "A": "抽象方法声明只需给出方法头，不能写方法体，直接以分号结束",
              "B": "所有的方法都可以声明为抽象方法",
              "C": "构造方法不能声明为抽象方法",
              "D": "声明抽象方法使用关键字abstract修饰",
              "answer": "B",
              "yourAnswer": "A"
            },
            "14": {
              "id": 14,
              "problem": "下列关于打包的描述中，错误的是（ ）。",
              "A": "一个源文件中最多包含一条package语句，且必须是第一条语句",
              "B": "一个源文件中定义的类的字节码可以存放于不同的包中",
              "C": "若源文件中没有包含package语句，则类的字节码被放入无名包中",
              "D": "不在一个源文件中定义的子类和父类可以位于不同包中",
              "answer": "B",
              "yourAnswer": "A"
            },
            "15": {
              "id": 15,
              "problem": "Java的核心包中，提供编程应用的基本类包是（ ）",
              "A": "java.util",
              "B": "java.lang",
              "C": "java.applet",
              "D": "java.rmi",
              "answer": "B",
              "yourAnswer": "A"
            },
            "16": {
              "id": 16,
              "problem": "以下不是面向对象特征的是（ ）。",
              "A": "继承",
              "B": "代码复制",
              "C": "封装",
              "D": "多态",
              "answer": "B",
              "yourAnswer": "A"
            },
            "17": {
              "id": 17,
              "problem": "以下关于重载的说法错误的是（ ）。",
              "A": "重载的方法只要定义正确，调用时就不会有歧义性。",
              "B": "重载的方法通常实现相似的功能",
              "C": "重载的方法可以互相调用，提高代码复用",
              "D": "重载是多态的一种表现形式",
              "answer": "A",
              "yourAnswer": "A"
            },
            "18": {
              "id": 18,
              "problem": "不允许作为类及类的成员的访问控制符的是（）？",
              "A": "public",
              "B": "private",
              "C": "protected",
              "D": "static",
              "answer": "D",
              "yourAnswer": "A"
            },
            "19": {
              "id": 19,
              "problem": "已知A类具有以下四个成员方法，a是A类的对象，则a.fun(1, 3.14F)调用的是（ ）。",
              "A": "public void fun(int a, double b){…}",
              "B": "public int fun(double a, double b){…}",
              "C": "public void fun(float a, float b){…}",
              "D": "public float fun(int a, float b){…}",
              "answer": "D",
              "yourAnswer": "A"
            },
            "20": {
              "id": 20,
              "problem": "( )类带有缓冲区，可以把一批数据读到缓冲区，避免每次都从数据源读取数据进行字符编码转换。",
              "A": "Reader",
              "B": "FileReader",
              "C": "Writer",
              "D": "BufferedReader",
              "answer": "D",
              "yourAnswer": "A"
            }
          }
        },
        "JavaCharacter类": {
          "name": "JavaCharacter类",
          "resource": "src\\pages\\JavaCharacter类",
          "learned": false,
          "date": "Dec 7, 2020, 1:49:59 PM",
          "integerSelectProblemHashMap": {
            "1": {
              "id": 1,
              "problem": "以下没有体现出封装性的是（ ）。",
              "A": "将类的成员用访问权限修饰符加以访问控制",
              "B": "提供成员方法操作成员变量",
              "C": "将类的全部成员都设定为public权限",
              "D": "将类按照不同的包组织管理",
              "answer": "C",
              "yourAnswer": "A"
            },
            "2": {
              "id": 2,
              "problem": "java中所有类的父类是（）？",
              "A": "object",
              "B": "Father",
              "C": "Lang",
              "D": "Exception",
              "answer": "A",
              "yourAnswer": "A"
            },
            "3": {
              "id": 3,
              "problem": "以下关于继承的叙述正确的是( )",
              "A": "在Java中类只允许单一继承",
              "B": "在Java中一个类只能实现一个接口",
              "C": "在Java中一个类不能同时继承一个类和实现一个接口",
              "D": "在Java中接口只允许单一继承",
              "answer": "A",
              "yourAnswer": "A"
            },
            "4": {
              "id": 4,
              "problem": "已知A类具有以下四个成员方法，a是A类的对象，则a.fun(1, 3.14F)调用的是（ ）。",
              "A": "public void fun(int a, double b){…}",
              "B": "public int fun(double a, double b){…}",
              "C": "public void fun(float a, float b){…}",
              "D": "public float fun(int a, float b){…}",
              "answer": "D",
              "yourAnswer": "A"
            },
            "5": {
              "id": 5,
              "problem": "java中所有类的父类是（）？",
              "A": "object",
              "B": "Father",
              "C": "Lang",
              "D": "Exception",
              "answer": "A",
              "yourAnswer": "A"
            },
            "6": {
              "id": 6,
              "problem": "接口中方法的修饰符默认是？",
              "A": "public",
              "B": "abstract",
              "C": "public abstract",
              "D": "public static final",
              "answer": "C",
              "yourAnswer": "A"
            },
            "7": {
              "id": 7,
              "problem": "在创建对象时必须( )",
              "A": "先声明对象，然后才能使用对象",
              "B": "先声明对象，为对象分配内存空间，然后才能使用对象",
              "C": "先声明对象，为对象分配内存空间，对对象初始化，然后才能使用对象",
              "D": "上述说法都对",
              "answer": "C",
              "yourAnswer": "A"
            },
            "8": {
              "id": 8,
              "problem": "Java中( )",
              "A": "一个子类可以有多个父类，一个父类也可以有多个子类",
              "B": "一个子类可以有多个父类，但一个父类只可以有一个子类",
              "C": "一个子类可以有一个父类，但一个父类可以有多个子类",
              "D": "上述说法都不对",
              "answer": "C",
              "yourAnswer": "A"
            },
            "9": {
              "id": 9,
              "problem": "欲构造ArrayList类得一个实例，此类继承了List接口，下列哪个方法是正确的：",
              "A": "ArrayList myList \u003d new Object();",
              "B": "List myList \u003d new ArrayList();",
              "C": "ArraylList myList \u003d new List();",
              "D": "List myList \u003d new List();",
              "answer": "B",
              "yourAnswer": "A"
            },
            "10": {
              "id": 10,
              "problem": "下面哪一个循环会导致死循环？( )",
              "A": "for (int k \u003d 0; k \u003c 0; k++)",
              "B": "for (int k \u003d 10; k \u003e 0; k--)",
              "C": "for (int k \u003d 0; k \u003c 10; k--)",
              "D": " for (int k \u003d 0; k \u003e 10; k++)",
              "answer": "C",
              "yourAnswer": "A"
            },
            "11": {
              "id": 11,
              "problem": "Java的核心包中，提供编程应用的基本类包是（ ）",
              "A": "java.util",
              "B": "java.lang",
              "C": "java.applet",
              "D": "java.rmi",
              "answer": "B",
              "yourAnswer": "A"
            },
            "12": {
              "id": 12,
              "problem": "在创建对象时必须( )",
              "A": "先声明对象，然后才能使用对象",
              "B": "先声明对象，为对象分配内存空间，然后才能使用对象",
              "C": "先声明对象，为对象分配内存空间，对对象初始化，然后才能使用对象",
              "D": "上述说法都对",
              "answer": "C",
              "yourAnswer": "A"
            },
            "13": {
              "id": 13,
              "problem": "接口中的属性会自动被修饰为？",
              "A": "public static",
              "B": "static final",
              "C": "public static final",
              "D": "public final",
              "answer": "C",
              "yourAnswer": "A"
            },
            "14": {
              "id": 14,
              "problem": "以下关于重载的说法错误的是（ ）。",
              "A": "重载的方法只要定义正确，调用时就不会有歧义性。",
              "B": "重载的方法通常实现相似的功能",
              "C": "重载的方法可以互相调用，提高代码复用",
              "D": "重载是多态的一种表现形式",
              "answer": "A",
              "yourAnswer": "A"
            },
            "15": {
              "id": 15,
              "problem": "( )类带有缓冲区，可以把一批数据读到缓冲区，避免每次都从数据源读取数据进行字符编码转换。",
              "A": "Reader",
              "B": "FileReader",
              "C": "Writer",
              "D": "BufferedReader",
              "answer": "D",
              "yourAnswer": "A"
            },
            "16": {
              "id": 16,
              "problem": "接口中方法的修饰符默认是？",
              "A": "public",
              "B": "abstract",
              "C": "public abstract",
              "D": "public static final",
              "answer": "C",
              "yourAnswer": "A"
            },
            "17": {
              "id": 17,
              "problem": "下面哪一个循环会导致死循环？( )",
              "A": "for (int k \u003d 0; k \u003c 0; k++)",
              "B": "for (int k \u003d 10; k \u003e 0; k--)",
              "C": "for (int k \u003d 0; k \u003c 10; k--)",
              "D": " for (int k \u003d 0; k \u003e 10; k++)",
              "answer": "C",
              "yourAnswer": "A"
            },
            "18": {
              "id": 18,
              "problem": "以下关于重载的说法错误的是（ ）。",
              "A": "重载的方法只要定义正确，调用时就不会有歧义性。",
              "B": "重载的方法通常实现相似的功能",
              "C": "重载的方法可以互相调用，提高代码复用",
              "D": "重载是多态的一种表现形式",
              "answer": "A",
              "yourAnswer": "A"
            },
            "19": {
              "id": 19,
              "problem": "下列哪个是合法的Java标识符？( )",
              "A": "Tree\u0026Glasses",
              "B": "FirstJavaApplet",
              "C": "*theLastOne",
              "D": "273.5",
              "answer": "B",
              "yourAnswer": "A"
            },
            "20": {
              "id": 20,
              "problem": "已知A类具有以下四个成员方法，a是A类的对象，则a.fun(1, 3.14F)调用的是（ ）。",
              "A": "public void fun(int a, double b){…}",
              "B": "public int fun(double a, double b){…}",
              "C": "public void fun(float a, float b){…}",
              "D": "public float fun(int a, float b){…}",
              "answer": "D",
              "yourAnswer": "A"
            }
          }
        },
        "JavaStream、File、IO": {
          "name": "JavaStream、File、IO",
          "resource": "src\\pages\\JavaStream、File、IO",
          "learned": false,
          "date": "Dec 7, 2020, 1:49:59 PM",
          "integerSelectProblemHashMap": {
            "1": {
              "id": 1,
              "problem": "不是合法标识符的是（）",
              "A": "Javaworld",
              "B": "_sum",
              "C": "2Java Program",
              "D": "$abc",
              "answer": "C",
              "yourAnswer": "A"
            },
            "2": {
              "id": 2,
              "problem": "下列关于抽象方法的描述中，错误的是（ ）。",
              "A": "抽象方法声明只需给出方法头，不能写方法体，直接以分号结束",
              "B": "所有的方法都可以声明为抽象方法",
              "C": "构造方法不能声明为抽象方法",
              "D": "声明抽象方法使用关键字abstract修饰",
              "answer": "B",
              "yourAnswer": "A"
            },
            "3": {
              "id": 3,
              "problem": "欲构造ArrayList类得一个实例，此类继承了List接口，下列哪个方法是正确的：",
              "A": "ArrayList myList \u003d new Object();",
              "B": "List myList \u003d new ArrayList();",
              "C": "ArraylList myList \u003d new List();",
              "D": "List myList \u003d new List();",
              "answer": "B",
              "yourAnswer": "A"
            },
            "4": {
              "id": 4,
              "problem": "下列说法正确的有（）?",
              "A": "不需要定义类，就能创建对象",
              "B": "对象中必须有属性和方法",
              "C": "属性必须是简单变量",
              "D": "属性可以是简单变量，也可以是一个对象",
              "answer": "D",
              "yourAnswer": "A"
            },
            "5": {
              "id": 5,
              "problem": "( )是FileInputStream的子类，可用于读取二进制文件.",
              "A": "DataOutputStream",
              "B": "DataInputStream",
              "C": "Reader",
              "D": "Writer",
              "answer": "B",
              "yourAnswer": "A"
            },
            "6": {
              "id": 6,
              "problem": "不是合法标识符的是（）",
              "A": "BigO1Long$223",
              "B": "Utfint",
              "C": "$12s",
              "D": "3d",
              "answer": "D",
              "yourAnswer": "A"
            },
            "7": {
              "id": 7,
              "problem": "下列关于构造方法的叙述中，错误的是( )",
              "A": "Java语言规定构造方法名与类名必须相同",
              "B": "Java语言规定构造方法没有返回值，但不用void声明",
              "C": "Java语言规定构造方法不可以重载",
              "D": "Java语言规定构造方法只能通过new自动调用",
              "answer": "C",
              "yourAnswer": "A"
            },
            "8": {
              "id": 8,
              "problem": "以下关于多态的描述中错误的是（ ）。",
              "A": "重载和重写都是多态的表现形式",
              "B": "多态性分为动态多态性(动态绑定)和静态多态性两种",
              "C": "多态性可以加快代码的运行速度",
              "D": "多态性是面向对象的核心特征之一",
              "answer": "C",
              "yourAnswer": "A"
            },
            "9": {
              "id": 9,
              "problem": "类中存在一个方法int getValue(double x){…}，以下不能与这个方法重载的是（ ）。",
              "A": "int getValue(int x){…};",
              "B": "int getValue(float x){…};",
              "C": "int getValue(double t){…};",
              "D": "int getValue(double x, double y){…};",
              "answer": "C",
              "yourAnswer": "A"
            },
            "10": {
              "id": 10,
              "problem": "不是合法标识符的是（）",
              "A": "BigO1Long$223",
              "B": "Utfint",
              "C": "$12s",
              "D": "3d",
              "answer": "D",
              "yourAnswer": "A"
            },
            "11": {
              "id": 11,
              "problem": "以下关于多态的描述中错误的是（ ）。",
              "A": "重载和重写都是多态的表现形式",
              "B": "多态性分为动态多态性(动态绑定)和静态多态性两种",
              "C": "多态性可以加快代码的运行速度",
              "D": "多态性是面向对象的核心特征之一",
              "answer": "C",
              "yourAnswer": "A"
            },
            "12": {
              "id": 12,
              "problem": "不是合法标识符的是（）",
              "A": "Javaworld",
              "B": "_sum",
              "C": "2Java Program",
              "D": "$abc",
              "answer": "C",
              "yourAnswer": "A"
            },
            "13": {
              "id": 13,
              "problem": "下列说法正确的有（）?",
              "A": "不需要定义类，就能创建对象",
              "B": "对象中必须有属性和方法",
              "C": "属性必须是简单变量",
              "D": "属性可以是简单变量，也可以是一个对象",
              "answer": "D",
              "yourAnswer": "A"
            },
            "14": {
              "id": 14,
              "problem": "下面哪一个循环会导致死循环？( )",
              "A": "for (int k \u003d 0; k \u003c 0; k++)",
              "B": "for (int k \u003d 10; k \u003e 0; k--)",
              "C": "for (int k \u003d 0; k \u003c 10; k--)",
              "D": " for (int k \u003d 0; k \u003e 10; k++)",
              "answer": "C",
              "yourAnswer": "A"
            },
            "15": {
              "id": 15,
              "problem": "InputStream类的作用就是将文件中的数据读入到内存中，该类中的哪个方法可以关闭文件输入流对象？",
              "A": "int read()",
              "B": "void close()",
              "C": "int available()",
              "D": "int read(byte[] b)",
              "answer": "B",
              "yourAnswer": "A"
            },
            "16": {
              "id": 16,
              "problem": "以下不是面向对象特征的是（ ）。",
              "A": "继承",
              "B": "代码复制",
              "C": "封装",
              "D": "多态",
              "answer": "B",
              "yourAnswer": "A"
            },
            "17": {
              "id": 17,
              "problem": "一个类可同时定义许多同名的方法，这些方法的形式参数个数、类型或顺序各不相同，传回的值也可以不相同，这种特性称为（ ）。",
              "A": "继承",
              "B": "重写",
              "C": "重载",
              "D": "封装",
              "answer": "C",
              "yourAnswer": "A"
            },
            "18": {
              "id": 18,
              "problem": "以下关于继承的叙述正确的是( )",
              "A": "在Java中类只允许单一继承",
              "B": "在Java中一个类只能实现一个接口",
              "C": "在Java中一个类不能同时继承一个类和实现一个接口",
              "D": "在Java中接口只允许单一继承",
              "answer": "A",
              "yourAnswer": "A"
            },
            "19": {
              "id": 19,
              "problem": "下列哪一个变量不需要创建对象，直接可以根据类名调用该属性？",
              "A": "public String str;",
              "B": "String str;",
              "C": "public static String str;",
              "D": "str",
              "answer": "C",
              "yourAnswer": "A"
            },
            "20": {
              "id": 20,
              "problem": "若A是抽象类，B是其子类且A和B都有默认构造方法，则以下语句非法的是（ ）。",
              "A": "A a;",
              "B": "A a \u003d new A();",
              "C": "A a[] \u003d new A[4];",
              "D": "A a \u003d new B();",
              "answer": "B",
              "yourAnswer": "A"
            }
          }
        },
        "Java条件语句": {
          "name": "Java条件语句",
          "resource": "src\\pages\\Java条件语句",
          "learned": false,
          "date": "Dec 7, 2020, 1:49:59 PM",
          "integerSelectProblemHashMap": {
            "1": {
              "id": 1,
              "problem": "下面哪一个循环会导致死循环？( )",
              "A": "for (int k \u003d 0; k \u003c 0; k++)",
              "B": "for (int k \u003d 10; k \u003e 0; k--)",
              "C": "for (int k \u003d 0; k \u003c 10; k--)",
              "D": " for (int k \u003d 0; k \u003e 10; k++)",
              "answer": "C",
              "yourAnswer": "A"
            },
            "2": {
              "id": 2,
              "problem": "接口中所有的方法都是？",
              "A": "实现方法",
              "B": "抽象方法",
              "C": "无返回值的方法",
              "D": "有返回值的方法",
              "answer": "B",
              "yourAnswer": "A"
            },
            "3": {
              "id": 3,
              "problem": "下列关于抽象方法的描述中，错误的是（ ）。",
              "A": "抽象方法声明只需给出方法头，不能写方法体，直接以分号结束",
              "B": "所有的方法都可以声明为抽象方法",
              "C": "构造方法不能声明为抽象方法",
              "D": "声明抽象方法使用关键字abstract修饰",
              "answer": "B",
              "yourAnswer": "A"
            },
            "4": {
              "id": 4,
              "problem": "以下程序的结果是（ ）。class Base {     protected void fun(){         System.out.println(0);     } } class Derived extends Base {     protected void fun(){         System.out.println(1);     } } public class Test {     public static void main(String[] args) {         Base b1 \u003d new Derived();         b1.fun();     } }",
              "A": "运行错误",
              "B": "编译错误",
              "C": "0",
              "D": "1",
              "answer": "D",
              "yourAnswer": "A"
            },
            "5": {
              "id": 5,
              "problem": "不允许作为类及类的成员的访问控制符的是（）？",
              "A": "public",
              "B": "private",
              "C": "protected",
              "D": "static",
              "answer": "D",
              "yourAnswer": "A"
            },
            "6": {
              "id": 6,
              "problem": "以下没有体现出封装性的是（ ）。",
              "A": "将类的成员用访问权限修饰符加以访问控制",
              "B": "提供成员方法操作成员变量",
              "C": "将类的全部成员都设定为public权限",
              "D": "将类按照不同的包组织管理",
              "answer": "C",
              "yourAnswer": "A"
            },
            "7": {
              "id": 7,
              "problem": "假设现在有一个对象X,有一个属性a.则访问当前属性的方法是（）？",
              "A": "a.x",
              "B": "x.a",
              "C": "A.x",
              "D": "X.a",
              "answer": "D",
              "yourAnswer": "A"
            },
            "8": {
              "id": 8,
              "problem": "下列说法正确的有（）?",
              "A": "不需要定义类，就能创建对象",
              "B": "对象中必须有属性和方法",
              "C": "属性必须是简单变量",
              "D": "属性可以是简单变量，也可以是一个对象",
              "answer": "D",
              "yourAnswer": "A"
            },
            "9": {
              "id": 9,
              "problem": "欲构造ArrayList类得一个实例，此类继承了List接口，下列哪个方法是正确的：",
              "A": "ArrayList myList \u003d new Object();",
              "B": "List myList \u003d new ArrayList();",
              "C": "ArraylList myList \u003d new List();",
              "D": "List myList \u003d new List();",
              "answer": "B",
              "yourAnswer": "A"
            },
            "10": {
              "id": 10,
              "problem": "下面选项中关于 abstract 的使用正确的是( )。",
              "A": "private abstract void blood();",
              "B": "abstract final void blood ();",
              "C": "static abstract void blood ();",
              "D": "public abstract void blood ();",
              "answer": "D",
              "yourAnswer": "A"
            },
            "11": {
              "id": 11,
              "problem": "以下关于重载的说法错误的是（ ）。",
              "A": "重载的方法只要定义正确，调用时就不会有歧义性。",
              "B": "重载的方法通常实现相似的功能",
              "C": "重载的方法可以互相调用，提高代码复用",
              "D": "重载是多态的一种表现形式",
              "answer": "A",
              "yourAnswer": "A"
            },
            "12": {
              "id": 12,
              "problem": "下列不是重载方法的特征的是（ ）。",
              "A": "参数个数不同",
              "B": "返回值类型不同",
              "C": "参数类型不同",
              "D": "方法名相同",
              "answer": "B",
              "yourAnswer": "A"
            },
            "13": {
              "id": 13,
              "problem": "已知A类具有以下四个成员方法，a是A类的对象，则a.fun(1, 3.14F)调用的是（ ）。",
              "A": "public void fun(int a, double b){…}",
              "B": "public int fun(double a, double b){…}",
              "C": "public void fun(float a, float b){…}",
              "D": "public float fun(int a, float b){…}",
              "answer": "D",
              "yourAnswer": "A"
            },
            "14": {
              "id": 14,
              "problem": "欲构造ArrayList类得一个实例，此类继承了List接口，下列哪个方法是正确的：",
              "A": "ArrayList myList \u003d new Object();",
              "B": "List myList \u003d new ArrayList();",
              "C": "ArraylList myList \u003d new List();",
              "D": "List myList \u003d new List();",
              "answer": "B",
              "yourAnswer": "A"
            },
            "15": {
              "id": 15,
              "problem": "接口中所有的方法都是？",
              "A": "实现方法",
              "B": "抽象方法",
              "C": "无返回值的方法",
              "D": "有返回值的方法",
              "answer": "B",
              "yourAnswer": "A"
            },
            "16": {
              "id": 16,
              "problem": "下列说法正确的有（）?",
              "A": "不需要定义类，就能创建对象",
              "B": "对象中必须有属性和方法",
              "C": "属性必须是简单变量",
              "D": "属性可以是简单变量，也可以是一个对象",
              "answer": "D",
              "yourAnswer": "A"
            },
            "17": {
              "id": 17,
              "problem": "下列关于打包的描述中，错误的是（ ）。",
              "A": "一个源文件中最多包含一条package语句，且必须是第一条语句",
              "B": "一个源文件中定义的类的字节码可以存放于不同的包中",
              "C": "若源文件中没有包含package语句，则类的字节码被放入无名包中",
              "D": "不在一个源文件中定义的子类和父类可以位于不同包中",
              "answer": "B",
              "yourAnswer": "A"
            },
            "18": {
              "id": 18,
              "problem": "接口中所有的方法都是？",
              "A": "实现方法",
              "B": "抽象方法",
              "C": "无返回值的方法",
              "D": "有返回值的方法",
              "answer": "B",
              "yourAnswer": "A"
            },
            "19": {
              "id": 19,
              "problem": "以下关于继承的叙述正确的是( )",
              "A": "在Java中类只允许单一继承",
              "B": "在Java中一个类只能实现一个接口",
              "C": "在Java中一个类不能同时继承一个类和实现一个接口",
              "D": "在Java中接口只允许单一继承",
              "answer": "A",
              "yourAnswer": "A"
            },
            "20": {
              "id": 20,
              "problem": "在创建对象时必须( )",
              "A": "先声明对象，然后才能使用对象",
              "B": "先声明对象，为对象分配内存空间，然后才能使用对象",
              "C": "先声明对象，为对象分配内存空间，对对象初始化，然后才能使用对象",
              "D": "上述说法都对",
              "answer": "C",
              "yourAnswer": "A"
            }
          }
        },
        "Java运算符": {
          "name": "Java运算符",
          "resource": "src\\pages\\Java运算符",
          "learned": false,
          "date": "Dec 7, 2020, 1:49:59 PM",
          "integerSelectProblemHashMap": {
            "1": {
              "id": 1,
              "problem": "关于运算符\u003e\u003e和\u003e\u003e\u003e描述正确的是（）",
              "A": "\u003e\u003e执行移动",
              "B": "\u003e\u003e执行翻转",
              "C": "\u003e\u003e执行有符号左移，\u003e\u003e\u003e执行无符号左移",
              "D": "\u003e\u003e执行无符号左移，\u003e\u003e\u003e执行有符号左移",
              "answer": "C",
              "yourAnswer": "A"
            }
          }
        },
        "JavaNumber\u0026Math类": {
          "name": "JavaNumber\u0026Math类",
          "resource": "src\\pages\\JavaNumber\u0026Math类",
          "learned": false,
          "date": "Dec 7, 2020, 1:49:59 PM",
          "integerSelectProblemHashMap": {
            "1": {
              "id": 1,
              "problem": "下列选项中，抽象类的关键字是（）？",
              "A": "interface",
              "B": "implements",
              "C": "abstract",
              "D": "class",
              "answer": "C",
              "yourAnswer": "A"
            },
            "2": {
              "id": 2,
              "problem": "在创建对象时必须( )",
              "A": "先声明对象，然后才能使用对象",
              "B": "先声明对象，为对象分配内存空间，然后才能使用对象",
              "C": "先声明对象，为对象分配内存空间，对对象初始化，然后才能使用对象",
              "D": "上述说法都对",
              "answer": "C",
              "yourAnswer": "A"
            },
            "3": {
              "id": 3,
              "problem": "Java的核心包中，提供编程应用的基本类包是（ ）",
              "A": "java.util",
              "B": "java.lang",
              "C": "java.applet",
              "D": "java.rmi",
              "answer": "B",
              "yourAnswer": "A"
            },
            "4": {
              "id": 4,
              "problem": "若A是抽象类，B是其子类且A和B都有默认构造方法，则以下语句非法的是（ ）。",
              "A": "A a;",
              "B": "A a \u003d new A();",
              "C": "A a[] \u003d new A[4];",
              "D": "A a \u003d new B();",
              "answer": "B",
              "yourAnswer": "A"
            },
            "5": {
              "id": 5,
              "problem": "下列关于抽象类的描述中，错误的是（ ）。",
              "A": "抽象类中可以包含抽象方法，也可以不包含抽象方法",
              "B": "抽象类不能实例化，即使抽象类中没有声明抽象方法，也不能实例化",
              "C": "不能声明抽象类的变量(对象)",
              "D": "包含抽象方法的类，必须要声明为抽象类",
              "answer": "C",
              "yourAnswer": "A"
            },
            "6": {
              "id": 6,
              "problem": "下列关于抽象方法的描述中，错误的是（ ）。",
              "A": "抽象方法声明只需给出方法头，不能写方法体，直接以分号结束",
              "B": "所有的方法都可以声明为抽象方法",
              "C": "构造方法不能声明为抽象方法",
              "D": "声明抽象方法使用关键字abstract修饰",
              "answer": "B",
              "yourAnswer": "A"
            },
            "7": {
              "id": 7,
              "problem": "InputStream类的作用就是将文件中的数据读入到内存中，该类中的哪个方法可以关闭文件输入流对象？",
              "A": "int read()",
              "B": "void close()",
              "C": "int available()",
              "D": "int read(byte[] b)",
              "answer": "B",
              "yourAnswer": "A"
            },
            "8": {
              "id": 8,
              "problem": "下列关于抽象方法的描述中，错误的是（ ）。",
              "A": "抽象方法声明只需给出方法头，不能写方法体，直接以分号结束",
              "B": "所有的方法都可以声明为抽象方法",
              "C": "构造方法不能声明为抽象方法",
              "D": "声明抽象方法使用关键字abstract修饰",
              "answer": "B",
              "yourAnswer": "A"
            },
            "9": {
              "id": 9,
              "problem": "以下关于重载的说法错误的是（ ）。",
              "A": "重载的方法只要定义正确，调用时就不会有歧义性。",
              "B": "重载的方法通常实现相似的功能",
              "C": "重载的方法可以互相调用，提高代码复用",
              "D": "重载是多态的一种表现形式",
              "answer": "A",
              "yourAnswer": "A"
            },
            "10": {
              "id": 10,
              "problem": "以下不是面向对象特征的是（ ）。",
              "A": "继承",
              "B": "代码复制",
              "C": "封装",
              "D": "多态",
              "answer": "B",
              "yourAnswer": "A"
            },
            "11": {
              "id": 11,
              "problem": "对于私有构造方法，以下说法正确的是（ ）。",
              "A": "构造方法如果被限定为private则会产生编译错误",
              "B": "不能通过私有构造方法产生类的对象",
              "C": "私有构造方法不能在类外通过new调用创建对象",
              "D": "具有私有构造方法的类不能被继承",
              "answer": "C",
              "yourAnswer": "A"
            },
            "12": {
              "id": 12,
              "problem": "一个类要实现多个接口，用什么关键字?",
              "A": "extends",
              "B": "implements",
              "C": "instanceof",
              "D": "import",
              "answer": "B",
              "yourAnswer": "A"
            },
            "13": {
              "id": 13,
              "problem": "以下关于重载的说法错误的是（ ）。",
              "A": "重载的方法只要定义正确，调用时就不会有歧义性。",
              "B": "重载的方法通常实现相似的功能",
              "C": "重载的方法可以互相调用，提高代码复用",
              "D": "重载是多态的一种表现形式",
              "answer": "A",
              "yourAnswer": "A"
            },
            "14": {
              "id": 14,
              "problem": "已知A类具有以下四个成员方法，a是A类的对象，则a.fun(1, 3.14F)调用的是（ ）。",
              "A": "public void fun(int a, double b){…}",
              "B": "public int fun(double a, double b){…}",
              "C": "public void fun(float a, float b){…}",
              "D": "public float fun(int a, float b){…}",
              "answer": "D",
              "yourAnswer": "A"
            },
            "15": {
              "id": 15,
              "problem": "以下关于继承的叙述正确的是( )",
              "A": "在Java中类只允许单一继承",
              "B": "在Java中一个类只能实现一个接口",
              "C": "在Java中一个类不能同时继承一个类和实现一个接口",
              "D": "在Java中接口只允许单一继承",
              "answer": "A",
              "yourAnswer": "A"
            },
            "16": {
              "id": 16,
              "problem": "下列关于构造方法的叙述中，错误的是( )",
              "A": "Java语言规定构造方法名与类名必须相同",
              "B": "Java语言规定构造方法没有返回值，但不用void声明",
              "C": "Java语言规定构造方法不可以重载",
              "D": "Java语言规定构造方法只能通过new自动调用",
              "answer": "C",
              "yourAnswer": "A"
            },
            "17": {
              "id": 17,
              "problem": "变量命名规范说法正确的是( )",
              "A": "不同类型的变量，可以起相同的名字；",
              "B": "变量由字母、下划线、数字、$符号随意组成；",
              "C": "变量不能以数字作为开头；",
              "D": "A和a在java中是同一个变量；",
              "answer": "A",
              "yourAnswer": "A"
            },
            "18": {
              "id": 18,
              "problem": "Java中( )",
              "A": "一个子类可以有多个父类，一个父类也可以有多个子类",
              "B": "一个子类可以有多个父类，但一个父类只可以有一个子类",
              "C": "一个子类可以有一个父类，但一个父类可以有多个子类",
              "D": "上述说法都不对",
              "answer": "C",
              "yourAnswer": "A"
            },
            "19": {
              "id": 19,
              "problem": "下面哪个是applet传递参数的正确方式？（ ）",
              "A": "\u003capplet code\u003dTest.class age\u003d33 width\u003d1 height\u003d1\u003e",
              "B": "\u003cparam name\u003dage value\u003d33\u003e",
              "C": "\u003capplet code\u003dTest.class name\u003dage value\u003d33 width\u003d1 height\u003d1\u003e",
              "D": "\u003capplet Test 33\u003e",
              "answer": "B",
              "yourAnswer": "A"
            },
            "20": {
              "id": 20,
              "problem": "一个类要实现接口的功能，可以实现几个方法？",
              "A": "0",
              "B": "1",
              "C": "2",
              "D": "全部",
              "answer": "D",
              "yourAnswer": "A"
            }
          }
        },
        "JavaString类": {
          "name": "JavaString类",
          "resource": "src\\pages\\JavaString类",
          "learned": false,
          "date": "Dec 7, 2020, 1:49:59 PM",
          "integerSelectProblemHashMap": {
            "1": {
              "id": 1,
              "problem": "下列关于引入包的描述中，错误的是（ ）。",
              "A": "使用项目中其他包中的类时，需要在源程序中写import语句",
              "B": "import语句写在类声明的上面，package语句的下面",
              "C": "import可以引入包中所有类或其中一个类",
              "D": "import语句必须是源文件中第一条语句",
              "answer": "D",
              "yourAnswer": "A"
            },
            "2": {
              "id": 2,
              "problem": "如果类中成员的定义没有用访问权限修饰符，则该成员不能被（ ）访问。",
              "A": "同一个包中子类",
              "B": "子类",
              "C": "同一个包中其他类",
              "D": "其他包中所有类",
              "answer": "D",
              "yourAnswer": "A"
            },
            "3": {
              "id": 3,
              "problem": "下列关于打包的描述中，错误的是（ ）。",
              "A": "一个源文件中最多包含一条package语句，且必须是第一条语句",
              "B": "一个源文件中定义的类的字节码可以存放于不同的包中",
              "C": "若源文件中没有包含package语句，则类的字节码被放入无名包中",
              "D": "不在一个源文件中定义的子类和父类可以位于不同包中",
              "answer": "B",
              "yourAnswer": "A"
            },
            "4": {
              "id": 4,
              "problem": "一个类可同时定义许多同名的方法，这些方法的形式参数个数、类型或顺序各不相同，传回的值也可以不相同，这种特性称为（ ）。",
              "A": "继承",
              "B": "重写",
              "C": "重载",
              "D": "封装",
              "answer": "C",
              "yourAnswer": "A"
            },
            "5": {
              "id": 5,
              "problem": "下列关于包的描述中错误的是（ ）",
              "A": "使用包的原因之一是避免类名重复",
              "B": "包是由.class文件组成的一个集合，是一个文件夹",
              "C": "功能相同或者相关的类一般组织在一个包中",
              "D": "包只能定义一层，即包中不能再有包",
              "answer": "D",
              "yourAnswer": "A"
            },
            "6": {
              "id": 6,
              "problem": "下列关于引入包的描述中，错误的是（ ）。",
              "A": "使用项目中其他包中的类时，需要在源程序中写import语句",
              "B": "import语句写在类声明的上面，package语句的下面",
              "C": "import可以引入包中所有类或其中一个类",
              "D": "import语句必须是源文件中第一条语句",
              "answer": "D",
              "yourAnswer": "A"
            },
            "7": {
              "id": 7,
              "problem": "下列关于打包的描述中，错误的是（ ）。",
              "A": "一个源文件中最多包含一条package语句，且必须是第一条语句",
              "B": "一个源文件中定义的类的字节码可以存放于不同的包中",
              "C": "若源文件中没有包含package语句，则类的字节码被放入无名包中",
              "D": "不在一个源文件中定义的子类和父类可以位于不同包中",
              "answer": "B",
              "yourAnswer": "A"
            },
            "8": {
              "id": 8,
              "problem": "一个类可同时定义许多同名的方法，这些方法的形式参数个数、类型或顺序各不相同，传回的值也可以不相同，这种特性称为（ ）。",
              "A": "继承",
              "B": "重写",
              "C": "重载",
              "D": "封装",
              "answer": "C",
              "yourAnswer": "A"
            },
            "9": {
              "id": 9,
              "problem": "Java中( )",
              "A": "一个子类可以有多个父类，一个父类也可以有多个子类",
              "B": "一个子类可以有多个父类，但一个父类只可以有一个子类",
              "C": "一个子类可以有一个父类，但一个父类可以有多个子类",
              "D": "上述说法都不对",
              "answer": "C",
              "yourAnswer": "A"
            },
            "10": {
              "id": 10,
              "problem": "（ ）是Java语言的关键字。",
              "A": "public",
              "B": "static",
              "C": "void",
              "D": "以上都是",
              "answer": "D",
              "yourAnswer": "A"
            },
            "11": {
              "id": 11,
              "problem": "接口中所有的方法都是？",
              "A": "实现方法",
              "B": "抽象方法",
              "C": "无返回值的方法",
              "D": "有返回值的方法",
              "answer": "B",
              "yourAnswer": "A"
            },
            "12": {
              "id": 12,
              "problem": "下列说法正确的有（）?",
              "A": "不需要定义类，就能创建对象",
              "B": "对象中必须有属性和方法",
              "C": "属性必须是简单变量",
              "D": "属性可以是简单变量，也可以是一个对象",
              "answer": "D",
              "yourAnswer": "A"
            },
            "13": {
              "id": 13,
              "problem": "以下标识符中哪项是不合法的( )",
              "A": "int",
              "B": "$double",
              "C": "hello",
              "D": "BigMeaninglessName",
              "answer": "A",
              "yourAnswer": "A"
            },
            "14": {
              "id": 14,
              "problem": "下列关于包的描述中错误的是（ ）",
              "A": "使用包的原因之一是避免类名重复",
              "B": "包是由.class文件组成的一个集合，是一个文件夹",
              "C": "功能相同或者相关的类一般组织在一个包中",
              "D": "包只能定义一层，即包中不能再有包",
              "answer": "D",
              "yourAnswer": "A"
            },
            "15": {
              "id": 15,
              "problem": "下面哪个是applet传递参数的正确方式？（ ）",
              "A": "\u003capplet code\u003dTest.class age\u003d33 width\u003d1 height\u003d1\u003e",
              "B": "\u003cparam name\u003dage value\u003d33\u003e",
              "C": "\u003capplet code\u003dTest.class name\u003dage value\u003d33 width\u003d1 height\u003d1\u003e",
              "D": "\u003capplet Test 33\u003e",
              "answer": "B",
              "yourAnswer": "A"
            },
            "16": {
              "id": 16,
              "problem": "使用字节输出流FileOutputStream类中的哪个构造方法，在写数据时能够不覆盖文件中原有的内容？",
              "A": "FileOutputStream(String name)",
              "B": "FileOutputStream(File file,String name)",
              "C": "FileOutputStream(String name,boolean append)",
              "D": "FileOutputStream(File file)",
              "answer": "C",
              "yourAnswer": "A"
            },
            "17": {
              "id": 17,
              "problem": "下面哪一个循环会导致死循环？( )",
              "A": "for (int k \u003d 0; k \u003c 0; k++)",
              "B": "for (int k \u003d 10; k \u003e 0; k--)",
              "C": "for (int k \u003d 0; k \u003c 10; k--)",
              "D": " for (int k \u003d 0; k \u003e 10; k++)",
              "answer": "C",
              "yourAnswer": "A"
            },
            "18": {
              "id": 18,
              "problem": "BufferedWriter类是Writer类的子类，BufferedWriter类中的（）方法可以插入一个换行符。",
              "A": "void newLine()",
              "B": "void close()",
              "C": "void flush()",
              "D": "void write(String str)",
              "answer": "A",
              "yourAnswer": "A"
            },
            "19": {
              "id": 19,
              "problem": "不允许作为类及类的成员的访问控制符的是（）？",
              "A": "public",
              "B": "private",
              "C": "protected",
              "D": "static",
              "answer": "D",
              "yourAnswer": "A"
            },
            "20": {
              "id": 20,
              "problem": "以下标识符中哪项是不合法的( )",
              "A": "int",
              "B": "$double",
              "C": "hello",
              "D": "BigMeaninglessName",
              "answer": "A",
              "yourAnswer": "A"
            }
          }
        },
        "Java数组": {
          "name": "Java数组",
          "resource": "src\\pages\\Java数组",
          "learned": false,
          "date": "Dec 7, 2020, 1:49:59 PM",
          "integerSelectProblemHashMap": {
            "1": {
              "id": 1,
              "problem": "java中所有类的父类是（）？",
              "A": "object",
              "B": "Father",
              "C": "Lang",
              "D": "Exception",
              "answer": "A",
              "yourAnswer": "A"
            },
            "2": {
              "id": 2,
              "problem": "类中存在一个方法int getValue(double x){…}，以下不能与这个方法重载的是（ ）。",
              "A": "int getValue(int x){…};",
              "B": "int getValue(float x){…};",
              "C": "int getValue(double t){…};",
              "D": "int getValue(double x, double y){…};",
              "answer": "C",
              "yourAnswer": "A"
            },
            "3": {
              "id": 3,
              "problem": "类中存在一个方法int getValue(double x){…}，以下不能与这个方法重载的是（ ）。",
              "A": "int getValue(int x){…};",
              "B": "int getValue(float x){…};",
              "C": "int getValue(double t){…};",
              "D": "int getValue(double x, double y){…};",
              "answer": "C",
              "yourAnswer": "A"
            },
            "4": {
              "id": 4,
              "problem": "下列哪一个变量不需要创建对象，直接可以根据类名调用该属性？",
              "A": "public String str;",
              "B": "String str;",
              "C": "public static String str;",
              "D": "str",
              "answer": "C",
              "yourAnswer": "A"
            },
            "5": {
              "id": 5,
              "problem": "下列关于包的描述中错误的是（ ）",
              "A": "使用包的原因之一是避免类名重复",
              "B": "包是由.class文件组成的一个集合，是一个文件夹",
              "C": "功能相同或者相关的类一般组织在一个包中",
              "D": "包只能定义一层，即包中不能再有包",
              "answer": "D",
              "yourAnswer": "A"
            },
            "6": {
              "id": 6,
              "problem": "以下关于重载的说法错误的是（ ）。",
              "A": "重载的方法只要定义正确，调用时就不会有歧义性。",
              "B": "重载的方法通常实现相似的功能",
              "C": "重载的方法可以互相调用，提高代码复用",
              "D": "重载是多态的一种表现形式",
              "answer": "A",
              "yourAnswer": "A"
            },
            "7": {
              "id": 7,
              "problem": "下列不是重载方法的特征的是（ ）。",
              "A": "参数个数不同",
              "B": "返回值类型不同",
              "C": "参数类型不同",
              "D": "方法名相同",
              "answer": "B",
              "yourAnswer": "A"
            },
            "8": {
              "id": 8,
              "problem": "类中存在一个方法int getValue(int x){…}，以下能与这个方法重载的是（ ）。",
              "A": "public getValue(int x){…};",
              "B": "void getValue(int x){…};",
              "C": "int getValue(int x, int y){…};",
              "D": "int get(int x){…};",
              "answer": "C",
              "yourAnswer": "A"
            },
            "9": {
              "id": 9,
              "problem": "接口中的属性会自动被修饰为？",
              "A": "public static",
              "B": "static final",
              "C": "public static final",
              "D": "public final",
              "answer": "C",
              "yourAnswer": "A"
            },
            "10": {
              "id": 10,
              "problem": "不是合法标识符的是（）",
              "A": "Javaworld",
              "B": "_sum",
              "C": "2Java Program",
              "D": "$abc",
              "answer": "C",
              "yourAnswer": "A"
            },
            "11": {
              "id": 11,
              "problem": "java中所有类的父类是（）？",
              "A": "object",
              "B": "Father",
              "C": "Lang",
              "D": "Exception",
              "answer": "A",
              "yourAnswer": "A"
            },
            "12": {
              "id": 12,
              "problem": "一个类要实现接口的功能，可以实现几个方法？",
              "A": "0",
              "B": "1",
              "C": "2",
              "D": "全部",
              "answer": "D",
              "yourAnswer": "A"
            },
            "13": {
              "id": 13,
              "problem": "使用字节输出流FileOutputStream类中的哪个构造方法，在写数据时能够不覆盖文件中原有的内容？",
              "A": "FileOutputStream(String name)",
              "B": "FileOutputStream(File file,String name)",
              "C": "FileOutputStream(String name,boolean append)",
              "D": "FileOutputStream(File file)",
              "answer": "C",
              "yourAnswer": "A"
            },
            "14": {
              "id": 14,
              "problem": "以下关于继承的叙述正确的是( )",
              "A": "在Java中类只允许单一继承",
              "B": "在Java中一个类只能实现一个接口",
              "C": "在Java中一个类不能同时继承一个类和实现一个接口",
              "D": "在Java中接口只允许单一继承",
              "answer": "A",
              "yourAnswer": "A"
            },
            "15": {
              "id": 15,
              "problem": "在创建对象时必须( )",
              "A": "先声明对象，然后才能使用对象",
              "B": "先声明对象，为对象分配内存空间，然后才能使用对象",
              "C": "先声明对象，为对象分配内存空间，对对象初始化，然后才能使用对象",
              "D": "上述说法都对",
              "answer": "C",
              "yourAnswer": "A"
            },
            "16": {
              "id": 16,
              "problem": "接口中所有的方法都是？",
              "A": "实现方法",
              "B": "抽象方法",
              "C": "无返回值的方法",
              "D": "有返回值的方法",
              "answer": "B",
              "yourAnswer": "A"
            },
            "17": {
              "id": 17,
              "problem": "不允许作为类及类的成员的访问控制符的是（）？",
              "A": "public",
              "B": "private",
              "C": "protected",
              "D": "static",
              "answer": "D",
              "yourAnswer": "A"
            },
            "18": {
              "id": 18,
              "problem": "下列关于抽象类的描述中，错误的是（ ）。",
              "A": "抽象类中可以包含抽象方法，也可以不包含抽象方法",
              "B": "抽象类不能实例化，即使抽象类中没有声明抽象方法，也不能实例化",
              "C": "不能声明抽象类的变量(对象)",
              "D": "包含抽象方法的类，必须要声明为抽象类",
              "answer": "C",
              "yourAnswer": "A"
            },
            "19": {
              "id": 19,
              "problem": "欲构造ArrayList类得一个实例，此类继承了List接口，下列哪个方法是正确的：",
              "A": "ArrayList myList \u003d new Object();",
              "B": "List myList \u003d new ArrayList();",
              "C": "ArraylList myList \u003d new List();",
              "D": "List myList \u003d new List();",
              "answer": "B",
              "yourAnswer": "A"
            },
            "20": {
              "id": 20,
              "problem": "一个类可同时定义许多同名的方法，这些方法的形式参数个数、类型或顺序各不相同，传回的值也可以不相同，这种特性称为（ ）。",
              "A": "继承",
              "B": "重写",
              "C": "重载",
              "D": "封装",
              "answer": "C",
              "yourAnswer": "A"
            }
          }
        },
        "Javaswitchcase": {
          "name": "Javaswitchcase",
          "resource": "src\\pages\\Javaswitchcase",
          "learned": false,
          "date": "Dec 7, 2020, 1:49:59 PM",
          "integerSelectProblemHashMap": {
            "1": {
              "id": 1,
              "problem": "一个类可同时定义许多同名的方法，这些方法的形式参数个数、类型或顺序各不相同，传回的值也可以不相同，这种特性称为（ ）。",
              "A": "继承",
              "B": "重写",
              "C": "重载",
              "D": "封装",
              "answer": "C",
              "yourAnswer": "A"
            },
            "2": {
              "id": 2,
              "problem": "如果类中成员的定义没有用访问权限修饰符，则该成员不能被（ ）访问。",
              "A": "同一个包中子类",
              "B": "子类",
              "C": "同一个包中其他类",
              "D": "其他包中所有类",
              "answer": "D",
              "yourAnswer": "A"
            },
            "3": {
              "id": 3,
              "problem": "使用字节输出流FileOutputStream类中的哪个构造方法，在写数据时能够不覆盖文件中原有的内容？",
              "A": "FileOutputStream(String name)",
              "B": "FileOutputStream(File file,String name)",
              "C": "FileOutputStream(String name,boolean append)",
              "D": "FileOutputStream(File file)",
              "answer": "C",
              "yourAnswer": "A"
            },
            "4": {
              "id": 4,
              "problem": "下面哪个是applet传递参数的正确方式？（ ）",
              "A": "\u003capplet code\u003dTest.class age\u003d33 width\u003d1 height\u003d1\u003e",
              "B": "\u003cparam name\u003dage value\u003d33\u003e",
              "C": "\u003capplet code\u003dTest.class name\u003dage value\u003d33 width\u003d1 height\u003d1\u003e",
              "D": "\u003capplet Test 33\u003e",
              "answer": "B",
              "yourAnswer": "A"
            },
            "5": {
              "id": 5,
              "problem": "以下程序的输出结果是（ ）。abstract class A {     public abstract void fun();     public void fun(int a) {         System.out.println(a);     } } class TestA extends A {     public static void main(String[] args) {         TestA ta \u003d new TestA();         ta.fun(1);     } }",
              "A": "1",
              "B": "编译错误",
              "C": "运行错误",
              "D": "无输出",
              "answer": "B",
              "yourAnswer": "A"
            },
            "6": {
              "id": 6,
              "problem": "有一段java 应用程序，它的主类名是a1，那么保存它的源文件名可以是( )",
              "A": "a1.java",
              "B": "a1.class",
              "C": "a1",
              "D": "都对",
              "answer": "A",
              "yourAnswer": "A"
            },
            "7": {
              "id": 7,
              "problem": "对于私有构造方法，以下说法正确的是（ ）。",
              "A": "构造方法如果被限定为private则会产生编译错误",
              "B": "不能通过私有构造方法产生类的对象",
              "C": "私有构造方法不能在类外通过new调用创建对象",
              "D": "具有私有构造方法的类不能被继承",
              "answer": "C",
              "yourAnswer": "A"
            },
            "8": {
              "id": 8,
              "problem": "接口中所有的方法都是？",
              "A": "实现方法",
              "B": "抽象方法",
              "C": "无返回值的方法",
              "D": "有返回值的方法",
              "answer": "B",
              "yourAnswer": "A"
            },
            "9": {
              "id": 9,
              "problem": "若A是抽象类，B是其子类且A和B都有默认构造方法，则以下语句非法的是（ ）。",
              "A": "A a;",
              "B": "A a \u003d new A();",
              "C": "A a[] \u003d new A[4];",
              "D": "A a \u003d new B();",
              "answer": "B",
              "yourAnswer": "A"
            },
            "10": {
              "id": 10,
              "problem": "类中存在一个方法int getValue(int x){…}，以下能与这个方法重载的是（ ）。",
              "A": "public getValue(int x){…};",
              "B": "void getValue(int x){…};",
              "C": "int getValue(int x, int y){…};",
              "D": "int get(int x){…};",
              "answer": "C",
              "yourAnswer": "A"
            },
            "11": {
              "id": 11,
              "problem": "java中所有类的父类是（）？",
              "A": "object",
              "B": "Father",
              "C": "Lang",
              "D": "Exception",
              "answer": "A",
              "yourAnswer": "A"
            },
            "12": {
              "id": 12,
              "problem": "欲构造ArrayList类得一个实例，此类继承了List接口，下列哪个方法是正确的：",
              "A": "ArrayList myList \u003d new Object();",
              "B": "List myList \u003d new ArrayList();",
              "C": "ArraylList myList \u003d new List();",
              "D": "List myList \u003d new List();",
              "answer": "B",
              "yourAnswer": "A"
            },
            "13": {
              "id": 13,
              "problem": "BufferedWriter类是Writer类的子类，BufferedWriter类中的（）方法可以插入一个换行符。",
              "A": "void newLine()",
              "B": "void close()",
              "C": "void flush()",
              "D": "void write(String str)",
              "answer": "A",
              "yourAnswer": "A"
            },
            "14": {
              "id": 14,
              "problem": "如果类中成员的定义没有用访问权限修饰符，则该成员不能被（ ）访问。",
              "A": "同一个包中子类",
              "B": "子类",
              "C": "同一个包中其他类",
              "D": "其他包中所有类",
              "answer": "D",
              "yourAnswer": "A"
            },
            "15": {
              "id": 15,
              "problem": "下列说法正确的有（）?",
              "A": "不需要定义类，就能创建对象",
              "B": "对象中必须有属性和方法",
              "C": "属性必须是简单变量",
              "D": "属性可以是简单变量，也可以是一个对象",
              "answer": "D",
              "yourAnswer": "A"
            },
            "16": {
              "id": 16,
              "problem": "下列哪个是合法的Java标识符？( )",
              "A": "Tree\u0026Glasses",
              "B": "FirstJavaApplet",
              "C": "*theLastOne",
              "D": "273.5",
              "answer": "B",
              "yourAnswer": "A"
            },
            "17": {
              "id": 17,
              "problem": "结构化程序设计所规定的三种基本控制结构是( )",
              "A": "输入、处理、输出",
              "B": "树形、网形、环形",
              "C": "顺序、选择、循环",
              "D": "主程序、子程序、函数",
              "answer": "C",
              "yourAnswer": "A"
            },
            "18": {
              "id": 18,
              "problem": "接口中方法的修饰符默认是？",
              "A": "public",
              "B": "abstract",
              "C": "public abstract",
              "D": "public static final",
              "answer": "C",
              "yourAnswer": "A"
            },
            "19": {
              "id": 19,
              "problem": "java中所有类的父类是（）？",
              "A": "object",
              "B": "Father",
              "C": "Lang",
              "D": "Exception",
              "answer": "A",
              "yourAnswer": "A"
            },
            "20": {
              "id": 20,
              "problem": "以下程序的输出结果是（ ）。abstract class A {     public abstract void fun();     public void fun(int a) {         System.out.println(a);     } } class TestA extends A {     public static void main(String[] args) {         TestA ta \u003d new TestA();         ta.fun(1);     } }",
              "A": "1",
              "B": "编译错误",
              "C": "运行错误",
              "D": "无输出",
              "answer": "B",
              "yourAnswer": "A"
            }
          }
        },
        "Java异常处理": {
          "name": "Java异常处理",
          "resource": "src\\pages\\Java异常处理",
          "learned": false,
          "date": "Dec 7, 2020, 1:49:59 PM",
          "integerSelectProblemHashMap": {
            "1": {
              "id": 1,
              "problem": "以下标识符中哪项是不合法的( )",
              "A": "int",
              "B": "$double",
              "C": "hello",
              "D": "BigMeaninglessName",
              "answer": "A",
              "yourAnswer": "A"
            },
            "2": {
              "id": 2,
              "problem": "一个类可同时定义许多同名的方法，这些方法的形式参数个数、类型或顺序各不相同，传回的值也可以不相同，这种特性称为（ ）。",
              "A": "继承",
              "B": "重写",
              "C": "重载",
              "D": "封装",
              "answer": "C",
              "yourAnswer": "A"
            },
            "3": {
              "id": 3,
              "problem": "使用字节输出流FileOutputStream类中的哪个构造方法，在写数据时能够不覆盖文件中原有的内容？",
              "A": "FileOutputStream(String name)",
              "B": "FileOutputStream(File file,String name)",
              "C": "FileOutputStream(String name,boolean append)",
              "D": "FileOutputStream(File file)",
              "answer": "C",
              "yourAnswer": "A"
            },
            "4": {
              "id": 4,
              "problem": "有一段java 应用程序，它的主类名是a1，那么保存它的源文件名可以是( )",
              "A": "a1.java",
              "B": "a1.class",
              "C": "a1",
              "D": "都对",
              "answer": "A",
              "yourAnswer": "A"
            },
            "5": {
              "id": 5,
              "problem": "表达式(11+3*8)/4%3的值是( )",
              "A": "31",
              "B": "0",
              "C": "1",
              "D": "2",
              "answer": "D",
              "yourAnswer": "A"
            },
            "6": {
              "id": 6,
              "problem": "( )是FileInputStream的子类，可用于读取二进制文件.",
              "A": "DataOutputStream",
              "B": "DataInputStream",
              "C": "Reader",
              "D": "Writer",
              "answer": "B",
              "yourAnswer": "A"
            },
            "7": {
              "id": 7,
              "problem": "下列关于抽象类的描述中，错误的是（ ）。",
              "A": "抽象类中可以包含抽象方法，也可以不包含抽象方法",
              "B": "抽象类不能实例化，即使抽象类中没有声明抽象方法，也不能实例化",
              "C": "不能声明抽象类的变量(对象)",
              "D": "包含抽象方法的类，必须要声明为抽象类",
              "answer": "C",
              "yourAnswer": "A"
            },
            "8": {
              "id": 8,
              "problem": "假设现在有一个对象X,有一个属性a.则访问当前属性的方法是（）？",
              "A": "a.x",
              "B": "x.a",
              "C": "A.x",
              "D": "X.a",
              "answer": "D",
              "yourAnswer": "A"
            },
            "9": {
              "id": 9,
              "problem": "下列关于打包的描述中，错误的是（ ）。",
              "A": "一个源文件中最多包含一条package语句，且必须是第一条语句",
              "B": "一个源文件中定义的类的字节码可以存放于不同的包中",
              "C": "若源文件中没有包含package语句，则类的字节码被放入无名包中",
              "D": "不在一个源文件中定义的子类和父类可以位于不同包中",
              "answer": "B",
              "yourAnswer": "A"
            },
            "10": {
              "id": 10,
              "problem": "以下抽象类定义中合法的是（ ）。",
              "A": "abstract Animal{     abstract void growl(); }",
              "B": "class abstract Animal{     abstract void growl(); }",
              "C": "abstract class Animal {     abstract void growl(); } ",
              "D": "abstract class Animal {     abstract void growl() {     } }",
              "answer": "C",
              "yourAnswer": "A"
            },
            "11": {
              "id": 11,
              "problem": "Java中( )",
              "A": "一个子类可以有多个父类，一个父类也可以有多个子类",
              "B": "一个子类可以有多个父类，但一个父类只可以有一个子类",
              "C": "一个子类可以有一个父类，但一个父类可以有多个子类",
              "D": "上述说法都不对",
              "answer": "C",
              "yourAnswer": "A"
            },
            "12": {
              "id": 12,
              "problem": "以下抽象类定义中合法的是（ ）。",
              "A": "abstract Animal{     abstract void growl(); }",
              "B": "class abstract Animal{     abstract void growl(); }",
              "C": "abstract class Animal {     abstract void growl(); } ",
              "D": "abstract class Animal {     abstract void growl() {     } }",
              "answer": "C",
              "yourAnswer": "A"
            },
            "13": {
              "id": 13,
              "problem": "以下程序的输出结果是（ ）。abstract class A {     public abstract void fun();     public void fun(int a) {         System.out.println(a);     } } class TestA extends A {     public static void main(String[] args) {         TestA ta \u003d new TestA();         ta.fun(1);     } }",
              "A": "1",
              "B": "编译错误",
              "C": "运行错误",
              "D": "无输出",
              "answer": "B",
              "yourAnswer": "A"
            },
            "14": {
              "id": 14,
              "problem": "一个类可同时定义许多同名的方法，这些方法的形式参数个数、类型或顺序各不相同，传回的值也可以不相同，这种特性称为（ ）。",
              "A": "继承",
              "B": "重写",
              "C": "重载",
              "D": "封装",
              "answer": "C",
              "yourAnswer": "A"
            },
            "15": {
              "id": 15,
              "problem": "有一段java 应用程序，它的主类名是a1，那么保存它的源文件名可以是( )",
              "A": "a1.java",
              "B": "a1.class",
              "C": "a1",
              "D": "都对",
              "answer": "A",
              "yourAnswer": "A"
            },
            "16": {
              "id": 16,
              "problem": "下列不可作为java语言修饰符的是( )",
              "A": "a1",
              "B": "$1",
              "C": "_1",
              "D": "11",
              "answer": "D",
              "yourAnswer": "A"
            },
            "17": {
              "id": 17,
              "problem": "( )类带有缓冲区，可以把一批数据读到缓冲区，避免每次都从数据源读取数据进行字符编码转换。",
              "A": "Reader",
              "B": "FileReader",
              "C": "Writer",
              "D": "BufferedReader",
              "answer": "D",
              "yourAnswer": "A"
            },
            "18": {
              "id": 18,
              "problem": "对于私有构造方法，以下说法正确的是（ ）。",
              "A": "构造方法如果被限定为private则会产生编译错误",
              "B": "不能通过私有构造方法产生类的对象",
              "C": "私有构造方法不能在类外通过new调用创建对象",
              "D": "具有私有构造方法的类不能被继承",
              "answer": "C",
              "yourAnswer": "A"
            },
            "19": {
              "id": 19,
              "problem": "接口中所有的方法都是？",
              "A": "实现方法",
              "B": "抽象方法",
              "C": "无返回值的方法",
              "D": "有返回值的方法",
              "answer": "B",
              "yourAnswer": "A"
            },
            "20": {
              "id": 20,
              "problem": "接口中所有的方法都是？",
              "A": "实现方法",
              "B": "抽象方法",
              "C": "无返回值的方法",
              "D": "有返回值的方法",
              "answer": "B",
              "yourAnswer": "A"
            }
          }
        },
        "Java变量类型": {
          "name": "Java变量类型",
          "resource": "src\\pages\\Java变量类型",
          "learned": false,
          "date": "Dec 7, 2020, 1:49:59 PM",
          "integerSelectProblemHashMap": {
            "1": {
              "id": 1,
              "problem": "下列输出结果是( )int  a \u003d 0;   while ( a \u003c 5 ) {        switch(a){              case 0 :                   case 3 : a \u003d a + 2;              case 1 :                   case 2 : a \u003d a + 3;              default : a \u003d a + 5;                  }   }    System.out.print ( a );",
              "A": "0",
              "B": "5",
              "C": "10",
              "D": "其他",
              "answer": "C",
              "yourAnswer": "A"
            },
            "2": {
              "id": 2,
              "problem": "下面代码输出结果是( )int i\u003d0,s\u003d0; do{                     if ( i%2 \u003d\u003d 0 ){                    i++;           continue;                 }                            i++;                            s \u003d s + i;              } while (i\u003c7);              System.out.println(s);",
              "A": "16",
              "B": "12",
              "C": "28",
              "D": "21",
              "answer": "B",
              "yourAnswer": "A"
            },
            "3": {
              "id": 3,
              "problem": "假设A类有如下定义，设a是A类的一个实例，下列语句调用( )是错误的。class A { int i; static String s;     void method1() {   }     static void method2()  {   } }",
              "A": "System.out.println(a.i)",
              "B": "a.method1()",
              "C": "A.method1()",
              "D": "A.method2()",
              "answer": "C",
              "yourAnswer": "A"
            },
            "4": {
              "id": 4,
              "problem": "算术表达式1+2/3-4*5的值为( )",
              "A": "1",
              "B": "-19",
              "C": "-5",
              "D": "0",
              "answer": "B",
              "yourAnswer": "A"
            },
            "5": {
              "id": 5,
              "problem": "score是一个整数数组，有五个元素，已经正确初始化并赋值，仔细阅读下面代码，temp运行结果是( )temp \u003d score[0];  for (int index \u003d 1;index \u003c 5;index++) {       if (score[index] \u003c temp) {             temp \u003d score[index];       } } ",
              "A": "求最大数",
              "B": "求最小数",
              "C": "找到数组最后一个元素",
              "D": "编译出错",
              "answer": "B",
              "yourAnswer": "A"
            }
          }
        },
        "Java循环结构": {
          "name": "Java循环结构",
          "resource": "src\\pages\\Java循环结构",
          "learned": false,
          "date": "Dec 7, 2020, 1:49:59 PM",
          "integerSelectProblemHashMap": {
            "1": {
              "id": 1,
              "problem": "已知如下代码：（ ） public class Test { public static void main(String arg[] ) { int i \u003d 5; do{ System.out.print(i); }while(–i\u003e5) System.out.print(“finished”); } } 执行后的输出是什么？",
              "A": "5 finished",
              "B": "4 finished",
              "C": "6 finished",
              "D": "7 finished",
              "answer": "A",
              "yourAnswer": "A"
            }
          }
        },
        "Java日期时间": {
          "name": "Java日期时间",
          "resource": "src\\pages\\Java日期时间",
          "learned": false,
          "date": "Dec 7, 2020, 1:49:59 PM",
          "integerSelectProblemHashMap": {
            "1": {
              "id": 1,
              "problem": "一个类要实现多个接口，用什么关键字?",
              "A": "extends",
              "B": "implements",
              "C": "instanceof",
              "D": "import",
              "answer": "B",
              "yourAnswer": "A"
            },
            "2": {
              "id": 2,
              "problem": "以下标识符中哪项是不合法的( )",
              "A": "int",
              "B": "$double",
              "C": "hello",
              "D": "BigMeaninglessName",
              "answer": "A",
              "yourAnswer": "A"
            },
            "3": {
              "id": 3,
              "problem": "下面哪个是applet传递参数的正确方式？（ ）",
              "A": "\u003capplet code\u003dTest.class age\u003d33 width\u003d1 height\u003d1\u003e",
              "B": "\u003cparam name\u003dage value\u003d33\u003e",
              "C": "\u003capplet code\u003dTest.class name\u003dage value\u003d33 width\u003d1 height\u003d1\u003e",
              "D": "\u003capplet Test 33\u003e",
              "answer": "B",
              "yourAnswer": "A"
            },
            "4": {
              "id": 4,
              "problem": "java中所有类的父类是（）？",
              "A": "object",
              "B": "Father",
              "C": "Lang",
              "D": "Exception",
              "answer": "A",
              "yourAnswer": "A"
            },
            "5": {
              "id": 5,
              "problem": "以下程序的输出结果是（ ）。abstract class A {     public abstract void fun();     public void fun(int a) {         System.out.println(a);     } } class TestA extends A {     public static void main(String[] args) {         TestA ta \u003d new TestA();         ta.fun(1);     } }",
              "A": "1",
              "B": "编译错误",
              "C": "运行错误",
              "D": "无输出",
              "answer": "B",
              "yourAnswer": "A"
            },
            "6": {
              "id": 6,
              "problem": "表达式(11+3*8)/4%3的值是( )",
              "A": "31",
              "B": "0",
              "C": "1",
              "D": "2",
              "answer": "D",
              "yourAnswer": "A"
            },
            "7": {
              "id": 7,
              "problem": "下列说法正确的有（）?",
              "A": "不需要定义类，就能创建对象",
              "B": "对象中必须有属性和方法",
              "C": "属性必须是简单变量",
              "D": "属性可以是简单变量，也可以是一个对象",
              "answer": "D",
              "yourAnswer": "A"
            },
            "8": {
              "id": 8,
              "problem": "下面选项中关于 abstract 的使用正确的是( )。",
              "A": "private abstract void blood();",
              "B": "abstract final void blood ();",
              "C": "static abstract void blood ();",
              "D": "public abstract void blood ();",
              "answer": "D",
              "yourAnswer": "A"
            },
            "9": {
              "id": 9,
              "problem": "下列不是重载方法的特征的是（ ）。",
              "A": "参数个数不同",
              "B": "返回值类型不同",
              "C": "参数类型不同",
              "D": "方法名相同",
              "answer": "B",
              "yourAnswer": "A"
            },
            "10": {
              "id": 10,
              "problem": "接口中所有的方法都是？",
              "A": "实现方法",
              "B": "抽象方法",
              "C": "无返回值的方法",
              "D": "有返回值的方法",
              "answer": "B",
              "yourAnswer": "A"
            },
            "11": {
              "id": 11,
              "problem": "以下关于继承的叙述正确的是( )",
              "A": "在Java中类只允许单一继承",
              "B": "在Java中一个类只能实现一个接口",
              "C": "在Java中一个类不能同时继承一个类和实现一个接口",
              "D": "在Java中接口只允许单一继承",
              "answer": "A",
              "yourAnswer": "A"
            },
            "12": {
              "id": 12,
              "problem": "对于私有构造方法，以下说法正确的是（ ）。",
              "A": "构造方法如果被限定为private则会产生编译错误",
              "B": "不能通过私有构造方法产生类的对象",
              "C": "私有构造方法不能在类外通过new调用创建对象",
              "D": "具有私有构造方法的类不能被继承",
              "answer": "C",
              "yourAnswer": "A"
            },
            "13": {
              "id": 13,
              "problem": "以下程序的输出结果是（ ）。abstract class A {     public abstract void fun();     public void fun(int a) {         System.out.println(a);     } } class TestA extends A {     public static void main(String[] args) {         TestA ta \u003d new TestA();         ta.fun(1);     } }",
              "A": "1",
              "B": "编译错误",
              "C": "运行错误",
              "D": "无输出",
              "answer": "B",
              "yourAnswer": "A"
            },
            "14": {
              "id": 14,
              "problem": "下列关于抽象类的描述中，错误的是（ ）。",
              "A": "抽象类中可以包含抽象方法，也可以不包含抽象方法",
              "B": "抽象类不能实例化，即使抽象类中没有声明抽象方法，也不能实例化",
              "C": "不能声明抽象类的变量(对象)",
              "D": "包含抽象方法的类，必须要声明为抽象类",
              "answer": "C",
              "yourAnswer": "A"
            },
            "15": {
              "id": 15,
              "problem": "类中存在一个方法int getValue(int x){…}，以下能与这个方法重载的是（ ）。",
              "A": "public getValue(int x){…};",
              "B": "void getValue(int x){…};",
              "C": "int getValue(int x, int y){…};",
              "D": "int get(int x){…};",
              "answer": "C",
              "yourAnswer": "A"
            },
            "16": {
              "id": 16,
              "problem": "下面哪一个循环会导致死循环？( )",
              "A": "for (int k \u003d 0; k \u003c 0; k++)",
              "B": "for (int k \u003d 10; k \u003e 0; k--)",
              "C": "for (int k \u003d 0; k \u003c 10; k--)",
              "D": " for (int k \u003d 0; k \u003e 10; k++)",
              "answer": "C",
              "yourAnswer": "A"
            },
            "17": {
              "id": 17,
              "problem": "下列关于包的描述中错误的是（ ）",
              "A": "使用包的原因之一是避免类名重复",
              "B": "包是由.class文件组成的一个集合，是一个文件夹",
              "C": "功能相同或者相关的类一般组织在一个包中",
              "D": "包只能定义一层，即包中不能再有包",
              "answer": "D",
              "yourAnswer": "A"
            },
            "18": {
              "id": 18,
              "problem": "下列关于包的描述中错误的是（ ）",
              "A": "使用包的原因之一是避免类名重复",
              "B": "包是由.class文件组成的一个集合，是一个文件夹",
              "C": "功能相同或者相关的类一般组织在一个包中",
              "D": "包只能定义一层，即包中不能再有包",
              "answer": "D",
              "yourAnswer": "A"
            },
            "19": {
              "id": 19,
              "problem": "( )是FileInputStream的子类，可用于读取二进制文件.",
              "A": "DataOutputStream",
              "B": "DataInputStream",
              "C": "Reader",
              "D": "Writer",
              "answer": "B",
              "yourAnswer": "A"
            },
            "20": {
              "id": 20,
              "problem": "下面选项中关于 abstract 的使用正确的是( )。",
              "A": "private abstract void blood();",
              "B": "abstract final void blood ();",
              "C": "static abstract void blood ();",
              "D": "public abstract void blood ();",
              "answer": "D",
              "yourAnswer": "A"
            }
          }
        },
        "Java修饰符": {
          "name": "Java修饰符",
          "resource": "src\\pages\\Java修饰符",
          "learned": false,
          "date": "Dec 7, 2020, 1:49:59 PM",
          "integerSelectProblemHashMap": {
            "1": {
              "id": 1,
              "problem": "下列修饰符中与访问控制无关的是（）",
              "A": "private　",
              "B": "public",
              "C": "protected",
              "D": "default",
              "answer": "D",
              "yourAnswer": "A"
            },
            "2": {
              "id": 2,
              "problem": "如果希望类中成员能被所有子类继承后像自身成员一样直接访问，则应该使用修饰符（）",
              "A": "default",
              "B": "protected",
              "C": "不写",
              "D": "private",
              "answer": " ",
              "yourAnswer": "A"
            },
            "3": {
              "id": 3,
              "problem": "如果希望类中成员即使被子类继承也只能通过父类方法间接访问，则应该使用修饰符（）",
              "A": "public",
              "B": "protected",
              "C": "不写",
              "D": "private",
              "answer": "D",
              "yourAnswer": "A"
            }
          }
        },
        "Java方法": {
          "name": "Java方法",
          "resource": "src\\pages\\Java方法",
          "learned": false,
          "date": "Dec 7, 2020, 1:49:59 PM",
          "integerSelectProblemHashMap": {
            "1": {
              "id": 1,
              "problem": "下面哪一个循环会导致死循环？( )",
              "A": "for (int k \u003d 0; k \u003c 0; k++)",
              "B": "for (int k \u003d 10; k \u003e 0; k--)",
              "C": "for (int k \u003d 0; k \u003c 10; k--)",
              "D": " for (int k \u003d 0; k \u003e 10; k++)",
              "answer": "C",
              "yourAnswer": "A"
            },
            "2": {
              "id": 2,
              "problem": "以下关于重载的说法错误的是（ ）。",
              "A": "重载的方法只要定义正确，调用时就不会有歧义性。",
              "B": "重载的方法通常实现相似的功能",
              "C": "重载的方法可以互相调用，提高代码复用",
              "D": "重载是多态的一种表现形式",
              "answer": "A",
              "yourAnswer": "A"
            },
            "3": {
              "id": 3,
              "problem": "( )类带有缓冲区，可以把一批数据读到缓冲区，避免每次都从数据源读取数据进行字符编码转换。",
              "A": "Reader",
              "B": "FileReader",
              "C": "Writer",
              "D": "BufferedReader",
              "answer": "D",
              "yourAnswer": "A"
            },
            "4": {
              "id": 4,
              "problem": "java中所有类的父类是（）？",
              "A": "object",
              "B": "Father",
              "C": "Lang",
              "D": "Exception",
              "answer": "A",
              "yourAnswer": "A"
            },
            "5": {
              "id": 5,
              "problem": "以下不是面向对象特征的是（ ）。",
              "A": "继承",
              "B": "代码复制",
              "C": "封装",
              "D": "多态",
              "answer": "B",
              "yourAnswer": "A"
            },
            "6": {
              "id": 6,
              "problem": "下面哪一个循环会导致死循环？( )",
              "A": "for (int k \u003d 0; k \u003c 0; k++)",
              "B": "for (int k \u003d 10; k \u003e 0; k--)",
              "C": "for (int k \u003d 0; k \u003c 10; k--)",
              "D": " for (int k \u003d 0; k \u003e 10; k++)",
              "answer": "C",
              "yourAnswer": "A"
            },
            "7": {
              "id": 7,
              "problem": "假设现在有一个对象X,有一个属性a.则访问当前属性的方法是（）？",
              "A": "a.x",
              "B": "x.a",
              "C": "A.x",
              "D": "X.a",
              "answer": "D",
              "yourAnswer": "A"
            },
            "8": {
              "id": 8,
              "problem": "使用字节输出流FileOutputStream类中的哪个构造方法，在写数据时能够不覆盖文件中原有的内容？",
              "A": "FileOutputStream(String name)",
              "B": "FileOutputStream(File file,String name)",
              "C": "FileOutputStream(String name,boolean append)",
              "D": "FileOutputStream(File file)",
              "answer": "C",
              "yourAnswer": "A"
            },
            "9": {
              "id": 9,
              "problem": "Java的核心包中，提供编程应用的基本类包是（ ）",
              "A": "java.util",
              "B": "java.lang",
              "C": "java.applet",
              "D": "java.rmi",
              "answer": "B",
              "yourAnswer": "A"
            },
            "10": {
              "id": 10,
              "problem": "下列关于打包的描述中，错误的是（ ）。",
              "A": "一个源文件中最多包含一条package语句，且必须是第一条语句",
              "B": "一个源文件中定义的类的字节码可以存放于不同的包中",
              "C": "若源文件中没有包含package语句，则类的字节码被放入无名包中",
              "D": "不在一个源文件中定义的子类和父类可以位于不同包中",
              "answer": "B",
              "yourAnswer": "A"
            },
            "11": {
              "id": 11,
              "problem": "如果类中成员的定义没有用访问权限修饰符，则该成员不能被（ ）访问。",
              "A": "同一个包中子类",
              "B": "子类",
              "C": "同一个包中其他类",
              "D": "其他包中所有类",
              "answer": "D",
              "yourAnswer": "A"
            },
            "12": {
              "id": 12,
              "problem": "( )是FileInputStream的子类，可用于读取二进制文件.",
              "A": "DataOutputStream",
              "B": "DataInputStream",
              "C": "Reader",
              "D": "Writer",
              "answer": "B",
              "yourAnswer": "A"
            },
            "13": {
              "id": 13,
              "problem": "如果希望类中成员能被所有子类继承后像自身成员一样直接访问，则应该使用修饰符（）",
              "A": "default",
              "B": "protected",
              "C": "不写",
              "D": "private",
              "answer": " ",
              "yourAnswer": "A"
            },
            "14": {
              "id": 14,
              "problem": "结构化程序设计所规定的三种基本控制结构是( )",
              "A": "输入、处理、输出",
              "B": "树形、网形、环形",
              "C": "顺序、选择、循环",
              "D": "主程序、子程序、函数",
              "answer": "C",
              "yourAnswer": "A"
            },
            "15": {
              "id": 15,
              "problem": "以下程序的结果是（ ）。class Base {     protected void fun(){         System.out.println(0);     } } class Derived extends Base {     protected void fun(){         System.out.println(1);     } } public class Test {     public static void main(String[] args) {         Base b1 \u003d new Derived();         b1.fun();     } }",
              "A": "运行错误",
              "B": "编译错误",
              "C": "0",
              "D": "1",
              "answer": "D",
              "yourAnswer": "A"
            },
            "16": {
              "id": 16,
              "problem": "如果希望类中成员即使被子类继承也只能通过父类方法间接访问，则应该使用修饰符（）",
              "A": "public",
              "B": "protected",
              "C": "不写",
              "D": "private",
              "answer": "D",
              "yourAnswer": "A"
            },
            "17": {
              "id": 17,
              "problem": "在Java中用什么关键字修饰的方法可以直接通过类名来调用？( )",
              "A": "static",
              "B": "final",
              "C": "private",
              "D": "void",
              "answer": "A",
              "yourAnswer": "A"
            },
            "18": {
              "id": 18,
              "problem": "不是合法标识符的是（）",
              "A": "Javaworld",
              "B": "_sum",
              "C": "2Java Program",
              "D": "$abc",
              "answer": "C",
              "yourAnswer": "A"
            },
            "19": {
              "id": 19,
              "problem": "下列关于包的描述中错误的是（ ）",
              "A": "使用包的原因之一是避免类名重复",
              "B": "包是由.class文件组成的一个集合，是一个文件夹",
              "C": "功能相同或者相关的类一般组织在一个包中",
              "D": "包只能定义一层，即包中不能再有包",
              "answer": "D",
              "yourAnswer": "A"
            },
            "20": {
              "id": 20,
              "problem": "Java的核心包中，提供编程应用的基本类包是（ ）",
              "A": "java.util",
              "B": "java.lang",
              "C": "java.applet",
              "D": "java.rmi",
              "answer": "B",
              "yourAnswer": "A"
            }
          }
        }
      },
      "integerNewTitleManagerHashMap": {
        "1": {
          "name": "Java变量类型",
          "resource": "src\\pages\\Java变量类型",
          "learned": false,
          "date": "Dec 7, 2020, 1:49:59 PM",
          "integerSelectProblemHashMap": {
            "1": {
              "id": 1,
              "problem": "下列输出结果是( )int  a \u003d 0;   while ( a \u003c 5 ) {        switch(a){              case 0 :                   case 3 : a \u003d a + 2;              case 1 :                   case 2 : a \u003d a + 3;              default : a \u003d a + 5;                  }   }    System.out.print ( a );",
              "A": "0",
              "B": "5",
              "C": "10",
              "D": "其他",
              "answer": "C",
              "yourAnswer": "A"
            },
            "2": {
              "id": 2,
              "problem": "下面代码输出结果是( )int i\u003d0,s\u003d0; do{                     if ( i%2 \u003d\u003d 0 ){                    i++;           continue;                 }                            i++;                            s \u003d s + i;              } while (i\u003c7);              System.out.println(s);",
              "A": "16",
              "B": "12",
              "C": "28",
              "D": "21",
              "answer": "B",
              "yourAnswer": "A"
            },
            "3": {
              "id": 3,
              "problem": "假设A类有如下定义，设a是A类的一个实例，下列语句调用( )是错误的。class A { int i; static String s;     void method1() {   }     static void method2()  {   } }",
              "A": "System.out.println(a.i)",
              "B": "a.method1()",
              "C": "A.method1()",
              "D": "A.method2()",
              "answer": "C",
              "yourAnswer": "A"
            },
            "4": {
              "id": 4,
              "problem": "算术表达式1+2/3-4*5的值为( )",
              "A": "1",
              "B": "-19",
              "C": "-5",
              "D": "0",
              "answer": "B",
              "yourAnswer": "A"
            },
            "5": {
              "id": 5,
              "problem": "score是一个整数数组，有五个元素，已经正确初始化并赋值，仔细阅读下面代码，temp运行结果是( )temp \u003d score[0];  for (int index \u003d 1;index \u003c 5;index++) {       if (score[index] \u003c temp) {             temp \u003d score[index];       } } ",
              "A": "求最大数",
              "B": "求最小数",
              "C": "找到数组最后一个元素",
              "D": "编译出错",
              "answer": "B",
              "yourAnswer": "A"
            }
          }
        },
        "2": {
          "name": "Java修饰符",
          "resource": "src\\pages\\Java修饰符",
          "learned": false,
          "date": "Dec 7, 2020, 1:49:59 PM",
          "integerSelectProblemHashMap": {
            "1": {
              "id": 1,
              "problem": "下列修饰符中与访问控制无关的是（）",
              "A": "private　",
              "B": "public",
              "C": "protected",
              "D": "default",
              "answer": "D",
              "yourAnswer": "A"
            },
            "2": {
              "id": 2,
              "problem": "如果希望类中成员能被所有子类继承后像自身成员一样直接访问，则应该使用修饰符（）",
              "A": "default",
              "B": "protected",
              "C": "不写",
              "D": "private",
              "answer": " ",
              "yourAnswer": "A"
            },
            "3": {
              "id": 3,
              "problem": "如果希望类中成员即使被子类继承也只能通过父类方法间接访问，则应该使用修饰符（）",
              "A": "public",
              "B": "protected",
              "C": "不写",
              "D": "private",
              "answer": "D",
              "yourAnswer": "A"
            }
          }
        },
        "3": {
          "name": "Java运算符",
          "resource": "src\\pages\\Java运算符",
          "learned": false,
          "date": "Dec 7, 2020, 1:49:59 PM",
          "integerSelectProblemHashMap": {
            "1": {
              "id": 1,
              "problem": "关于运算符\u003e\u003e和\u003e\u003e\u003e描述正确的是（）",
              "A": "\u003e\u003e执行移动",
              "B": "\u003e\u003e执行翻转",
              "C": "\u003e\u003e执行有符号左移，\u003e\u003e\u003e执行无符号左移",
              "D": "\u003e\u003e执行无符号左移，\u003e\u003e\u003e执行有符号左移",
              "answer": "C",
              "yourAnswer": "A"
            }
          }
        },
        "4": {
          "name": "Java循环结构",
          "resource": "src\\pages\\Java循环结构",
          "learned": false,
          "date": "Dec 7, 2020, 1:49:59 PM",
          "integerSelectProblemHashMap": {
            "1": {
              "id": 1,
              "problem": "已知如下代码：（ ） public class Test { public static void main(String arg[] ) { int i \u003d 5; do{ System.out.print(i); }while(–i\u003e5) System.out.print(“finished”); } } 执行后的输出是什么？",
              "A": "5 finished",
              "B": "4 finished",
              "C": "6 finished",
              "D": "7 finished",
              "answer": "A",
              "yourAnswer": "A"
            }
          }
        },
        "5": {
          "name": "Java条件语句",
          "resource": "src\\pages\\Java条件语句",
          "learned": false,
          "date": "Dec 7, 2020, 1:49:59 PM",
          "integerSelectProblemHashMap": {
            "1": {
              "id": 1,
              "problem": "下面哪一个循环会导致死循环？( )",
              "A": "for (int k \u003d 0; k \u003c 0; k++)",
              "B": "for (int k \u003d 10; k \u003e 0; k--)",
              "C": "for (int k \u003d 0; k \u003c 10; k--)",
              "D": " for (int k \u003d 0; k \u003e 10; k++)",
              "answer": "C",
              "yourAnswer": "A"
            },
            "2": {
              "id": 2,
              "problem": "接口中所有的方法都是？",
              "A": "实现方法",
              "B": "抽象方法",
              "C": "无返回值的方法",
              "D": "有返回值的方法",
              "answer": "B",
              "yourAnswer": "A"
            },
            "3": {
              "id": 3,
              "problem": "下列关于抽象方法的描述中，错误的是（ ）。",
              "A": "抽象方法声明只需给出方法头，不能写方法体，直接以分号结束",
              "B": "所有的方法都可以声明为抽象方法",
              "C": "构造方法不能声明为抽象方法",
              "D": "声明抽象方法使用关键字abstract修饰",
              "answer": "B",
              "yourAnswer": "A"
            },
            "4": {
              "id": 4,
              "problem": "以下程序的结果是（ ）。class Base {     protected void fun(){         System.out.println(0);     } } class Derived extends Base {     protected void fun(){         System.out.println(1);     } } public class Test {     public static void main(String[] args) {         Base b1 \u003d new Derived();         b1.fun();     } }",
              "A": "运行错误",
              "B": "编译错误",
              "C": "0",
              "D": "1",
              "answer": "D",
              "yourAnswer": "A"
            },
            "5": {
              "id": 5,
              "problem": "不允许作为类及类的成员的访问控制符的是（）？",
              "A": "public",
              "B": "private",
              "C": "protected",
              "D": "static",
              "answer": "D",
              "yourAnswer": "A"
            },
            "6": {
              "id": 6,
              "problem": "以下没有体现出封装性的是（ ）。",
              "A": "将类的成员用访问权限修饰符加以访问控制",
              "B": "提供成员方法操作成员变量",
              "C": "将类的全部成员都设定为public权限",
              "D": "将类按照不同的包组织管理",
              "answer": "C",
              "yourAnswer": "A"
            },
            "7": {
              "id": 7,
              "problem": "假设现在有一个对象X,有一个属性a.则访问当前属性的方法是（）？",
              "A": "a.x",
              "B": "x.a",
              "C": "A.x",
              "D": "X.a",
              "answer": "D",
              "yourAnswer": "A"
            },
            "8": {
              "id": 8,
              "problem": "下列说法正确的有（）?",
              "A": "不需要定义类，就能创建对象",
              "B": "对象中必须有属性和方法",
              "C": "属性必须是简单变量",
              "D": "属性可以是简单变量，也可以是一个对象",
              "answer": "D",
              "yourAnswer": "A"
            },
            "9": {
              "id": 9,
              "problem": "欲构造ArrayList类得一个实例，此类继承了List接口，下列哪个方法是正确的：",
              "A": "ArrayList myList \u003d new Object();",
              "B": "List myList \u003d new ArrayList();",
              "C": "ArraylList myList \u003d new List();",
              "D": "List myList \u003d new List();",
              "answer": "B",
              "yourAnswer": "A"
            },
            "10": {
              "id": 10,
              "problem": "下面选项中关于 abstract 的使用正确的是( )。",
              "A": "private abstract void blood();",
              "B": "abstract final void blood ();",
              "C": "static abstract void blood ();",
              "D": "public abstract void blood ();",
              "answer": "D",
              "yourAnswer": "A"
            },
            "11": {
              "id": 11,
              "problem": "以下关于重载的说法错误的是（ ）。",
              "A": "重载的方法只要定义正确，调用时就不会有歧义性。",
              "B": "重载的方法通常实现相似的功能",
              "C": "重载的方法可以互相调用，提高代码复用",
              "D": "重载是多态的一种表现形式",
              "answer": "A",
              "yourAnswer": "A"
            },
            "12": {
              "id": 12,
              "problem": "下列不是重载方法的特征的是（ ）。",
              "A": "参数个数不同",
              "B": "返回值类型不同",
              "C": "参数类型不同",
              "D": "方法名相同",
              "answer": "B",
              "yourAnswer": "A"
            },
            "13": {
              "id": 13,
              "problem": "已知A类具有以下四个成员方法，a是A类的对象，则a.fun(1, 3.14F)调用的是（ ）。",
              "A": "public void fun(int a, double b){…}",
              "B": "public int fun(double a, double b){…}",
              "C": "public void fun(float a, float b){…}",
              "D": "public float fun(int a, float b){…}",
              "answer": "D",
              "yourAnswer": "A"
            },
            "14": {
              "id": 14,
              "problem": "欲构造ArrayList类得一个实例，此类继承了List接口，下列哪个方法是正确的：",
              "A": "ArrayList myList \u003d new Object();",
              "B": "List myList \u003d new ArrayList();",
              "C": "ArraylList myList \u003d new List();",
              "D": "List myList \u003d new List();",
              "answer": "B",
              "yourAnswer": "A"
            },
            "15": {
              "id": 15,
              "problem": "接口中所有的方法都是？",
              "A": "实现方法",
              "B": "抽象方法",
              "C": "无返回值的方法",
              "D": "有返回值的方法",
              "answer": "B",
              "yourAnswer": "A"
            },
            "16": {
              "id": 16,
              "problem": "下列说法正确的有（）?",
              "A": "不需要定义类，就能创建对象",
              "B": "对象中必须有属性和方法",
              "C": "属性必须是简单变量",
              "D": "属性可以是简单变量，也可以是一个对象",
              "answer": "D",
              "yourAnswer": "A"
            },
            "17": {
              "id": 17,
              "problem": "下列关于打包的描述中，错误的是（ ）。",
              "A": "一个源文件中最多包含一条package语句，且必须是第一条语句",
              "B": "一个源文件中定义的类的字节码可以存放于不同的包中",
              "C": "若源文件中没有包含package语句，则类的字节码被放入无名包中",
              "D": "不在一个源文件中定义的子类和父类可以位于不同包中",
              "answer": "B",
              "yourAnswer": "A"
            },
            "18": {
              "id": 18,
              "problem": "接口中所有的方法都是？",
              "A": "实现方法",
              "B": "抽象方法",
              "C": "无返回值的方法",
              "D": "有返回值的方法",
              "answer": "B",
              "yourAnswer": "A"
            },
            "19": {
              "id": 19,
              "problem": "以下关于继承的叙述正确的是( )",
              "A": "在Java中类只允许单一继承",
              "B": "在Java中一个类只能实现一个接口",
              "C": "在Java中一个类不能同时继承一个类和实现一个接口",
              "D": "在Java中接口只允许单一继承",
              "answer": "A",
              "yourAnswer": "A"
            },
            "20": {
              "id": 20,
              "problem": "在创建对象时必须( )",
              "A": "先声明对象，然后才能使用对象",
              "B": "先声明对象，为对象分配内存空间，然后才能使用对象",
              "C": "先声明对象，为对象分配内存空间，对对象初始化，然后才能使用对象",
              "D": "上述说法都对",
              "answer": "C",
              "yourAnswer": "A"
            }
          }
        },
        "6": {
          "name": "Javaswitchcase",
          "resource": "src\\pages\\Javaswitchcase",
          "learned": false,
          "date": "Dec 7, 2020, 1:49:59 PM",
          "integerSelectProblemHashMap": {
            "1": {
              "id": 1,
              "problem": "一个类可同时定义许多同名的方法，这些方法的形式参数个数、类型或顺序各不相同，传回的值也可以不相同，这种特性称为（ ）。",
              "A": "继承",
              "B": "重写",
              "C": "重载",
              "D": "封装",
              "answer": "C",
              "yourAnswer": "A"
            },
            "2": {
              "id": 2,
              "problem": "如果类中成员的定义没有用访问权限修饰符，则该成员不能被（ ）访问。",
              "A": "同一个包中子类",
              "B": "子类",
              "C": "同一个包中其他类",
              "D": "其他包中所有类",
              "answer": "D",
              "yourAnswer": "A"
            },
            "3": {
              "id": 3,
              "problem": "使用字节输出流FileOutputStream类中的哪个构造方法，在写数据时能够不覆盖文件中原有的内容？",
              "A": "FileOutputStream(String name)",
              "B": "FileOutputStream(File file,String name)",
              "C": "FileOutputStream(String name,boolean append)",
              "D": "FileOutputStream(File file)",
              "answer": "C",
              "yourAnswer": "A"
            },
            "4": {
              "id": 4,
              "problem": "下面哪个是applet传递参数的正确方式？（ ）",
              "A": "\u003capplet code\u003dTest.class age\u003d33 width\u003d1 height\u003d1\u003e",
              "B": "\u003cparam name\u003dage value\u003d33\u003e",
              "C": "\u003capplet code\u003dTest.class name\u003dage value\u003d33 width\u003d1 height\u003d1\u003e",
              "D": "\u003capplet Test 33\u003e",
              "answer": "B",
              "yourAnswer": "A"
            },
            "5": {
              "id": 5,
              "problem": "以下程序的输出结果是（ ）。abstract class A {     public abstract void fun();     public void fun(int a) {         System.out.println(a);     } } class TestA extends A {     public static void main(String[] args) {         TestA ta \u003d new TestA();         ta.fun(1);     } }",
              "A": "1",
              "B": "编译错误",
              "C": "运行错误",
              "D": "无输出",
              "answer": "B",
              "yourAnswer": "A"
            },
            "6": {
              "id": 6,
              "problem": "有一段java 应用程序，它的主类名是a1，那么保存它的源文件名可以是( )",
              "A": "a1.java",
              "B": "a1.class",
              "C": "a1",
              "D": "都对",
              "answer": "A",
              "yourAnswer": "A"
            },
            "7": {
              "id": 7,
              "problem": "对于私有构造方法，以下说法正确的是（ ）。",
              "A": "构造方法如果被限定为private则会产生编译错误",
              "B": "不能通过私有构造方法产生类的对象",
              "C": "私有构造方法不能在类外通过new调用创建对象",
              "D": "具有私有构造方法的类不能被继承",
              "answer": "C",
              "yourAnswer": "A"
            },
            "8": {
              "id": 8,
              "problem": "接口中所有的方法都是？",
              "A": "实现方法",
              "B": "抽象方法",
              "C": "无返回值的方法",
              "D": "有返回值的方法",
              "answer": "B",
              "yourAnswer": "A"
            },
            "9": {
              "id": 9,
              "problem": "若A是抽象类，B是其子类且A和B都有默认构造方法，则以下语句非法的是（ ）。",
              "A": "A a;",
              "B": "A a \u003d new A();",
              "C": "A a[] \u003d new A[4];",
              "D": "A a \u003d new B();",
              "answer": "B",
              "yourAnswer": "A"
            },
            "10": {
              "id": 10,
              "problem": "类中存在一个方法int getValue(int x){…}，以下能与这个方法重载的是（ ）。",
              "A": "public getValue(int x){…};",
              "B": "void getValue(int x){…};",
              "C": "int getValue(int x, int y){…};",
              "D": "int get(int x){…};",
              "answer": "C",
              "yourAnswer": "A"
            },
            "11": {
              "id": 11,
              "problem": "java中所有类的父类是（）？",
              "A": "object",
              "B": "Father",
              "C": "Lang",
              "D": "Exception",
              "answer": "A",
              "yourAnswer": "A"
            },
            "12": {
              "id": 12,
              "problem": "欲构造ArrayList类得一个实例，此类继承了List接口，下列哪个方法是正确的：",
              "A": "ArrayList myList \u003d new Object();",
              "B": "List myList \u003d new ArrayList();",
              "C": "ArraylList myList \u003d new List();",
              "D": "List myList \u003d new List();",
              "answer": "B",
              "yourAnswer": "A"
            },
            "13": {
              "id": 13,
              "problem": "BufferedWriter类是Writer类的子类，BufferedWriter类中的（）方法可以插入一个换行符。",
              "A": "void newLine()",
              "B": "void close()",
              "C": "void flush()",
              "D": "void write(String str)",
              "answer": "A",
              "yourAnswer": "A"
            },
            "14": {
              "id": 14,
              "problem": "如果类中成员的定义没有用访问权限修饰符，则该成员不能被（ ）访问。",
              "A": "同一个包中子类",
              "B": "子类",
              "C": "同一个包中其他类",
              "D": "其他包中所有类",
              "answer": "D",
              "yourAnswer": "A"
            },
            "15": {
              "id": 15,
              "problem": "下列说法正确的有（）?",
              "A": "不需要定义类，就能创建对象",
              "B": "对象中必须有属性和方法",
              "C": "属性必须是简单变量",
              "D": "属性可以是简单变量，也可以是一个对象",
              "answer": "D",
              "yourAnswer": "A"
            },
            "16": {
              "id": 16,
              "problem": "下列哪个是合法的Java标识符？( )",
              "A": "Tree\u0026Glasses",
              "B": "FirstJavaApplet",
              "C": "*theLastOne",
              "D": "273.5",
              "answer": "B",
              "yourAnswer": "A"
            },
            "17": {
              "id": 17,
              "problem": "结构化程序设计所规定的三种基本控制结构是( )",
              "A": "输入、处理、输出",
              "B": "树形、网形、环形",
              "C": "顺序、选择、循环",
              "D": "主程序、子程序、函数",
              "answer": "C",
              "yourAnswer": "A"
            },
            "18": {
              "id": 18,
              "problem": "接口中方法的修饰符默认是？",
              "A": "public",
              "B": "abstract",
              "C": "public abstract",
              "D": "public static final",
              "answer": "C",
              "yourAnswer": "A"
            },
            "19": {
              "id": 19,
              "problem": "java中所有类的父类是（）？",
              "A": "object",
              "B": "Father",
              "C": "Lang",
              "D": "Exception",
              "answer": "A",
              "yourAnswer": "A"
            },
            "20": {
              "id": 20,
              "problem": "以下程序的输出结果是（ ）。abstract class A {     public abstract void fun();     public void fun(int a) {         System.out.println(a);     } } class TestA extends A {     public static void main(String[] args) {         TestA ta \u003d new TestA();         ta.fun(1);     } }",
              "A": "1",
              "B": "编译错误",
              "C": "运行错误",
              "D": "无输出",
              "answer": "B",
              "yourAnswer": "A"
            }
          }
        },
        "7": {
          "name": "JavaNumber\u0026Math类",
          "resource": "src\\pages\\JavaNumber\u0026Math类",
          "learned": false,
          "date": "Dec 7, 2020, 1:49:59 PM",
          "integerSelectProblemHashMap": {
            "1": {
              "id": 1,
              "problem": "下列选项中，抽象类的关键字是（）？",
              "A": "interface",
              "B": "implements",
              "C": "abstract",
              "D": "class",
              "answer": "C",
              "yourAnswer": "A"
            },
            "2": {
              "id": 2,
              "problem": "在创建对象时必须( )",
              "A": "先声明对象，然后才能使用对象",
              "B": "先声明对象，为对象分配内存空间，然后才能使用对象",
              "C": "先声明对象，为对象分配内存空间，对对象初始化，然后才能使用对象",
              "D": "上述说法都对",
              "answer": "C",
              "yourAnswer": "A"
            },
            "3": {
              "id": 3,
              "problem": "Java的核心包中，提供编程应用的基本类包是（ ）",
              "A": "java.util",
              "B": "java.lang",
              "C": "java.applet",
              "D": "java.rmi",
              "answer": "B",
              "yourAnswer": "A"
            },
            "4": {
              "id": 4,
              "problem": "若A是抽象类，B是其子类且A和B都有默认构造方法，则以下语句非法的是（ ）。",
              "A": "A a;",
              "B": "A a \u003d new A();",
              "C": "A a[] \u003d new A[4];",
              "D": "A a \u003d new B();",
              "answer": "B",
              "yourAnswer": "A"
            },
            "5": {
              "id": 5,
              "problem": "下列关于抽象类的描述中，错误的是（ ）。",
              "A": "抽象类中可以包含抽象方法，也可以不包含抽象方法",
              "B": "抽象类不能实例化，即使抽象类中没有声明抽象方法，也不能实例化",
              "C": "不能声明抽象类的变量(对象)",
              "D": "包含抽象方法的类，必须要声明为抽象类",
              "answer": "C",
              "yourAnswer": "A"
            },
            "6": {
              "id": 6,
              "problem": "下列关于抽象方法的描述中，错误的是（ ）。",
              "A": "抽象方法声明只需给出方法头，不能写方法体，直接以分号结束",
              "B": "所有的方法都可以声明为抽象方法",
              "C": "构造方法不能声明为抽象方法",
              "D": "声明抽象方法使用关键字abstract修饰",
              "answer": "B",
              "yourAnswer": "A"
            },
            "7": {
              "id": 7,
              "problem": "InputStream类的作用就是将文件中的数据读入到内存中，该类中的哪个方法可以关闭文件输入流对象？",
              "A": "int read()",
              "B": "void close()",
              "C": "int available()",
              "D": "int read(byte[] b)",
              "answer": "B",
              "yourAnswer": "A"
            },
            "8": {
              "id": 8,
              "problem": "下列关于抽象方法的描述中，错误的是（ ）。",
              "A": "抽象方法声明只需给出方法头，不能写方法体，直接以分号结束",
              "B": "所有的方法都可以声明为抽象方法",
              "C": "构造方法不能声明为抽象方法",
              "D": "声明抽象方法使用关键字abstract修饰",
              "answer": "B",
              "yourAnswer": "A"
            },
            "9": {
              "id": 9,
              "problem": "以下关于重载的说法错误的是（ ）。",
              "A": "重载的方法只要定义正确，调用时就不会有歧义性。",
              "B": "重载的方法通常实现相似的功能",
              "C": "重载的方法可以互相调用，提高代码复用",
              "D": "重载是多态的一种表现形式",
              "answer": "A",
              "yourAnswer": "A"
            },
            "10": {
              "id": 10,
              "problem": "以下不是面向对象特征的是（ ）。",
              "A": "继承",
              "B": "代码复制",
              "C": "封装",
              "D": "多态",
              "answer": "B",
              "yourAnswer": "A"
            },
            "11": {
              "id": 11,
              "problem": "对于私有构造方法，以下说法正确的是（ ）。",
              "A": "构造方法如果被限定为private则会产生编译错误",
              "B": "不能通过私有构造方法产生类的对象",
              "C": "私有构造方法不能在类外通过new调用创建对象",
              "D": "具有私有构造方法的类不能被继承",
              "answer": "C",
              "yourAnswer": "A"
            },
            "12": {
              "id": 12,
              "problem": "一个类要实现多个接口，用什么关键字?",
              "A": "extends",
              "B": "implements",
              "C": "instanceof",
              "D": "import",
              "answer": "B",
              "yourAnswer": "A"
            },
            "13": {
              "id": 13,
              "problem": "以下关于重载的说法错误的是（ ）。",
              "A": "重载的方法只要定义正确，调用时就不会有歧义性。",
              "B": "重载的方法通常实现相似的功能",
              "C": "重载的方法可以互相调用，提高代码复用",
              "D": "重载是多态的一种表现形式",
              "answer": "A",
              "yourAnswer": "A"
            },
            "14": {
              "id": 14,
              "problem": "已知A类具有以下四个成员方法，a是A类的对象，则a.fun(1, 3.14F)调用的是（ ）。",
              "A": "public void fun(int a, double b){…}",
              "B": "public int fun(double a, double b){…}",
              "C": "public void fun(float a, float b){…}",
              "D": "public float fun(int a, float b){…}",
              "answer": "D",
              "yourAnswer": "A"
            },
            "15": {
              "id": 15,
              "problem": "以下关于继承的叙述正确的是( )",
              "A": "在Java中类只允许单一继承",
              "B": "在Java中一个类只能实现一个接口",
              "C": "在Java中一个类不能同时继承一个类和实现一个接口",
              "D": "在Java中接口只允许单一继承",
              "answer": "A",
              "yourAnswer": "A"
            },
            "16": {
              "id": 16,
              "problem": "下列关于构造方法的叙述中，错误的是( )",
              "A": "Java语言规定构造方法名与类名必须相同",
              "B": "Java语言规定构造方法没有返回值，但不用void声明",
              "C": "Java语言规定构造方法不可以重载",
              "D": "Java语言规定构造方法只能通过new自动调用",
              "answer": "C",
              "yourAnswer": "A"
            },
            "17": {
              "id": 17,
              "problem": "变量命名规范说法正确的是( )",
              "A": "不同类型的变量，可以起相同的名字；",
              "B": "变量由字母、下划线、数字、$符号随意组成；",
              "C": "变量不能以数字作为开头；",
              "D": "A和a在java中是同一个变量；",
              "answer": "A",
              "yourAnswer": "A"
            },
            "18": {
              "id": 18,
              "problem": "Java中( )",
              "A": "一个子类可以有多个父类，一个父类也可以有多个子类",
              "B": "一个子类可以有多个父类，但一个父类只可以有一个子类",
              "C": "一个子类可以有一个父类，但一个父类可以有多个子类",
              "D": "上述说法都不对",
              "answer": "C",
              "yourAnswer": "A"
            },
            "19": {
              "id": 19,
              "problem": "下面哪个是applet传递参数的正确方式？（ ）",
              "A": "\u003capplet code\u003dTest.class age\u003d33 width\u003d1 height\u003d1\u003e",
              "B": "\u003cparam name\u003dage value\u003d33\u003e",
              "C": "\u003capplet code\u003dTest.class name\u003dage value\u003d33 width\u003d1 height\u003d1\u003e",
              "D": "\u003capplet Test 33\u003e",
              "answer": "B",
              "yourAnswer": "A"
            },
            "20": {
              "id": 20,
              "problem": "一个类要实现接口的功能，可以实现几个方法？",
              "A": "0",
              "B": "1",
              "C": "2",
              "D": "全部",
              "answer": "D",
              "yourAnswer": "A"
            }
          }
        },
        "8": {
          "name": "JavaCharacter类",
          "resource": "src\\pages\\JavaCharacter类",
          "learned": false,
          "date": "Dec 7, 2020, 1:49:59 PM",
          "integerSelectProblemHashMap": {
            "1": {
              "id": 1,
              "problem": "以下没有体现出封装性的是（ ）。",
              "A": "将类的成员用访问权限修饰符加以访问控制",
              "B": "提供成员方法操作成员变量",
              "C": "将类的全部成员都设定为public权限",
              "D": "将类按照不同的包组织管理",
              "answer": "C",
              "yourAnswer": "A"
            },
            "2": {
              "id": 2,
              "problem": "java中所有类的父类是（）？",
              "A": "object",
              "B": "Father",
              "C": "Lang",
              "D": "Exception",
              "answer": "A",
              "yourAnswer": "A"
            },
            "3": {
              "id": 3,
              "problem": "以下关于继承的叙述正确的是( )",
              "A": "在Java中类只允许单一继承",
              "B": "在Java中一个类只能实现一个接口",
              "C": "在Java中一个类不能同时继承一个类和实现一个接口",
              "D": "在Java中接口只允许单一继承",
              "answer": "A",
              "yourAnswer": "A"
            },
            "4": {
              "id": 4,
              "problem": "已知A类具有以下四个成员方法，a是A类的对象，则a.fun(1, 3.14F)调用的是（ ）。",
              "A": "public void fun(int a, double b){…}",
              "B": "public int fun(double a, double b){…}",
              "C": "public void fun(float a, float b){…}",
              "D": "public float fun(int a, float b){…}",
              "answer": "D",
              "yourAnswer": "A"
            },
            "5": {
              "id": 5,
              "problem": "java中所有类的父类是（）？",
              "A": "object",
              "B": "Father",
              "C": "Lang",
              "D": "Exception",
              "answer": "A",
              "yourAnswer": "A"
            },
            "6": {
              "id": 6,
              "problem": "接口中方法的修饰符默认是？",
              "A": "public",
              "B": "abstract",
              "C": "public abstract",
              "D": "public static final",
              "answer": "C",
              "yourAnswer": "A"
            },
            "7": {
              "id": 7,
              "problem": "在创建对象时必须( )",
              "A": "先声明对象，然后才能使用对象",
              "B": "先声明对象，为对象分配内存空间，然后才能使用对象",
              "C": "先声明对象，为对象分配内存空间，对对象初始化，然后才能使用对象",
              "D": "上述说法都对",
              "answer": "C",
              "yourAnswer": "A"
            },
            "8": {
              "id": 8,
              "problem": "Java中( )",
              "A": "一个子类可以有多个父类，一个父类也可以有多个子类",
              "B": "一个子类可以有多个父类，但一个父类只可以有一个子类",
              "C": "一个子类可以有一个父类，但一个父类可以有多个子类",
              "D": "上述说法都不对",
              "answer": "C",
              "yourAnswer": "A"
            },
            "9": {
              "id": 9,
              "problem": "欲构造ArrayList类得一个实例，此类继承了List接口，下列哪个方法是正确的：",
              "A": "ArrayList myList \u003d new Object();",
              "B": "List myList \u003d new ArrayList();",
              "C": "ArraylList myList \u003d new List();",
              "D": "List myList \u003d new List();",
              "answer": "B",
              "yourAnswer": "A"
            },
            "10": {
              "id": 10,
              "problem": "下面哪一个循环会导致死循环？( )",
              "A": "for (int k \u003d 0; k \u003c 0; k++)",
              "B": "for (int k \u003d 10; k \u003e 0; k--)",
              "C": "for (int k \u003d 0; k \u003c 10; k--)",
              "D": " for (int k \u003d 0; k \u003e 10; k++)",
              "answer": "C",
              "yourAnswer": "A"
            },
            "11": {
              "id": 11,
              "problem": "Java的核心包中，提供编程应用的基本类包是（ ）",
              "A": "java.util",
              "B": "java.lang",
              "C": "java.applet",
              "D": "java.rmi",
              "answer": "B",
              "yourAnswer": "A"
            },
            "12": {
              "id": 12,
              "problem": "在创建对象时必须( )",
              "A": "先声明对象，然后才能使用对象",
              "B": "先声明对象，为对象分配内存空间，然后才能使用对象",
              "C": "先声明对象，为对象分配内存空间，对对象初始化，然后才能使用对象",
              "D": "上述说法都对",
              "answer": "C",
              "yourAnswer": "A"
            },
            "13": {
              "id": 13,
              "problem": "接口中的属性会自动被修饰为？",
              "A": "public static",
              "B": "static final",
              "C": "public static final",
              "D": "public final",
              "answer": "C",
              "yourAnswer": "A"
            },
            "14": {
              "id": 14,
              "problem": "以下关于重载的说法错误的是（ ）。",
              "A": "重载的方法只要定义正确，调用时就不会有歧义性。",
              "B": "重载的方法通常实现相似的功能",
              "C": "重载的方法可以互相调用，提高代码复用",
              "D": "重载是多态的一种表现形式",
              "answer": "A",
              "yourAnswer": "A"
            },
            "15": {
              "id": 15,
              "problem": "( )类带有缓冲区，可以把一批数据读到缓冲区，避免每次都从数据源读取数据进行字符编码转换。",
              "A": "Reader",
              "B": "FileReader",
              "C": "Writer",
              "D": "BufferedReader",
              "answer": "D",
              "yourAnswer": "A"
            },
            "16": {
              "id": 16,
              "problem": "接口中方法的修饰符默认是？",
              "A": "public",
              "B": "abstract",
              "C": "public abstract",
              "D": "public static final",
              "answer": "C",
              "yourAnswer": "A"
            },
            "17": {
              "id": 17,
              "problem": "下面哪一个循环会导致死循环？( )",
              "A": "for (int k \u003d 0; k \u003c 0; k++)",
              "B": "for (int k \u003d 10; k \u003e 0; k--)",
              "C": "for (int k \u003d 0; k \u003c 10; k--)",
              "D": " for (int k \u003d 0; k \u003e 10; k++)",
              "answer": "C",
              "yourAnswer": "A"
            },
            "18": {
              "id": 18,
              "problem": "以下关于重载的说法错误的是（ ）。",
              "A": "重载的方法只要定义正确，调用时就不会有歧义性。",
              "B": "重载的方法通常实现相似的功能",
              "C": "重载的方法可以互相调用，提高代码复用",
              "D": "重载是多态的一种表现形式",
              "answer": "A",
              "yourAnswer": "A"
            },
            "19": {
              "id": 19,
              "problem": "下列哪个是合法的Java标识符？( )",
              "A": "Tree\u0026Glasses",
              "B": "FirstJavaApplet",
              "C": "*theLastOne",
              "D": "273.5",
              "answer": "B",
              "yourAnswer": "A"
            },
            "20": {
              "id": 20,
              "problem": "已知A类具有以下四个成员方法，a是A类的对象，则a.fun(1, 3.14F)调用的是（ ）。",
              "A": "public void fun(int a, double b){…}",
              "B": "public int fun(double a, double b){…}",
              "C": "public void fun(float a, float b){…}",
              "D": "public float fun(int a, float b){…}",
              "answer": "D",
              "yourAnswer": "A"
            }
          }
        },
        "9": {
          "name": "JavaString类",
          "resource": "src\\pages\\JavaString类",
          "learned": false,
          "date": "Dec 7, 2020, 1:49:59 PM",
          "integerSelectProblemHashMap": {
            "1": {
              "id": 1,
              "problem": "下列关于引入包的描述中，错误的是（ ）。",
              "A": "使用项目中其他包中的类时，需要在源程序中写import语句",
              "B": "import语句写在类声明的上面，package语句的下面",
              "C": "import可以引入包中所有类或其中一个类",
              "D": "import语句必须是源文件中第一条语句",
              "answer": "D",
              "yourAnswer": "A"
            },
            "2": {
              "id": 2,
              "problem": "如果类中成员的定义没有用访问权限修饰符，则该成员不能被（ ）访问。",
              "A": "同一个包中子类",
              "B": "子类",
              "C": "同一个包中其他类",
              "D": "其他包中所有类",
              "answer": "D",
              "yourAnswer": "A"
            },
            "3": {
              "id": 3,
              "problem": "下列关于打包的描述中，错误的是（ ）。",
              "A": "一个源文件中最多包含一条package语句，且必须是第一条语句",
              "B": "一个源文件中定义的类的字节码可以存放于不同的包中",
              "C": "若源文件中没有包含package语句，则类的字节码被放入无名包中",
              "D": "不在一个源文件中定义的子类和父类可以位于不同包中",
              "answer": "B",
              "yourAnswer": "A"
            },
            "4": {
              "id": 4,
              "problem": "一个类可同时定义许多同名的方法，这些方法的形式参数个数、类型或顺序各不相同，传回的值也可以不相同，这种特性称为（ ）。",
              "A": "继承",
              "B": "重写",
              "C": "重载",
              "D": "封装",
              "answer": "C",
              "yourAnswer": "A"
            },
            "5": {
              "id": 5,
              "problem": "下列关于包的描述中错误的是（ ）",
              "A": "使用包的原因之一是避免类名重复",
              "B": "包是由.class文件组成的一个集合，是一个文件夹",
              "C": "功能相同或者相关的类一般组织在一个包中",
              "D": "包只能定义一层，即包中不能再有包",
              "answer": "D",
              "yourAnswer": "A"
            },
            "6": {
              "id": 6,
              "problem": "下列关于引入包的描述中，错误的是（ ）。",
              "A": "使用项目中其他包中的类时，需要在源程序中写import语句",
              "B": "import语句写在类声明的上面，package语句的下面",
              "C": "import可以引入包中所有类或其中一个类",
              "D": "import语句必须是源文件中第一条语句",
              "answer": "D",
              "yourAnswer": "A"
            },
            "7": {
              "id": 7,
              "problem": "下列关于打包的描述中，错误的是（ ）。",
              "A": "一个源文件中最多包含一条package语句，且必须是第一条语句",
              "B": "一个源文件中定义的类的字节码可以存放于不同的包中",
              "C": "若源文件中没有包含package语句，则类的字节码被放入无名包中",
              "D": "不在一个源文件中定义的子类和父类可以位于不同包中",
              "answer": "B",
              "yourAnswer": "A"
            },
            "8": {
              "id": 8,
              "problem": "一个类可同时定义许多同名的方法，这些方法的形式参数个数、类型或顺序各不相同，传回的值也可以不相同，这种特性称为（ ）。",
              "A": "继承",
              "B": "重写",
              "C": "重载",
              "D": "封装",
              "answer": "C",
              "yourAnswer": "A"
            },
            "9": {
              "id": 9,
              "problem": "Java中( )",
              "A": "一个子类可以有多个父类，一个父类也可以有多个子类",
              "B": "一个子类可以有多个父类，但一个父类只可以有一个子类",
              "C": "一个子类可以有一个父类，但一个父类可以有多个子类",
              "D": "上述说法都不对",
              "answer": "C",
              "yourAnswer": "A"
            },
            "10": {
              "id": 10,
              "problem": "（ ）是Java语言的关键字。",
              "A": "public",
              "B": "static",
              "C": "void",
              "D": "以上都是",
              "answer": "D",
              "yourAnswer": "A"
            },
            "11": {
              "id": 11,
              "problem": "接口中所有的方法都是？",
              "A": "实现方法",
              "B": "抽象方法",
              "C": "无返回值的方法",
              "D": "有返回值的方法",
              "answer": "B",
              "yourAnswer": "A"
            },
            "12": {
              "id": 12,
              "problem": "下列说法正确的有（）?",
              "A": "不需要定义类，就能创建对象",
              "B": "对象中必须有属性和方法",
              "C": "属性必须是简单变量",
              "D": "属性可以是简单变量，也可以是一个对象",
              "answer": "D",
              "yourAnswer": "A"
            },
            "13": {
              "id": 13,
              "problem": "以下标识符中哪项是不合法的( )",
              "A": "int",
              "B": "$double",
              "C": "hello",
              "D": "BigMeaninglessName",
              "answer": "A",
              "yourAnswer": "A"
            },
            "14": {
              "id": 14,
              "problem": "下列关于包的描述中错误的是（ ）",
              "A": "使用包的原因之一是避免类名重复",
              "B": "包是由.class文件组成的一个集合，是一个文件夹",
              "C": "功能相同或者相关的类一般组织在一个包中",
              "D": "包只能定义一层，即包中不能再有包",
              "answer": "D",
              "yourAnswer": "A"
            },
            "15": {
              "id": 15,
              "problem": "下面哪个是applet传递参数的正确方式？（ ）",
              "A": "\u003capplet code\u003dTest.class age\u003d33 width\u003d1 height\u003d1\u003e",
              "B": "\u003cparam name\u003dage value\u003d33\u003e",
              "C": "\u003capplet code\u003dTest.class name\u003dage value\u003d33 width\u003d1 height\u003d1\u003e",
              "D": "\u003capplet Test 33\u003e",
              "answer": "B",
              "yourAnswer": "A"
            },
            "16": {
              "id": 16,
              "problem": "使用字节输出流FileOutputStream类中的哪个构造方法，在写数据时能够不覆盖文件中原有的内容？",
              "A": "FileOutputStream(String name)",
              "B": "FileOutputStream(File file,String name)",
              "C": "FileOutputStream(String name,boolean append)",
              "D": "FileOutputStream(File file)",
              "answer": "C",
              "yourAnswer": "A"
            },
            "17": {
              "id": 17,
              "problem": "下面哪一个循环会导致死循环？( )",
              "A": "for (int k \u003d 0; k \u003c 0; k++)",
              "B": "for (int k \u003d 10; k \u003e 0; k--)",
              "C": "for (int k \u003d 0; k \u003c 10; k--)",
              "D": " for (int k \u003d 0; k \u003e 10; k++)",
              "answer": "C",
              "yourAnswer": "A"
            },
            "18": {
              "id": 18,
              "problem": "BufferedWriter类是Writer类的子类，BufferedWriter类中的（）方法可以插入一个换行符。",
              "A": "void newLine()",
              "B": "void close()",
              "C": "void flush()",
              "D": "void write(String str)",
              "answer": "A",
              "yourAnswer": "A"
            },
            "19": {
              "id": 19,
              "problem": "不允许作为类及类的成员的访问控制符的是（）？",
              "A": "public",
              "B": "private",
              "C": "protected",
              "D": "static",
              "answer": "D",
              "yourAnswer": "A"
            },
            "20": {
              "id": 20,
              "problem": "以下标识符中哪项是不合法的( )",
              "A": "int",
              "B": "$double",
              "C": "hello",
              "D": "BigMeaninglessName",
              "answer": "A",
              "yourAnswer": "A"
            }
          }
        },
        "10": {
          "name": "JavaStringBuffer",
          "resource": "src\\pages\\JavaStringBuffer",
          "learned": false,
          "date": "Dec 7, 2020, 1:49:59 PM",
          "integerSelectProblemHashMap": {
            "1": {
              "id": 1,
              "problem": "下列不是重载方法的特征的是（ ）。",
              "A": "参数个数不同",
              "B": "返回值类型不同",
              "C": "参数类型不同",
              "D": "方法名相同",
              "answer": "B",
              "yourAnswer": "A"
            },
            "2": {
              "id": 2,
              "problem": "下列关于包的描述中错误的是（ ）",
              "A": "使用包的原因之一是避免类名重复",
              "B": "包是由.class文件组成的一个集合，是一个文件夹",
              "C": "功能相同或者相关的类一般组织在一个包中",
              "D": "包只能定义一层，即包中不能再有包",
              "answer": "D",
              "yourAnswer": "A"
            },
            "3": {
              "id": 3,
              "problem": "不是合法标识符的是（）",
              "A": "BigO1Long$223",
              "B": "Utfint",
              "C": "$12s",
              "D": "3d",
              "answer": "D",
              "yourAnswer": "A"
            },
            "4": {
              "id": 4,
              "problem": "不是合法标识符的是（）",
              "A": "BigO1Long$223",
              "B": "Utfint",
              "C": "$12s",
              "D": "3d",
              "answer": "D",
              "yourAnswer": "A"
            },
            "5": {
              "id": 5,
              "problem": "以下没有体现出封装性的是（ ）。",
              "A": "将类的成员用访问权限修饰符加以访问控制",
              "B": "提供成员方法操作成员变量",
              "C": "将类的全部成员都设定为public权限",
              "D": "将类按照不同的包组织管理",
              "answer": "C",
              "yourAnswer": "A"
            },
            "6": {
              "id": 6,
              "problem": "结构化程序设计所规定的三种基本控制结构是( )",
              "A": "输入、处理、输出",
              "B": "树形、网形、环形",
              "C": "顺序、选择、循环",
              "D": "主程序、子程序、函数",
              "answer": "C",
              "yourAnswer": "A"
            },
            "7": {
              "id": 7,
              "problem": "下列关于抽象类的描述中，错误的是（ ）。",
              "A": "抽象类中可以包含抽象方法，也可以不包含抽象方法",
              "B": "抽象类不能实例化，即使抽象类中没有声明抽象方法，也不能实例化",
              "C": "不能声明抽象类的变量(对象)",
              "D": "包含抽象方法的类，必须要声明为抽象类",
              "answer": "C",
              "yourAnswer": "A"
            },
            "8": {
              "id": 8,
              "problem": "以下抽象类定义中合法的是（ ）。",
              "A": "abstract Animal{     abstract void growl(); }",
              "B": "class abstract Animal{     abstract void growl(); }",
              "C": "abstract class Animal {     abstract void growl(); } ",
              "D": "abstract class Animal {     abstract void growl() {     } }",
              "answer": "C",
              "yourAnswer": "A"
            },
            "9": {
              "id": 9,
              "problem": "以下关于多态的描述中错误的是（ ）。",
              "A": "重载和重写都是多态的表现形式",
              "B": "多态性分为动态多态性(动态绑定)和静态多态性两种",
              "C": "多态性可以加快代码的运行速度",
              "D": "多态性是面向对象的核心特征之一",
              "answer": "C",
              "yourAnswer": "A"
            },
            "10": {
              "id": 10,
              "problem": "下列不是重载方法的特征的是（ ）。",
              "A": "参数个数不同",
              "B": "返回值类型不同",
              "C": "参数类型不同",
              "D": "方法名相同",
              "answer": "B",
              "yourAnswer": "A"
            },
            "11": {
              "id": 11,
              "problem": "以下程序的结果是（ ）。class Base {     protected void fun(){         System.out.println(0);     } } class Derived extends Base {     protected void fun(){         System.out.println(1);     } } public class Test {     public static void main(String[] args) {         Base b1 \u003d new Derived();         b1.fun();     } }",
              "A": "运行错误",
              "B": "编译错误",
              "C": "0",
              "D": "1",
              "answer": "D",
              "yourAnswer": "A"
            },
            "12": {
              "id": 12,
              "problem": "表达式(11+3*8)/4%3的值是( )",
              "A": "31",
              "B": "0",
              "C": "1",
              "D": "2",
              "answer": "D",
              "yourAnswer": "A"
            },
            "13": {
              "id": 13,
              "problem": "以下程序的输出结果是（ ）。abstract class A {     public abstract void fun();     public void fun(int a) {         System.out.println(a);     } } class TestA extends A {     public static void main(String[] args) {         TestA ta \u003d new TestA();         ta.fun(1);     } }",
              "A": "1",
              "B": "编译错误",
              "C": "运行错误",
              "D": "无输出",
              "answer": "B",
              "yourAnswer": "A"
            },
            "14": {
              "id": 14,
              "problem": "欲构造ArrayList类得一个实例，此类继承了List接口，下列哪个方法是正确的：",
              "A": "ArrayList myList \u003d new Object();",
              "B": "List myList \u003d new ArrayList();",
              "C": "ArraylList myList \u003d new List();",
              "D": "List myList \u003d new List();",
              "answer": "B",
              "yourAnswer": "A"
            },
            "15": {
              "id": 15,
              "problem": "以下关于继承的叙述正确的是( )",
              "A": "在Java中类只允许单一继承",
              "B": "在Java中一个类只能实现一个接口",
              "C": "在Java中一个类不能同时继承一个类和实现一个接口",
              "D": "在Java中接口只允许单一继承",
              "answer": "A",
              "yourAnswer": "A"
            },
            "16": {
              "id": 16,
              "problem": "( )类带有缓冲区，可以把一批数据读到缓冲区，避免每次都从数据源读取数据进行字符编码转换。",
              "A": "Reader",
              "B": "FileReader",
              "C": "Writer",
              "D": "BufferedReader",
              "answer": "D",
              "yourAnswer": "A"
            },
            "17": {
              "id": 17,
              "problem": "接口中方法的修饰符默认是？",
              "A": "public",
              "B": "abstract",
              "C": "public abstract",
              "D": "public static final",
              "answer": "C",
              "yourAnswer": "A"
            },
            "18": {
              "id": 18,
              "problem": "下列关于包的描述中错误的是（ ）",
              "A": "使用包的原因之一是避免类名重复",
              "B": "包是由.class文件组成的一个集合，是一个文件夹",
              "C": "功能相同或者相关的类一般组织在一个包中",
              "D": "包只能定义一层，即包中不能再有包",
              "answer": "D",
              "yourAnswer": "A"
            },
            "19": {
              "id": 19,
              "problem": "下列关于引入包的描述中，错误的是（ ）。",
              "A": "使用项目中其他包中的类时，需要在源程序中写import语句",
              "B": "import语句写在类声明的上面，package语句的下面",
              "C": "import可以引入包中所有类或其中一个类",
              "D": "import语句必须是源文件中第一条语句",
              "answer": "D",
              "yourAnswer": "A"
            },
            "20": {
              "id": 20,
              "problem": "以下没有体现出封装性的是（ ）。",
              "A": "将类的成员用访问权限修饰符加以访问控制",
              "B": "提供成员方法操作成员变量",
              "C": "将类的全部成员都设定为public权限",
              "D": "将类按照不同的包组织管理",
              "answer": "C",
              "yourAnswer": "A"
            }
          }
        },
        "11": {
          "name": "Java数组",
          "resource": "src\\pages\\Java数组",
          "learned": false,
          "date": "Dec 7, 2020, 1:49:59 PM",
          "integerSelectProblemHashMap": {
            "1": {
              "id": 1,
              "problem": "java中所有类的父类是（）？",
              "A": "object",
              "B": "Father",
              "C": "Lang",
              "D": "Exception",
              "answer": "A",
              "yourAnswer": "A"
            },
            "2": {
              "id": 2,
              "problem": "类中存在一个方法int getValue(double x){…}，以下不能与这个方法重载的是（ ）。",
              "A": "int getValue(int x){…};",
              "B": "int getValue(float x){…};",
              "C": "int getValue(double t){…};",
              "D": "int getValue(double x, double y){…};",
              "answer": "C",
              "yourAnswer": "A"
            },
            "3": {
              "id": 3,
              "problem": "类中存在一个方法int getValue(double x){…}，以下不能与这个方法重载的是（ ）。",
              "A": "int getValue(int x){…};",
              "B": "int getValue(float x){…};",
              "C": "int getValue(double t){…};",
              "D": "int getValue(double x, double y){…};",
              "answer": "C",
              "yourAnswer": "A"
            },
            "4": {
              "id": 4,
              "problem": "下列哪一个变量不需要创建对象，直接可以根据类名调用该属性？",
              "A": "public String str;",
              "B": "String str;",
              "C": "public static String str;",
              "D": "str",
              "answer": "C",
              "yourAnswer": "A"
            },
            "5": {
              "id": 5,
              "problem": "下列关于包的描述中错误的是（ ）",
              "A": "使用包的原因之一是避免类名重复",
              "B": "包是由.class文件组成的一个集合，是一个文件夹",
              "C": "功能相同或者相关的类一般组织在一个包中",
              "D": "包只能定义一层，即包中不能再有包",
              "answer": "D",
              "yourAnswer": "A"
            },
            "6": {
              "id": 6,
              "problem": "以下关于重载的说法错误的是（ ）。",
              "A": "重载的方法只要定义正确，调用时就不会有歧义性。",
              "B": "重载的方法通常实现相似的功能",
              "C": "重载的方法可以互相调用，提高代码复用",
              "D": "重载是多态的一种表现形式",
              "answer": "A",
              "yourAnswer": "A"
            },
            "7": {
              "id": 7,
              "problem": "下列不是重载方法的特征的是（ ）。",
              "A": "参数个数不同",
              "B": "返回值类型不同",
              "C": "参数类型不同",
              "D": "方法名相同",
              "answer": "B",
              "yourAnswer": "A"
            },
            "8": {
              "id": 8,
              "problem": "类中存在一个方法int getValue(int x){…}，以下能与这个方法重载的是（ ）。",
              "A": "public getValue(int x){…};",
              "B": "void getValue(int x){…};",
              "C": "int getValue(int x, int y){…};",
              "D": "int get(int x){…};",
              "answer": "C",
              "yourAnswer": "A"
            },
            "9": {
              "id": 9,
              "problem": "接口中的属性会自动被修饰为？",
              "A": "public static",
              "B": "static final",
              "C": "public static final",
              "D": "public final",
              "answer": "C",
              "yourAnswer": "A"
            },
            "10": {
              "id": 10,
              "problem": "不是合法标识符的是（）",
              "A": "Javaworld",
              "B": "_sum",
              "C": "2Java Program",
              "D": "$abc",
              "answer": "C",
              "yourAnswer": "A"
            },
            "11": {
              "id": 11,
              "problem": "java中所有类的父类是（）？",
              "A": "object",
              "B": "Father",
              "C": "Lang",
              "D": "Exception",
              "answer": "A",
              "yourAnswer": "A"
            },
            "12": {
              "id": 12,
              "problem": "一个类要实现接口的功能，可以实现几个方法？",
              "A": "0",
              "B": "1",
              "C": "2",
              "D": "全部",
              "answer": "D",
              "yourAnswer": "A"
            },
            "13": {
              "id": 13,
              "problem": "使用字节输出流FileOutputStream类中的哪个构造方法，在写数据时能够不覆盖文件中原有的内容？",
              "A": "FileOutputStream(String name)",
              "B": "FileOutputStream(File file,String name)",
              "C": "FileOutputStream(String name,boolean append)",
              "D": "FileOutputStream(File file)",
              "answer": "C",
              "yourAnswer": "A"
            },
            "14": {
              "id": 14,
              "problem": "以下关于继承的叙述正确的是( )",
              "A": "在Java中类只允许单一继承",
              "B": "在Java中一个类只能实现一个接口",
              "C": "在Java中一个类不能同时继承一个类和实现一个接口",
              "D": "在Java中接口只允许单一继承",
              "answer": "A",
              "yourAnswer": "A"
            },
            "15": {
              "id": 15,
              "problem": "在创建对象时必须( )",
              "A": "先声明对象，然后才能使用对象",
              "B": "先声明对象，为对象分配内存空间，然后才能使用对象",
              "C": "先声明对象，为对象分配内存空间，对对象初始化，然后才能使用对象",
              "D": "上述说法都对",
              "answer": "C",
              "yourAnswer": "A"
            },
            "16": {
              "id": 16,
              "problem": "接口中所有的方法都是？",
              "A": "实现方法",
              "B": "抽象方法",
              "C": "无返回值的方法",
              "D": "有返回值的方法",
              "answer": "B",
              "yourAnswer": "A"
            },
            "17": {
              "id": 17,
              "problem": "不允许作为类及类的成员的访问控制符的是（）？",
              "A": "public",
              "B": "private",
              "C": "protected",
              "D": "static",
              "answer": "D",
              "yourAnswer": "A"
            },
            "18": {
              "id": 18,
              "problem": "下列关于抽象类的描述中，错误的是（ ）。",
              "A": "抽象类中可以包含抽象方法，也可以不包含抽象方法",
              "B": "抽象类不能实例化，即使抽象类中没有声明抽象方法，也不能实例化",
              "C": "不能声明抽象类的变量(对象)",
              "D": "包含抽象方法的类，必须要声明为抽象类",
              "answer": "C",
              "yourAnswer": "A"
            },
            "19": {
              "id": 19,
              "problem": "欲构造ArrayList类得一个实例，此类继承了List接口，下列哪个方法是正确的：",
              "A": "ArrayList myList \u003d new Object();",
              "B": "List myList \u003d new ArrayList();",
              "C": "ArraylList myList \u003d new List();",
              "D": "List myList \u003d new List();",
              "answer": "B",
              "yourAnswer": "A"
            },
            "20": {
              "id": 20,
              "problem": "一个类可同时定义许多同名的方法，这些方法的形式参数个数、类型或顺序各不相同，传回的值也可以不相同，这种特性称为（ ）。",
              "A": "继承",
              "B": "重写",
              "C": "重载",
              "D": "封装",
              "answer": "C",
              "yourAnswer": "A"
            }
          }
        },
        "12": {
          "name": "Java日期时间",
          "resource": "src\\pages\\Java日期时间",
          "learned": false,
          "date": "Dec 7, 2020, 1:49:59 PM",
          "integerSelectProblemHashMap": {
            "1": {
              "id": 1,
              "problem": "一个类要实现多个接口，用什么关键字?",
              "A": "extends",
              "B": "implements",
              "C": "instanceof",
              "D": "import",
              "answer": "B",
              "yourAnswer": "A"
            },
            "2": {
              "id": 2,
              "problem": "以下标识符中哪项是不合法的( )",
              "A": "int",
              "B": "$double",
              "C": "hello",
              "D": "BigMeaninglessName",
              "answer": "A",
              "yourAnswer": "A"
            },
            "3": {
              "id": 3,
              "problem": "下面哪个是applet传递参数的正确方式？（ ）",
              "A": "\u003capplet code\u003dTest.class age\u003d33 width\u003d1 height\u003d1\u003e",
              "B": "\u003cparam name\u003dage value\u003d33\u003e",
              "C": "\u003capplet code\u003dTest.class name\u003dage value\u003d33 width\u003d1 height\u003d1\u003e",
              "D": "\u003capplet Test 33\u003e",
              "answer": "B",
              "yourAnswer": "A"
            },
            "4": {
              "id": 4,
              "problem": "java中所有类的父类是（）？",
              "A": "object",
              "B": "Father",
              "C": "Lang",
              "D": "Exception",
              "answer": "A",
              "yourAnswer": "A"
            },
            "5": {
              "id": 5,
              "problem": "以下程序的输出结果是（ ）。abstract class A {     public abstract void fun();     public void fun(int a) {         System.out.println(a);     } } class TestA extends A {     public static void main(String[] args) {         TestA ta \u003d new TestA();         ta.fun(1);     } }",
              "A": "1",
              "B": "编译错误",
              "C": "运行错误",
              "D": "无输出",
              "answer": "B",
              "yourAnswer": "A"
            },
            "6": {
              "id": 6,
              "problem": "表达式(11+3*8)/4%3的值是( )",
              "A": "31",
              "B": "0",
              "C": "1",
              "D": "2",
              "answer": "D",
              "yourAnswer": "A"
            },
            "7": {
              "id": 7,
              "problem": "下列说法正确的有（）?",
              "A": "不需要定义类，就能创建对象",
              "B": "对象中必须有属性和方法",
              "C": "属性必须是简单变量",
              "D": "属性可以是简单变量，也可以是一个对象",
              "answer": "D",
              "yourAnswer": "A"
            },
            "8": {
              "id": 8,
              "problem": "下面选项中关于 abstract 的使用正确的是( )。",
              "A": "private abstract void blood();",
              "B": "abstract final void blood ();",
              "C": "static abstract void blood ();",
              "D": "public abstract void blood ();",
              "answer": "D",
              "yourAnswer": "A"
            },
            "9": {
              "id": 9,
              "problem": "下列不是重载方法的特征的是（ ）。",
              "A": "参数个数不同",
              "B": "返回值类型不同",
              "C": "参数类型不同",
              "D": "方法名相同",
              "answer": "B",
              "yourAnswer": "A"
            },
            "10": {
              "id": 10,
              "problem": "接口中所有的方法都是？",
              "A": "实现方法",
              "B": "抽象方法",
              "C": "无返回值的方法",
              "D": "有返回值的方法",
              "answer": "B",
              "yourAnswer": "A"
            },
            "11": {
              "id": 11,
              "problem": "以下关于继承的叙述正确的是( )",
              "A": "在Java中类只允许单一继承",
              "B": "在Java中一个类只能实现一个接口",
              "C": "在Java中一个类不能同时继承一个类和实现一个接口",
              "D": "在Java中接口只允许单一继承",
              "answer": "A",
              "yourAnswer": "A"
            },
            "12": {
              "id": 12,
              "problem": "对于私有构造方法，以下说法正确的是（ ）。",
              "A": "构造方法如果被限定为private则会产生编译错误",
              "B": "不能通过私有构造方法产生类的对象",
              "C": "私有构造方法不能在类外通过new调用创建对象",
              "D": "具有私有构造方法的类不能被继承",
              "answer": "C",
              "yourAnswer": "A"
            },
            "13": {
              "id": 13,
              "problem": "以下程序的输出结果是（ ）。abstract class A {     public abstract void fun();     public void fun(int a) {         System.out.println(a);     } } class TestA extends A {     public static void main(String[] args) {         TestA ta \u003d new TestA();         ta.fun(1);     } }",
              "A": "1",
              "B": "编译错误",
              "C": "运行错误",
              "D": "无输出",
              "answer": "B",
              "yourAnswer": "A"
            },
            "14": {
              "id": 14,
              "problem": "下列关于抽象类的描述中，错误的是（ ）。",
              "A": "抽象类中可以包含抽象方法，也可以不包含抽象方法",
              "B": "抽象类不能实例化，即使抽象类中没有声明抽象方法，也不能实例化",
              "C": "不能声明抽象类的变量(对象)",
              "D": "包含抽象方法的类，必须要声明为抽象类",
              "answer": "C",
              "yourAnswer": "A"
            },
            "15": {
              "id": 15,
              "problem": "类中存在一个方法int getValue(int x){…}，以下能与这个方法重载的是（ ）。",
              "A": "public getValue(int x){…};",
              "B": "void getValue(int x){…};",
              "C": "int getValue(int x, int y){…};",
              "D": "int get(int x){…};",
              "answer": "C",
              "yourAnswer": "A"
            },
            "16": {
              "id": 16,
              "problem": "下面哪一个循环会导致死循环？( )",
              "A": "for (int k \u003d 0; k \u003c 0; k++)",
              "B": "for (int k \u003d 10; k \u003e 0; k--)",
              "C": "for (int k \u003d 0; k \u003c 10; k--)",
              "D": " for (int k \u003d 0; k \u003e 10; k++)",
              "answer": "C",
              "yourAnswer": "A"
            },
            "17": {
              "id": 17,
              "problem": "下列关于包的描述中错误的是（ ）",
              "A": "使用包的原因之一是避免类名重复",
              "B": "包是由.class文件组成的一个集合，是一个文件夹",
              "C": "功能相同或者相关的类一般组织在一个包中",
              "D": "包只能定义一层，即包中不能再有包",
              "answer": "D",
              "yourAnswer": "A"
            },
            "18": {
              "id": 18,
              "problem": "下列关于包的描述中错误的是（ ）",
              "A": "使用包的原因之一是避免类名重复",
              "B": "包是由.class文件组成的一个集合，是一个文件夹",
              "C": "功能相同或者相关的类一般组织在一个包中",
              "D": "包只能定义一层，即包中不能再有包",
              "answer": "D",
              "yourAnswer": "A"
            },
            "19": {
              "id": 19,
              "problem": "( )是FileInputStream的子类，可用于读取二进制文件.",
              "A": "DataOutputStream",
              "B": "DataInputStream",
              "C": "Reader",
              "D": "Writer",
              "answer": "B",
              "yourAnswer": "A"
            },
            "20": {
              "id": 20,
              "problem": "下面选项中关于 abstract 的使用正确的是( )。",
              "A": "private abstract void blood();",
              "B": "abstract final void blood ();",
              "C": "static abstract void blood ();",
              "D": "public abstract void blood ();",
              "answer": "D",
              "yourAnswer": "A"
            }
          }
        },
        "13": {
          "name": "Java正则表达式",
          "resource": "src\\pages\\Java正则表达式",
          "learned": false,
          "date": "Dec 7, 2020, 1:49:59 PM",
          "integerSelectProblemHashMap": {
            "1": {
              "id": 1,
              "problem": "在Java中用什么关键字修饰的方法可以直接通过类名来调用？( )",
              "A": "static",
              "B": "final",
              "C": "private",
              "D": "void",
              "answer": "A",
              "yourAnswer": "A"
            },
            "2": {
              "id": 2,
              "problem": "以下程序的结果是（ ）。class Base {     protected void fun(){         System.out.println(0);     } } class Derived extends Base {     protected void fun(){         System.out.println(1);     } } public class Test {     public static void main(String[] args) {         Base b1 \u003d new Derived();         b1.fun();     } }",
              "A": "运行错误",
              "B": "编译错误",
              "C": "0",
              "D": "1",
              "answer": "D",
              "yourAnswer": "A"
            },
            "3": {
              "id": 3,
              "problem": "有一段java 应用程序，它的主类名是a1，那么保存它的源文件名可以是( )",
              "A": "a1.java",
              "B": "a1.class",
              "C": "a1",
              "D": "都对",
              "answer": "A",
              "yourAnswer": "A"
            },
            "4": {
              "id": 4,
              "problem": "接口中有几个构造方法？",
              "A": "0",
              "B": "1",
              "C": "2",
              "D": "以上都不对",
              "answer": "A",
              "yourAnswer": "A"
            },
            "5": {
              "id": 5,
              "problem": "下面选项中关于 abstract 的使用正确的是( )。",
              "A": "private abstract void blood();",
              "B": "abstract final void blood ();",
              "C": "static abstract void blood ();",
              "D": "public abstract void blood ();",
              "answer": "D",
              "yourAnswer": "A"
            },
            "6": {
              "id": 6,
              "problem": "BufferedWriter类是Writer类的子类，BufferedWriter类中的（）方法可以插入一个换行符。",
              "A": "void newLine()",
              "B": "void close()",
              "C": "void flush()",
              "D": "void write(String str)",
              "answer": "A",
              "yourAnswer": "A"
            },
            "7": {
              "id": 7,
              "problem": "欲构造ArrayList类得一个实例，此类继承了List接口，下列哪个方法是正确的：",
              "A": "ArrayList myList \u003d new Object();",
              "B": "List myList \u003d new ArrayList();",
              "C": "ArraylList myList \u003d new List();",
              "D": "List myList \u003d new List();",
              "answer": "B",
              "yourAnswer": "A"
            },
            "8": {
              "id": 8,
              "problem": "以下程序的输出结果是（ ）。abstract class A {     public abstract void fun();     public void fun(int a) {         System.out.println(a);     } } class TestA extends A {     public static void main(String[] args) {         TestA ta \u003d new TestA();         ta.fun(1);     } }",
              "A": "1",
              "B": "编译错误",
              "C": "运行错误",
              "D": "无输出",
              "answer": "B",
              "yourAnswer": "A"
            },
            "9": {
              "id": 9,
              "problem": "一个类可同时定义许多同名的方法，这些方法的形式参数个数、类型或顺序各不相同，传回的值也可以不相同，这种特性称为（ ）。",
              "A": "继承",
              "B": "重写",
              "C": "重载",
              "D": "封装",
              "answer": "C",
              "yourAnswer": "A"
            },
            "10": {
              "id": 10,
              "problem": "所有Java类都直接或间接继承了哪个类？",
              "A": "String",
              "B": "Object",
              "C": "Interesting",
              "D": "Hero",
              "answer": "B",
              "yourAnswer": "A"
            },
            "11": {
              "id": 11,
              "problem": "以下标识符中哪项是不合法的( )",
              "A": "int",
              "B": "$double",
              "C": "hello",
              "D": "BigMeaninglessName",
              "answer": "A",
              "yourAnswer": "A"
            },
            "12": {
              "id": 12,
              "problem": "结构化程序设计所规定的三种基本控制结构是( )",
              "A": "输入、处理、输出",
              "B": "树形、网形、环形",
              "C": "顺序、选择、循环",
              "D": "主程序、子程序、函数",
              "answer": "C",
              "yourAnswer": "A"
            },
            "13": {
              "id": 13,
              "problem": "下列关于抽象方法的描述中，错误的是（ ）。",
              "A": "抽象方法声明只需给出方法头，不能写方法体，直接以分号结束",
              "B": "所有的方法都可以声明为抽象方法",
              "C": "构造方法不能声明为抽象方法",
              "D": "声明抽象方法使用关键字abstract修饰",
              "answer": "B",
              "yourAnswer": "A"
            },
            "14": {
              "id": 14,
              "problem": "下列关于打包的描述中，错误的是（ ）。",
              "A": "一个源文件中最多包含一条package语句，且必须是第一条语句",
              "B": "一个源文件中定义的类的字节码可以存放于不同的包中",
              "C": "若源文件中没有包含package语句，则类的字节码被放入无名包中",
              "D": "不在一个源文件中定义的子类和父类可以位于不同包中",
              "answer": "B",
              "yourAnswer": "A"
            },
            "15": {
              "id": 15,
              "problem": "Java的核心包中，提供编程应用的基本类包是（ ）",
              "A": "java.util",
              "B": "java.lang",
              "C": "java.applet",
              "D": "java.rmi",
              "answer": "B",
              "yourAnswer": "A"
            },
            "16": {
              "id": 16,
              "problem": "以下不是面向对象特征的是（ ）。",
              "A": "继承",
              "B": "代码复制",
              "C": "封装",
              "D": "多态",
              "answer": "B",
              "yourAnswer": "A"
            },
            "17": {
              "id": 17,
              "problem": "以下关于重载的说法错误的是（ ）。",
              "A": "重载的方法只要定义正确，调用时就不会有歧义性。",
              "B": "重载的方法通常实现相似的功能",
              "C": "重载的方法可以互相调用，提高代码复用",
              "D": "重载是多态的一种表现形式",
              "answer": "A",
              "yourAnswer": "A"
            },
            "18": {
              "id": 18,
              "problem": "不允许作为类及类的成员的访问控制符的是（）？",
              "A": "public",
              "B": "private",
              "C": "protected",
              "D": "static",
              "answer": "D",
              "yourAnswer": "A"
            },
            "19": {
              "id": 19,
              "problem": "已知A类具有以下四个成员方法，a是A类的对象，则a.fun(1, 3.14F)调用的是（ ）。",
              "A": "public void fun(int a, double b){…}",
              "B": "public int fun(double a, double b){…}",
              "C": "public void fun(float a, float b){…}",
              "D": "public float fun(int a, float b){…}",
              "answer": "D",
              "yourAnswer": "A"
            },
            "20": {
              "id": 20,
              "problem": "( )类带有缓冲区，可以把一批数据读到缓冲区，避免每次都从数据源读取数据进行字符编码转换。",
              "A": "Reader",
              "B": "FileReader",
              "C": "Writer",
              "D": "BufferedReader",
              "answer": "D",
              "yourAnswer": "A"
            }
          }
        },
        "14": {
          "name": "Java方法",
          "resource": "src\\pages\\Java方法",
          "learned": false,
          "date": "Dec 7, 2020, 1:49:59 PM",
          "integerSelectProblemHashMap": {
            "1": {
              "id": 1,
              "problem": "下面哪一个循环会导致死循环？( )",
              "A": "for (int k \u003d 0; k \u003c 0; k++)",
              "B": "for (int k \u003d 10; k \u003e 0; k--)",
              "C": "for (int k \u003d 0; k \u003c 10; k--)",
              "D": " for (int k \u003d 0; k \u003e 10; k++)",
              "answer": "C",
              "yourAnswer": "A"
            },
            "2": {
              "id": 2,
              "problem": "以下关于重载的说法错误的是（ ）。",
              "A": "重载的方法只要定义正确，调用时就不会有歧义性。",
              "B": "重载的方法通常实现相似的功能",
              "C": "重载的方法可以互相调用，提高代码复用",
              "D": "重载是多态的一种表现形式",
              "answer": "A",
              "yourAnswer": "A"
            },
            "3": {
              "id": 3,
              "problem": "( )类带有缓冲区，可以把一批数据读到缓冲区，避免每次都从数据源读取数据进行字符编码转换。",
              "A": "Reader",
              "B": "FileReader",
              "C": "Writer",
              "D": "BufferedReader",
              "answer": "D",
              "yourAnswer": "A"
            },
            "4": {
              "id": 4,
              "problem": "java中所有类的父类是（）？",
              "A": "object",
              "B": "Father",
              "C": "Lang",
              "D": "Exception",
              "answer": "A",
              "yourAnswer": "A"
            },
            "5": {
              "id": 5,
              "problem": "以下不是面向对象特征的是（ ）。",
              "A": "继承",
              "B": "代码复制",
              "C": "封装",
              "D": "多态",
              "answer": "B",
              "yourAnswer": "A"
            },
            "6": {
              "id": 6,
              "problem": "下面哪一个循环会导致死循环？( )",
              "A": "for (int k \u003d 0; k \u003c 0; k++)",
              "B": "for (int k \u003d 10; k \u003e 0; k--)",
              "C": "for (int k \u003d 0; k \u003c 10; k--)",
              "D": " for (int k \u003d 0; k \u003e 10; k++)",
              "answer": "C",
              "yourAnswer": "A"
            },
            "7": {
              "id": 7,
              "problem": "假设现在有一个对象X,有一个属性a.则访问当前属性的方法是（）？",
              "A": "a.x",
              "B": "x.a",
              "C": "A.x",
              "D": "X.a",
              "answer": "D",
              "yourAnswer": "A"
            },
            "8": {
              "id": 8,
              "problem": "使用字节输出流FileOutputStream类中的哪个构造方法，在写数据时能够不覆盖文件中原有的内容？",
              "A": "FileOutputStream(String name)",
              "B": "FileOutputStream(File file,String name)",
              "C": "FileOutputStream(String name,boolean append)",
              "D": "FileOutputStream(File file)",
              "answer": "C",
              "yourAnswer": "A"
            },
            "9": {
              "id": 9,
              "problem": "Java的核心包中，提供编程应用的基本类包是（ ）",
              "A": "java.util",
              "B": "java.lang",
              "C": "java.applet",
              "D": "java.rmi",
              "answer": "B",
              "yourAnswer": "A"
            },
            "10": {
              "id": 10,
              "problem": "下列关于打包的描述中，错误的是（ ）。",
              "A": "一个源文件中最多包含一条package语句，且必须是第一条语句",
              "B": "一个源文件中定义的类的字节码可以存放于不同的包中",
              "C": "若源文件中没有包含package语句，则类的字节码被放入无名包中",
              "D": "不在一个源文件中定义的子类和父类可以位于不同包中",
              "answer": "B",
              "yourAnswer": "A"
            },
            "11": {
              "id": 11,
              "problem": "如果类中成员的定义没有用访问权限修饰符，则该成员不能被（ ）访问。",
              "A": "同一个包中子类",
              "B": "子类",
              "C": "同一个包中其他类",
              "D": "其他包中所有类",
              "answer": "D",
              "yourAnswer": "A"
            },
            "12": {
              "id": 12,
              "problem": "( )是FileInputStream的子类，可用于读取二进制文件.",
              "A": "DataOutputStream",
              "B": "DataInputStream",
              "C": "Reader",
              "D": "Writer",
              "answer": "B",
              "yourAnswer": "A"
            },
            "13": {
              "id": 13,
              "problem": "如果希望类中成员能被所有子类继承后像自身成员一样直接访问，则应该使用修饰符（）",
              "A": "default",
              "B": "protected",
              "C": "不写",
              "D": "private",
              "answer": " ",
              "yourAnswer": "A"
            },
            "14": {
              "id": 14,
              "problem": "结构化程序设计所规定的三种基本控制结构是( )",
              "A": "输入、处理、输出",
              "B": "树形、网形、环形",
              "C": "顺序、选择、循环",
              "D": "主程序、子程序、函数",
              "answer": "C",
              "yourAnswer": "A"
            },
            "15": {
              "id": 15,
              "problem": "以下程序的结果是（ ）。class Base {     protected void fun(){         System.out.println(0);     } } class Derived extends Base {     protected void fun(){         System.out.println(1);     } } public class Test {     public static void main(String[] args) {         Base b1 \u003d new Derived();         b1.fun();     } }",
              "A": "运行错误",
              "B": "编译错误",
              "C": "0",
              "D": "1",
              "answer": "D",
              "yourAnswer": "A"
            },
            "16": {
              "id": 16,
              "problem": "如果希望类中成员即使被子类继承也只能通过父类方法间接访问，则应该使用修饰符（）",
              "A": "public",
              "B": "protected",
              "C": "不写",
              "D": "private",
              "answer": "D",
              "yourAnswer": "A"
            },
            "17": {
              "id": 17,
              "problem": "在Java中用什么关键字修饰的方法可以直接通过类名来调用？( )",
              "A": "static",
              "B": "final",
              "C": "private",
              "D": "void",
              "answer": "A",
              "yourAnswer": "A"
            },
            "18": {
              "id": 18,
              "problem": "不是合法标识符的是（）",
              "A": "Javaworld",
              "B": "_sum",
              "C": "2Java Program",
              "D": "$abc",
              "answer": "C",
              "yourAnswer": "A"
            },
            "19": {
              "id": 19,
              "problem": "下列关于包的描述中错误的是（ ）",
              "A": "使用包的原因之一是避免类名重复",
              "B": "包是由.class文件组成的一个集合，是一个文件夹",
              "C": "功能相同或者相关的类一般组织在一个包中",
              "D": "包只能定义一层，即包中不能再有包",
              "answer": "D",
              "yourAnswer": "A"
            },
            "20": {
              "id": 20,
              "problem": "Java的核心包中，提供编程应用的基本类包是（ ）",
              "A": "java.util",
              "B": "java.lang",
              "C": "java.applet",
              "D": "java.rmi",
              "answer": "B",
              "yourAnswer": "A"
            }
          }
        },
        "15": {
          "name": "JavaStream、File、IO",
          "resource": "src\\pages\\JavaStream、File、IO",
          "learned": false,
          "date": "Dec 7, 2020, 1:49:59 PM",
          "integerSelectProblemHashMap": {
            "1": {
              "id": 1,
              "problem": "不是合法标识符的是（）",
              "A": "Javaworld",
              "B": "_sum",
              "C": "2Java Program",
              "D": "$abc",
              "answer": "C",
              "yourAnswer": "A"
            },
            "2": {
              "id": 2,
              "problem": "下列关于抽象方法的描述中，错误的是（ ）。",
              "A": "抽象方法声明只需给出方法头，不能写方法体，直接以分号结束",
              "B": "所有的方法都可以声明为抽象方法",
              "C": "构造方法不能声明为抽象方法",
              "D": "声明抽象方法使用关键字abstract修饰",
              "answer": "B",
              "yourAnswer": "A"
            },
            "3": {
              "id": 3,
              "problem": "欲构造ArrayList类得一个实例，此类继承了List接口，下列哪个方法是正确的：",
              "A": "ArrayList myList \u003d new Object();",
              "B": "List myList \u003d new ArrayList();",
              "C": "ArraylList myList \u003d new List();",
              "D": "List myList \u003d new List();",
              "answer": "B",
              "yourAnswer": "A"
            },
            "4": {
              "id": 4,
              "problem": "下列说法正确的有（）?",
              "A": "不需要定义类，就能创建对象",
              "B": "对象中必须有属性和方法",
              "C": "属性必须是简单变量",
              "D": "属性可以是简单变量，也可以是一个对象",
              "answer": "D",
              "yourAnswer": "A"
            },
            "5": {
              "id": 5,
              "problem": "( )是FileInputStream的子类，可用于读取二进制文件.",
              "A": "DataOutputStream",
              "B": "DataInputStream",
              "C": "Reader",
              "D": "Writer",
              "answer": "B",
              "yourAnswer": "A"
            },
            "6": {
              "id": 6,
              "problem": "不是合法标识符的是（）",
              "A": "BigO1Long$223",
              "B": "Utfint",
              "C": "$12s",
              "D": "3d",
              "answer": "D",
              "yourAnswer": "A"
            },
            "7": {
              "id": 7,
              "problem": "下列关于构造方法的叙述中，错误的是( )",
              "A": "Java语言规定构造方法名与类名必须相同",
              "B": "Java语言规定构造方法没有返回值，但不用void声明",
              "C": "Java语言规定构造方法不可以重载",
              "D": "Java语言规定构造方法只能通过new自动调用",
              "answer": "C",
              "yourAnswer": "A"
            },
            "8": {
              "id": 8,
              "problem": "以下关于多态的描述中错误的是（ ）。",
              "A": "重载和重写都是多态的表现形式",
              "B": "多态性分为动态多态性(动态绑定)和静态多态性两种",
              "C": "多态性可以加快代码的运行速度",
              "D": "多态性是面向对象的核心特征之一",
              "answer": "C",
              "yourAnswer": "A"
            },
            "9": {
              "id": 9,
              "problem": "类中存在一个方法int getValue(double x){…}，以下不能与这个方法重载的是（ ）。",
              "A": "int getValue(int x){…};",
              "B": "int getValue(float x){…};",
              "C": "int getValue(double t){…};",
              "D": "int getValue(double x, double y){…};",
              "answer": "C",
              "yourAnswer": "A"
            },
            "10": {
              "id": 10,
              "problem": "不是合法标识符的是（）",
              "A": "BigO1Long$223",
              "B": "Utfint",
              "C": "$12s",
              "D": "3d",
              "answer": "D",
              "yourAnswer": "A"
            },
            "11": {
              "id": 11,
              "problem": "以下关于多态的描述中错误的是（ ）。",
              "A": "重载和重写都是多态的表现形式",
              "B": "多态性分为动态多态性(动态绑定)和静态多态性两种",
              "C": "多态性可以加快代码的运行速度",
              "D": "多态性是面向对象的核心特征之一",
              "answer": "C",
              "yourAnswer": "A"
            },
            "12": {
              "id": 12,
              "problem": "不是合法标识符的是（）",
              "A": "Javaworld",
              "B": "_sum",
              "C": "2Java Program",
              "D": "$abc",
              "answer": "C",
              "yourAnswer": "A"
            },
            "13": {
              "id": 13,
              "problem": "下列说法正确的有（）?",
              "A": "不需要定义类，就能创建对象",
              "B": "对象中必须有属性和方法",
              "C": "属性必须是简单变量",
              "D": "属性可以是简单变量，也可以是一个对象",
              "answer": "D",
              "yourAnswer": "A"
            },
            "14": {
              "id": 14,
              "problem": "下面哪一个循环会导致死循环？( )",
              "A": "for (int k \u003d 0; k \u003c 0; k++)",
              "B": "for (int k \u003d 10; k \u003e 0; k--)",
              "C": "for (int k \u003d 0; k \u003c 10; k--)",
              "D": " for (int k \u003d 0; k \u003e 10; k++)",
              "answer": "C",
              "yourAnswer": "A"
            },
            "15": {
              "id": 15,
              "problem": "InputStream类的作用就是将文件中的数据读入到内存中，该类中的哪个方法可以关闭文件输入流对象？",
              "A": "int read()",
              "B": "void close()",
              "C": "int available()",
              "D": "int read(byte[] b)",
              "answer": "B",
              "yourAnswer": "A"
            },
            "16": {
              "id": 16,
              "problem": "以下不是面向对象特征的是（ ）。",
              "A": "继承",
              "B": "代码复制",
              "C": "封装",
              "D": "多态",
              "answer": "B",
              "yourAnswer": "A"
            },
            "17": {
              "id": 17,
              "problem": "一个类可同时定义许多同名的方法，这些方法的形式参数个数、类型或顺序各不相同，传回的值也可以不相同，这种特性称为（ ）。",
              "A": "继承",
              "B": "重写",
              "C": "重载",
              "D": "封装",
              "answer": "C",
              "yourAnswer": "A"
            },
            "18": {
              "id": 18,
              "problem": "以下关于继承的叙述正确的是( )",
              "A": "在Java中类只允许单一继承",
              "B": "在Java中一个类只能实现一个接口",
              "C": "在Java中一个类不能同时继承一个类和实现一个接口",
              "D": "在Java中接口只允许单一继承",
              "answer": "A",
              "yourAnswer": "A"
            },
            "19": {
              "id": 19,
              "problem": "下列哪一个变量不需要创建对象，直接可以根据类名调用该属性？",
              "A": "public String str;",
              "B": "String str;",
              "C": "public static String str;",
              "D": "str",
              "answer": "C",
              "yourAnswer": "A"
            },
            "20": {
              "id": 20,
              "problem": "若A是抽象类，B是其子类且A和B都有默认构造方法，则以下语句非法的是（ ）。",
              "A": "A a;",
              "B": "A a \u003d new A();",
              "C": "A a[] \u003d new A[4];",
              "D": "A a \u003d new B();",
              "answer": "B",
              "yourAnswer": "A"
            }
          }
        },
        "16": {
          "name": "JavaScanner类",
          "resource": "src\\pages\\JavaScanner类",
          "learned": false,
          "date": "Dec 7, 2020, 1:49:59 PM",
          "integerSelectProblemHashMap": {
            "1": {
              "id": 1,
              "problem": "不允许作为类及类的成员的访问控制符的是（）？",
              "A": "public",
              "B": "private",
              "C": "protected",
              "D": "static",
              "answer": "D",
              "yourAnswer": "A"
            },
            "2": {
              "id": 2,
              "problem": "以下关于重载的说法错误的是（ ）。",
              "A": "重载的方法只要定义正确，调用时就不会有歧义性。",
              "B": "重载的方法通常实现相似的功能",
              "C": "重载的方法可以互相调用，提高代码复用",
              "D": "重载是多态的一种表现形式",
              "answer": "A",
              "yourAnswer": "A"
            },
            "3": {
              "id": 3,
              "problem": "对于私有构造方法，以下说法正确的是（ ）。",
              "A": "构造方法如果被限定为private则会产生编译错误",
              "B": "不能通过私有构造方法产生类的对象",
              "C": "私有构造方法不能在类外通过new调用创建对象",
              "D": "具有私有构造方法的类不能被继承",
              "answer": "C",
              "yourAnswer": "A"
            },
            "4": {
              "id": 4,
              "problem": "下列关于抽象方法的描述中，错误的是（ ）。",
              "A": "抽象方法声明只需给出方法头，不能写方法体，直接以分号结束",
              "B": "所有的方法都可以声明为抽象方法",
              "C": "构造方法不能声明为抽象方法",
              "D": "声明抽象方法使用关键字abstract修饰",
              "answer": "B",
              "yourAnswer": "A"
            },
            "5": {
              "id": 5,
              "problem": "Java中( )",
              "A": "一个子类可以有多个父类，一个父类也可以有多个子类",
              "B": "一个子类可以有多个父类，但一个父类只可以有一个子类",
              "C": "一个子类可以有一个父类，但一个父类可以有多个子类",
              "D": "上述说法都不对",
              "answer": "C",
              "yourAnswer": "A"
            },
            "6": {
              "id": 6,
              "problem": "以下关于多态的描述中错误的是（ ）。",
              "A": "重载和重写都是多态的表现形式",
              "B": "多态性分为动态多态性(动态绑定)和静态多态性两种",
              "C": "多态性可以加快代码的运行速度",
              "D": "多态性是面向对象的核心特征之一",
              "answer": "C",
              "yourAnswer": "A"
            },
            "7": {
              "id": 7,
              "problem": "一个类要实现多个接口，用什么关键字?",
              "A": "extends",
              "B": "implements",
              "C": "instanceof",
              "D": "import",
              "answer": "B",
              "yourAnswer": "A"
            },
            "8": {
              "id": 8,
              "problem": "接口中方法的方法体内可以有几条代码？",
              "A": "0",
              "B": "1",
              "C": "2",
              "D": "多条",
              "answer": "A",
              "yourAnswer": "A"
            },
            "9": {
              "id": 9,
              "problem": "Java的核心包中，提供编程应用的基本类包是（ ）",
              "A": "java.util",
              "B": "java.lang",
              "C": "java.applet",
              "D": "java.rmi",
              "answer": "B",
              "yourAnswer": "A"
            },
            "10": {
              "id": 10,
              "problem": "以下不是面向对象特征的是（ ）。",
              "A": "继承",
              "B": "代码复制",
              "C": "封装",
              "D": "多态",
              "answer": "B",
              "yourAnswer": "A"
            },
            "11": {
              "id": 11,
              "problem": "接口中的属性会自动被修饰为？",
              "A": "public static",
              "B": "static final",
              "C": "public static final",
              "D": "public final",
              "answer": "C",
              "yourAnswer": "A"
            },
            "12": {
              "id": 12,
              "problem": "一个类可同时定义许多同名的方法，这些方法的形式参数个数、类型或顺序各不相同，传回的值也可以不相同，这种特性称为（ ）。",
              "A": "继承",
              "B": "重写",
              "C": "重载",
              "D": "封装",
              "answer": "C",
              "yourAnswer": "A"
            },
            "13": {
              "id": 13,
              "problem": "如果类中成员的定义没有用访问权限修饰符，则该成员不能被（ ）访问。",
              "A": "同一个包中子类",
              "B": "子类",
              "C": "同一个包中其他类",
              "D": "其他包中所有类",
              "answer": "D",
              "yourAnswer": "A"
            },
            "14": {
              "id": 14,
              "problem": "以下关于重载的说法错误的是（ ）。",
              "A": "重载的方法只要定义正确，调用时就不会有歧义性。",
              "B": "重载的方法通常实现相似的功能",
              "C": "重载的方法可以互相调用，提高代码复用",
              "D": "重载是多态的一种表现形式",
              "answer": "A",
              "yourAnswer": "A"
            },
            "15": {
              "id": 15,
              "problem": "以下关于继承的叙述正确的是( )",
              "A": "在Java中类只允许单一继承",
              "B": "在Java中一个类只能实现一个接口",
              "C": "在Java中一个类不能同时继承一个类和实现一个接口",
              "D": "在Java中接口只允许单一继承",
              "answer": "A",
              "yourAnswer": "A"
            },
            "16": {
              "id": 16,
              "problem": "下面哪一个循环会导致死循环？( )",
              "A": "for (int k \u003d 0; k \u003c 0; k++)",
              "B": "for (int k \u003d 10; k \u003e 0; k--)",
              "C": "for (int k \u003d 0; k \u003c 10; k--)",
              "D": " for (int k \u003d 0; k \u003e 10; k++)",
              "answer": "C",
              "yourAnswer": "A"
            },
            "17": {
              "id": 17,
              "problem": "接口中的属性会自动被修饰为？",
              "A": "public static",
              "B": "static final",
              "C": "public static final",
              "D": "public final",
              "answer": "C",
              "yourAnswer": "A"
            },
            "18": {
              "id": 18,
              "problem": "如果类中成员的定义没有用访问权限修饰符，则该成员不能被（ ）访问。",
              "A": "同一个包中子类",
              "B": "子类",
              "C": "同一个包中其他类",
              "D": "其他包中所有类",
              "answer": "D",
              "yourAnswer": "A"
            },
            "19": {
              "id": 19,
              "problem": "( )是FileInputStream的子类，可用于读取二进制文件.",
              "A": "DataOutputStream",
              "B": "DataInputStream",
              "C": "Reader",
              "D": "Writer",
              "answer": "B",
              "yourAnswer": "A"
            },
            "20": {
              "id": 20,
              "problem": "假设现在有一个对象X,有一个属性a.则访问当前属性的方法是（）？",
              "A": "a.x",
              "B": "x.a",
              "C": "A.x",
              "D": "X.a",
              "answer": "D",
              "yourAnswer": "A"
            }
          }
        },
        "17": {
          "name": "Java异常处理",
          "resource": "src\\pages\\Java异常处理",
          "learned": false,
          "date": "Dec 7, 2020, 1:49:59 PM",
          "integerSelectProblemHashMap": {
            "1": {
              "id": 1,
              "problem": "以下标识符中哪项是不合法的( )",
              "A": "int",
              "B": "$double",
              "C": "hello",
              "D": "BigMeaninglessName",
              "answer": "A",
              "yourAnswer": "A"
            },
            "2": {
              "id": 2,
              "problem": "一个类可同时定义许多同名的方法，这些方法的形式参数个数、类型或顺序各不相同，传回的值也可以不相同，这种特性称为（ ）。",
              "A": "继承",
              "B": "重写",
              "C": "重载",
              "D": "封装",
              "answer": "C",
              "yourAnswer": "A"
            },
            "3": {
              "id": 3,
              "problem": "使用字节输出流FileOutputStream类中的哪个构造方法，在写数据时能够不覆盖文件中原有的内容？",
              "A": "FileOutputStream(String name)",
              "B": "FileOutputStream(File file,String name)",
              "C": "FileOutputStream(String name,boolean append)",
              "D": "FileOutputStream(File file)",
              "answer": "C",
              "yourAnswer": "A"
            },
            "4": {
              "id": 4,
              "problem": "有一段java 应用程序，它的主类名是a1，那么保存它的源文件名可以是( )",
              "A": "a1.java",
              "B": "a1.class",
              "C": "a1",
              "D": "都对",
              "answer": "A",
              "yourAnswer": "A"
            },
            "5": {
              "id": 5,
              "problem": "表达式(11+3*8)/4%3的值是( )",
              "A": "31",
              "B": "0",
              "C": "1",
              "D": "2",
              "answer": "D",
              "yourAnswer": "A"
            },
            "6": {
              "id": 6,
              "problem": "( )是FileInputStream的子类，可用于读取二进制文件.",
              "A": "DataOutputStream",
              "B": "DataInputStream",
              "C": "Reader",
              "D": "Writer",
              "answer": "B",
              "yourAnswer": "A"
            },
            "7": {
              "id": 7,
              "problem": "下列关于抽象类的描述中，错误的是（ ）。",
              "A": "抽象类中可以包含抽象方法，也可以不包含抽象方法",
              "B": "抽象类不能实例化，即使抽象类中没有声明抽象方法，也不能实例化",
              "C": "不能声明抽象类的变量(对象)",
              "D": "包含抽象方法的类，必须要声明为抽象类",
              "answer": "C",
              "yourAnswer": "A"
            },
            "8": {
              "id": 8,
              "problem": "假设现在有一个对象X,有一个属性a.则访问当前属性的方法是（）？",
              "A": "a.x",
              "B": "x.a",
              "C": "A.x",
              "D": "X.a",
              "answer": "D",
              "yourAnswer": "A"
            },
            "9": {
              "id": 9,
              "problem": "下列关于打包的描述中，错误的是（ ）。",
              "A": "一个源文件中最多包含一条package语句，且必须是第一条语句",
              "B": "一个源文件中定义的类的字节码可以存放于不同的包中",
              "C": "若源文件中没有包含package语句，则类的字节码被放入无名包中",
              "D": "不在一个源文件中定义的子类和父类可以位于不同包中",
              "answer": "B",
              "yourAnswer": "A"
            },
            "10": {
              "id": 10,
              "problem": "以下抽象类定义中合法的是（ ）。",
              "A": "abstract Animal{     abstract void growl(); }",
              "B": "class abstract Animal{     abstract void growl(); }",
              "C": "abstract class Animal {     abstract void growl(); } ",
              "D": "abstract class Animal {     abstract void growl() {     } }",
              "answer": "C",
              "yourAnswer": "A"
            },
            "11": {
              "id": 11,
              "problem": "Java中( )",
              "A": "一个子类可以有多个父类，一个父类也可以有多个子类",
              "B": "一个子类可以有多个父类，但一个父类只可以有一个子类",
              "C": "一个子类可以有一个父类，但一个父类可以有多个子类",
              "D": "上述说法都不对",
              "answer": "C",
              "yourAnswer": "A"
            },
            "12": {
              "id": 12,
              "problem": "以下抽象类定义中合法的是（ ）。",
              "A": "abstract Animal{     abstract void growl(); }",
              "B": "class abstract Animal{     abstract void growl(); }",
              "C": "abstract class Animal {     abstract void growl(); } ",
              "D": "abstract class Animal {     abstract void growl() {     } }",
              "answer": "C",
              "yourAnswer": "A"
            },
            "13": {
              "id": 13,
              "problem": "以下程序的输出结果是（ ）。abstract class A {     public abstract void fun();     public void fun(int a) {         System.out.println(a);     } } class TestA extends A {     public static void main(String[] args) {         TestA ta \u003d new TestA();         ta.fun(1);     } }",
              "A": "1",
              "B": "编译错误",
              "C": "运行错误",
              "D": "无输出",
              "answer": "B",
              "yourAnswer": "A"
            },
            "14": {
              "id": 14,
              "problem": "一个类可同时定义许多同名的方法，这些方法的形式参数个数、类型或顺序各不相同，传回的值也可以不相同，这种特性称为（ ）。",
              "A": "继承",
              "B": "重写",
              "C": "重载",
              "D": "封装",
              "answer": "C",
              "yourAnswer": "A"
            },
            "15": {
              "id": 15,
              "problem": "有一段java 应用程序，它的主类名是a1，那么保存它的源文件名可以是( )",
              "A": "a1.java",
              "B": "a1.class",
              "C": "a1",
              "D": "都对",
              "answer": "A",
              "yourAnswer": "A"
            },
            "16": {
              "id": 16,
              "problem": "下列不可作为java语言修饰符的是( )",
              "A": "a1",
              "B": "$1",
              "C": "_1",
              "D": "11",
              "answer": "D",
              "yourAnswer": "A"
            },
            "17": {
              "id": 17,
              "problem": "( )类带有缓冲区，可以把一批数据读到缓冲区，避免每次都从数据源读取数据进行字符编码转换。",
              "A": "Reader",
              "B": "FileReader",
              "C": "Writer",
              "D": "BufferedReader",
              "answer": "D",
              "yourAnswer": "A"
            },
            "18": {
              "id": 18,
              "problem": "对于私有构造方法，以下说法正确的是（ ）。",
              "A": "构造方法如果被限定为private则会产生编译错误",
              "B": "不能通过私有构造方法产生类的对象",
              "C": "私有构造方法不能在类外通过new调用创建对象",
              "D": "具有私有构造方法的类不能被继承",
              "answer": "C",
              "yourAnswer": "A"
            },
            "19": {
              "id": 19,
              "problem": "接口中所有的方法都是？",
              "A": "实现方法",
              "B": "抽象方法",
              "C": "无返回值的方法",
              "D": "有返回值的方法",
              "answer": "B",
              "yourAnswer": "A"
            },
            "20": {
              "id": 20,
              "problem": "接口中所有的方法都是？",
              "A": "实现方法",
              "B": "抽象方法",
              "C": "无返回值的方法",
              "D": "有返回值的方法",
              "answer": "B",
              "yourAnswer": "A"
            }
          }
        }
      }
    }
  }
}